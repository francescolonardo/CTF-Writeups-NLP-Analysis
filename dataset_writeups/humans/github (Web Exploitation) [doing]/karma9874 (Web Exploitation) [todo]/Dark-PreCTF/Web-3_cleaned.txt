From the description, it suggests about the jwt key confusion attack.

Log in with junk value, check cookies, use [jwt.io](http://jwt.io) on token value 

On checking cookies we see there is key `token` with some value, checking it on [jwt.io]() get this

The token is using RS256 algorithm, on accessing `/robots.txt` we see there is some public key.

So seeing the description we know it should be jwt confusion attack which is changing the `Asymmetric Cipher Algorithm to Symmetric Cipher Algorithm`

So we need to build an HMAC(HS256) token using the public key as a secret to it. I used nodejs `jsonwebtoken` library to do this stuff:
[Node.js script: Sign JWT token with public key as secret and use HS256 algorithm]

Now access the `/flag` using the token as cookie and we get the flag

The bug in this challenge was that, at the time of encoding the JWT token, the code was only using the RS256 algorithm, but during verification, it was using both RS256 and HS256 algorithms.
