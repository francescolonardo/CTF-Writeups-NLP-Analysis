{
    "Command Injection": [
        "Chose to craft a spaceless command injection payload.",
        "Finalized the payload as 'http://IP:PORT/?command=%22curl${IFS}http://localhost:3000/get_flag%22'."
    ],
    "JWT Manipulation": [
        "Replace the JWT token with the admin token."
    ],
    "Python Flask Application": [
        "A Python Flask application, does this in 'xss-cookie-stealer.py'. This script defines one route, '/', which reads the 'c' parameter in the request URL, opens a file called 'cookies.txt', writes the contents of 'c' parameter to that file, and then redirects to 'https://google.com'."
    ],
    "Script Execution and Analysis": [
        "You can run this script anywhere that is internet accessible, port forward port '16361' or deploy on Google Cloud. But, the easiest method is to use ngrok.",
        "Locate the file 'build_flag_checker.yml'",
        "Analyze the contents of 'build_flag_checker.yml'",
        "Open the 'flaghash.sh' script",
        "Write a LaTeX script.",
        "Run Dirb to scan for hidden directories or files",
        "Open the final.txt file in the path",
        "Created a Python script for a brute-force attack on the prefix.",
        "Accessed files such as '.git/HEAD'",
        "Used dumper from GitTools to inspect the git repo",
        "Initiate brute force attack on the token.",
        "Research the hashpumpy function",
        "Extract the source code from /src.tgz.",
        "Or, use Wireshark for analyzing the HTTP traffic.",
        "Utilize the requests library in Python for communication.",
        "Code the script to play the game repeatedly.",
        "Search for the flag within the script's output.",
        "Added a header named 'answer'",
        "Retrieve content of index.php file",
        "Script retrieves all characters.",
        "Implemented a loop in the Python script.",
        "Script iteratively reads the transmissions.",
        "Revealed that a 'vim' command must be used.",
        "Execute the Python script",
        "Sign the JWT with 'dawgCTF?heckin#bamboozle' secret",
        "Calculate the 'passcode'.",
        "Include /var/www/html/flag.php in the POST request",
        "Updated length of URL string according to the previous string replacement.",
        "Retrieve the flag from the file \"flag.txt\".",
        "Craft a URL using the identified character.",
        "Observe the form field requesting an IP address.",
        "Use the 'strings' command to extract the flag from the binary data in the 'print-flag' file.",
        "Use S3Scanner to dump the contents of the suspect S3 bucket",
        "Append the new HMAC signature to the header and payload.",
        "Download the provided PHP files",
        "Find the flag file in the current working directory.",
        "Generate more base64 cookies.",
        "Base64 encode the filenames `index.php` and `getimg.php`.",
        "Pull multiple .git files such as `.git/index`, `.git/config`, `.git/HEAD` etc., from the server.",
        "Identify the debugging private key.",
        "Wrote a request to the root directory",
        "The script reads from '/mydank'",
        "Create a request for '/admin../uberadmin/flag.txt'.",
        "Replace parentheses with backticks in the script",
        "Open the source.zip file.",
        "Import 'io/ioutil'."
    ]
}