{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the website and locate the interesting endpoint with remote shell functionality, which is blocked by an HTTP 502 error."
            },
            {
                "StepNumber": 2,
                "StepString": "Investigate the <postid> functionality that allows inserting comments under a picture."
            },
            {
                "StepNumber": 3,
                "StepString": "Discover a way to use format strings like {rating} in the comment text to print the contents of self.__dict__."
            },
            {
                "StepNumber": 4,
                "StepString": "Use a code snippet to access global objects and spot user credentials, then authenticate and create new users."
            },
            {
                "StepNumber": 5,
                "StepString": "Identify the interesting behavior in the login method and understand how f-Strings functionality can be exploited."
            },
            {
                "StepNumber": 6,
                "StepString": "Create a new user with a malicious username, like {open('/flag').read()}, which triggers a remote code execution during authentication."
            },
            {
                "StepNumber": 7,
                "StepString": "Authenticate with the malicious user to be redirected to an address containing the flag in the URL."
            }
        ]
    }
}