Found /login/ endpoint and www.zip containing the source code using dirsearch.
Analyzed the login process and IP whitelist in the Flask source code.
Identified an IP address outside the local IP range and ran a nmap scan on it.
Discovered that the webapp was running in debug mode and examined the additional endpoints and code for debug mode.
Found a subtle bug with the placement of the @login_required decorator, allowing access to the "/admin/system/refresh_session/" endpoint without authentication.
Noticed a potentially dangerous use of 'redis.eval()' with user-controlled sessionID.
Discovered a serialized Python pickle object stored in Redis, suggesting a deserialization vulnerability.
Created a malicious payload with a Redis injection and a deserialization vulnerability, leading to RCE.
Sent the payload to the server using a series of GET and POST requests, which triggered deserialization and RCE to obtain the flag.
