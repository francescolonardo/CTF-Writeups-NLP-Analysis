{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Recognize that the challenge focuses on hacking the JWT cookie"
            },
            {
                "StepNumber": 2,
                "StepString": "Understand that to obtain the flag, the secretid must match the length of the secrets array and the permissions must be set to 'admin'"
            },
            {
                "StepNumber": 3,
                "StepString": "Identify that the server adds a new secret to the secrets array every time a cookie is signed"
            },
            {
                "StepNumber": 4,
                "StepString": "Note that the server does not perform security checks on the alg or secretid fields in the JWT"
            },
            {
                "StepNumber": 5,
                "StepString": "Create a JWT with the permissions set to 'admin' and the secretid set to a string that does not exist in the secrets array"
            },
            {
                "StepNumber": 6,
                "StepString": "Encode the JWT by setting the algorithm to 'none'"
            },
            {
                "StepNumber": 7,
                "StepString": "Send the malicious JWT to the server"
            },
            {
                "StepNumber": 8,
                "StepString": "Note that the server will retrieve a value of 'undefined' for secret['randomstr'] and will not attempt to verify the JWT because the algorithm is 'none'"
            },
            {
                "StepNumber": 9,
                "StepString": "Observe that this allows the server to pass the security checks and flag the token as true"
            }
        ]
    }
}