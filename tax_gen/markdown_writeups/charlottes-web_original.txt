<h1>Charlotte's Web - Solution</h1>

<p><strong>Author</strong>: zeyu2001</p>

<ol>
<li><p>Prototype pollution in <code>utils.merge()</code></p></li>
<li><p>Off-by-one error in <code>background.js</code> font validation allows us to pollute <code>utils.FONTS[10]</code>, bypassing the validation.</p>

<p>```javascript
let settings = utils.merge(result, newSettings);</p>

<p>// Validate fonts
let valid = false;
for (let i = 0; i &lt;= utils.FONTS.length; i++) {
    if (settings.font === utils.FONTS[i]) {
        valid = true;
        break;
    }
}
```</p></li>
<li><p>In <code>setFont.js</code>, the <code>credentials: include</code> option can be polluted in the <code>fetch()</code> call to use the credentials for <code>http://app/</code>.</p>

<p>```javascript
// Load external fonts.
const customStyle = JSON.parse(document.getElementById('page-style').innerText);
utils.setStyle(document.body, utils.merge({fontFamily: 'custom'}, customStyle));
document.getElementById('page-style').remove();</p>

<p>fetch(font, {method: 'GET'}).then(response =&gt; response.text()).then(text =&gt; { 
    const style = document.createElement("style");
    style.textContent = text;
    document.head.appendChild(style);
});
```</p></li>
<li><p>The output is placed in the exploit page's <code>style</code> element, and can be read by the attacker.</p></li>
</ol>
