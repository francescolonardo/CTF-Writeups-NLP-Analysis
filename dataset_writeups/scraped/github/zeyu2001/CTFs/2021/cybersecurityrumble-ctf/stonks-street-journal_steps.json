{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Signed up on the website and viewed the invoice URL, which was in the format '/legacy_invoice_system/BASE64_ENCODED_STRING'"
            },
            {
                "StepNumber": 2,
                "StepString": "Decoded the base64-encoded string to 'USERNAME-YEAR-MONTH-DAY'"
            },
            {
                "StepNumber": 3,
                "StepString": "Added a special character (') to the end of the username, causing an SQL error"
            },
            {
                "StepNumber": 4,
                "StepString": "Collected from the error message that the username and signup date were passed into the SQL query without sanitization"
            },
            {
                "StepNumber": 5,
                "StepString": "Created a custom SQLMap tamper script that appends a payload to the back of the signup date and base64-encoded the entire input before passing it to the injection point at 'GET /legacy_invoice_system/*'"
            },
            {
                "StepNumber": 6,
                "StepString": "Ran SQLMap with the script using the command 'sqlmap -r invoice.req --tamper tamper.py --threads 10 -T news_article --dump' to dump the database"
            },
            {
                "StepNumber": 7,
                "StepString": "Located the flag within the public news_article table of the database dump"
            }
        ]
    }
}