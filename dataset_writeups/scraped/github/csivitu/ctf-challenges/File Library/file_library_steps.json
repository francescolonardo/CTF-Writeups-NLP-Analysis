{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Read the challenge description and requirements, the vulnerability lies in Express query parsing"
            },
            {
                "StepNumber": 2,
                "StepString": "Study source files, specifically server.js"
            },
            {
                "StepNumber": 3,
                "StepString": "Identify that files retrieved need to pass certain conditions: no spaces or slashes in filename, filename length five or less, and only js, ts, cpp, c files allowed"
            },
            {
                "StepNumber": 4,
                "StepString": "Infer that the flag is inside a `flag.txt`, needing to bypass filename restrictions to get it"
            },
            {
                "StepNumber": 5,
                "StepString": "Note that when an array is passed in 'file' GET parameter, it gets converted and concatenated into a string with comma separation for each element. This also passes the filename restrictions"
            },
            {
                "StepNumber": 6,
                "StepString": "Note that '.' and 'js' have to be the last two elements of the array to pass the file type check"
            },
            {
                "StepNumber": 7,
                "StepString": "Construct a parameter that both meets the conditions and requests the flag file. `['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js']` is passed in an array via the GET parameter so that only the first five elements are used to create the file name, which then resolves to `flag.txt` after the process"
            },
            {
                "StepNumber": 8,
                "StepString": "Send the GET request `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js` to the server"
            },
            {
                "StepNumber": 9,
                "StepString": "Retrieve the flag from the server response: `csictf{5h0uld_5tr1ng1fy_th3_p4r4ms}`"
            }
        ]
    }
}