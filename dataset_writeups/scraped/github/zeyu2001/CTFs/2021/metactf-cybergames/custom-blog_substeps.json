{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify /post.php has a Local File Inclusion vulnerability.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify the target page '/post.php'."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Recognize the presence of a Local File Inclusion vulnerability on '/post.php'."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Confirm the vulnerability by requesting /post.php?post=../../../../../../etc/passwd.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Craft a request to '/post.php?post=../../../../../../etc/passwd'."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Send the crafted request to confirm the presence of the vulnerability."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Decide on achieving remote code execution but realize it requires ability to write to a file on the server.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Make a decision to achieve remote code execution."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Recognize the requirement of having write access to a file on the server."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Discover that PHP sessions are file-based and predictably stored at /tmp/sess_<PHPSESSID>.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Discover the PHP sessions are file-based."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Identify the predictable storage location of PHP sessions as '/tmp/sess_<PHPSESSID>'."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Identify that /set.php allows setting the 'theme' value in the session to any string using the 'theme' GET query parameter.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Recognize the existence of '/set.php' page."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Identify the capability of setting the 'theme' value in the session using the 'theme' GET query parameter."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Realize the session file can be accessed through the LFI vulnerability, and the set input is reflected in the included PHP code.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Understand the possibility of accessing the session file through the LFI vulnerability."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Recognize that the set input reflects in the included PHP code."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Set the theme to '<?php phpinfo() ?>', to confirm the vulnerability and the input reflection.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Craft a request to set the theme to '<?php phpinfo() ?>'."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Send the crafted request to confirm the vulnerability and the input reflection."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Find a PHP payload that will provide a web shell and set the theme to it '/set.php?theme=<?php system($_GET['c']) ?>'.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Search for a PHP payload that creates a web shell."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Craft a request to set the theme to the PHP payload."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Use the created web shell to explore the file system and find the flag MetaCTF{wh4t??lfi_1s_ev0lv1ng??}.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Utilize the web shell to gain access to the file system."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Explore the file system to find the flag 'MetaCTF{wh4t??lfi_1s_ev0lv1ng??}'."
                    }
                ]
            }
        ]
    }
}