[
    {
        "Data Analysis, Manipulation, and Storage Interactions": [
            "Decoded base64 strings to view the source code of 'wc.php'.",
            "Decoded the password hash.",
            "Discovered that the python pickle can be prepended with '!'",
            "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
            "Determine it is a hexadecimal representation",
            "Use hexadecimal content",
            "Checked and confirmed both strings had the same md5 hash.",
            "Identify the ASCII representation within the encoded string",
            "Encode the compressed object to Base64",
            "Decoded the base64 encoded flag from the cookies",
            "Encode the script into base64.",
            "Base64-encoded the entire input.",
            "Encoded the fetched cookies in base64."
        ]
    },
    {
        "Information Gathering and Security Analysis": [
            "Found a password hash '6f246c872cbf0b7fd7530b7aa235e67e'.",
            "Note that the flag is in rot13 encoding.",
            "Identify that the random numbers generated are not cryptographically secure.",
            "Find the hint related to cookie value matching MD5 hash of '$cfg_pass' variable",
            "Identify the algorithm mentioned in the cookie value.",
            "Understood that a string needs to be found to match the MD5 hash of the challenge.",
            "Identify the requirement of same MD5 hash for the two PDFs."
        ]
    },
    {
        "N/A": [
            "Recognize that the 'username' has been rot13 encoded in the decoded JWT.",
            "Apply rot13 decoding on the 'admin' value.",
            "Intend to rot13 encode the value 'true'.",
            "Decide to use the rot13-encoded version of a listed admin username.",
            "Decode the flagged text.",
            "Decode the cookie using base64 decoding",
            "Encode new cookie value into base64",
            "Realize that the sha1 hashes of 'hash' and 'target' will not match.",
            "Identify that the sha1 hash of '10932435112' starts with '0e...'",
            "Understand that any other sha1 hash starting with the same prefix will match the target.",
            "Identify hashes that start with the '0e' prefix.",
            "Obtained a sequence of hexadecimal values",
            "Concluded that they seemed to be MD5 hashes",
            "Decrypted the MD5 hashes",
            "Identify that the snippet converts a base64 string to ASCII and stores it in local storage under the key 'flag'.",
            "Identify that the URL of the created webpage is a base64 encoded form.",
            "Identify that a new CAPTCHA is generated.",
            "Realize that the flag can be attained with more than 1000 CAPTCHA solves.",
            "Understand the CAPTCHA generating code.",
            "Decode the cookie using the selected tool.",
            "Decode the session data from the cookie using Base64 decoding on a site like cyberchef.",
            "Note that you need the secret key due to Flask's hash based on session data, timestamp, and the secret key.",
            "Attempted to decode the data contents.",
            "Identify that the flag was formed by computing the MD5 hash of the username, password and a salt",
            "Understand the requirement of a private and public key",
            "Realised that the token was using the RS256 algorithm.",
            "Identified the need to change the Asymmetric Cipher Algorithm to Symmetric Cipher Algorithm.",
            "Used the public key as a secret for the HMAC token.",
            "Identify the algorithm used as HS256.",
            "Analyze the weak encryption.",
            "Set secret_key as 'redraider'.",
            "Decode the base64 string.",
            "Identify a value in Base64 within the cookie.",
            "Decode the Base64 cookie value.",
            "Resulted in a base64-encoded result.",
            "Decoded the base64 encoded result.",
            "Decode the initial array with base64 encoded strings in the JavaScript script.",
            "Decode the ROT13 encrypted message in the HTTP response.",
            "Note the regex format /^{\"hash\": [0-9A-Z\"]+}$/",
            "Decode the base64 response",
            "Decode the base64 response",
            "Generated two different strings with the same md5 hash.",
            "Generated the md5 hash for both binary data.",
            "Apply the algorithm to the captured wifi nonces.",
            "Encode the malicious serialized class in base64",
            "Use the signing certificate to generate a new HMAC signature.",
            "Identify the Base64 encoded string.",
            "Identify the AES ECB key for decoding the Bitcoin Wallet password.",
            "Use the OpenSSL tool to decode the Bitcoin Wallet password.",
            "Provide the AES ECB key and hex string as input.",
            "Decode the string.",
            "Decode the base64 value.",
            "Encode the content via Base64.",
            "Identify that `aW1nMS5qcGc=` is a Base64 encoded string.",
            "Decode `aW1nMS5qcGc=` to identify it as `img1.jpg`.",
            "Base64 encode an XMLHttpRequest.",
            "Generate a tripcode for each possible IP",
            "Understood default signature algorithm of openssl_verify is SHA1.",
            "Realized the susceptibility of SHA1 algorithm for PDFs.",
            "Encode the JWT by setting the algorithm to 'none'",
            "Understand how the token is signed using 'store.key'.",
            "Observe that the password is not given directly but might be related to the hash.",
            "Understand that the client-server communication uses an encoding function.",
            "Decrypt the 'flag.png.encrypted' file.",
            "Use the factorization of 1337 (7*191) to create the first payload",
            "Noticed that the SHA256 hash is calculated using the concatenation of 'password' and 'salt'",
            "Decode the JWT token.",
            "Noticed that user cookie is double base64 encoded",
            "Encode the lowercase string into bytes.",
            "Use the 'md5' function to hash the bytes.",
            "Note that it is an MD5 hash.",
            "Recognize that the hash can be cracked.",
            "Decode the received Base64 string.",
            "Sign the token using the public key.",
            "Realize that the decryption key can be obtained by supplying a 'key_id' in the HTTP headers",
            "Find out the decryption key by using the 'key_id'",
            "Decoded the base64-encoded string.",
            "URL-decoded the output",
            "Add padding to the extracted text.",
            "Apply Base64 decoding to the padded text.",
            "Encode the session.",
            "Encode the payload to base 64.",
            "Recognize rearrangement as 'P4s5_w0Rd'.",
            "Decode the base64-encoded string received from the previous step.",
            "Note that the public key, verifyKey, is used to validate JWT signature in both HS256 and RS256 cases.",
            "Explore the HTML encoding process of individual characters",
            "Decode the field First-Flag.",
            "Decode the field flag from the receiving server."
        ]
    },
    {
        "Documentation, Strategy, and Miscellaneous Techniques": [
            "Noticed that the decrypted string could form a meaningful phrase"
        ]
    },
    {
        "Tools, Scripting, and System Interactions": [
            "Run a command to convert the base64 string to ASCII.",
            "Sign the JWT with 'dawgCTF?heckin#bamboozle' secret",
            "Base64 encode the private key."
        ]
    },
    {
        "Web Interaction and Navigation": [
            "Encode the payload in base64.",
            "Decode the copied JWT token using a website like jwt.io.",
            "Deduced that two different strings should give the same md5 hash.",
            "Decode the ASCII representation to readable text using JavaScript console",
            "Encode the cookie-characters as response headers.",
            "Convert your public IP address to octal form using an octal IP address converter."
        ]
    },
    {
        "Authentication, Session, and User Management": [
            "Encode a new JWT token with the modified 'role'."
        ]
    },
    {
        "Exploitation Techniques and Payload Handling": [
            "Observe use of secret flag within a MD5 calculation",
            "Encode the payload into 'multipart/form-data'."
        ]
    },
    {
        "Code, Application, and Script Analysis": [
            "Note that the debugging private key is '8EE86735658A9CE426EAF4E26BB0450E' and it is the MD5 of the string: 'fuckingdog'.",
            "Apply the base64 encoding filter to allow for file reading.",
            "Determine that the tripcode is a part of an encrypted string",
            "Encode the script into base64 to bypass the filtering."
        ]
    }
]