{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Parsed the challenge PHP source code, noted potential XXE vulnerability because of 'LIBXML_NOENT' flag in 'loadXML()' function"
            },
            {
                "StepNumber": 2,
                "StepString": "Created an LFI payload with a form that contains an XML part that substitutes an entity 'myExternalEntity' with '/etc/passwd', hinting at XXE exploitation"
            },
            {
                "StepNumber": 3,
                "StepString": "Sent the payload to the server and received a list of users as a response, confirming the XXE vulnerability"
            },
            {
                "StepNumber": 4,
                "StepString": "Unable to find flag files, it was confirmed that remote code execution (RCE) was necessary"
            },
            {
                "StepNumber": 5,
                "StepString": "Uploaded a PHP file to the server, then made a request to the file to run PHP code while XML parsing is performed"
            },
            {
                "StepNumber": 6,
                "StepString": "Used 'php://filter/' to Base64 encode the output of the PHP 'phpinfo()' function and reflect the result into the 'user' tag of the HTML response"
            },
            {
                "StepNumber": 7,
                "StepString": "Analyzed 'phpinfo()' output to see 'disable_functions' configuration and identified that functions for shell command execution were disabled"
            },
            {
                "StepNumber": 8,
                "StepString": "Used a recent exploit to bypass 'disable_functions' on PHP 7.0-8.0 versions and gain shell remote code execution"
            },
            {
                "StepNumber": 9,
                "StepString": "Wrote the final payload, uploaded it to the server, and used the same request to read the flag from the '/readflag' binary"
            },
            {
                "StepNumber": 10,
                "StepString": "Modified the payload script by incorporating the PHP 'disable_functions' bypass exploit, and ran '/readflag' by passing it as an argument to the defined 'pwn' function"
            },
            {
                "StepNumber": 11,
                "StepString": "Executed HTTP POST request to the target server with the final payload as part of form data and received the flag as part of HTML response, confirmed successful RCE exploited to get the flag"
            }
        ]
    }
}