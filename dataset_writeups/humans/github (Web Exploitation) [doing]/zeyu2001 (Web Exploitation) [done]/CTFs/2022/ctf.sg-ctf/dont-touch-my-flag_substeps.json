{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "The challenge involves a proxy server and a backend server accessible at provided URLs",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Visited the website."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Observed that there is a proxy server and a backend server accessible at provided URLs."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Inspecting the proxy reveals that it makes a request to the backend with a 'secret' token added to cookies",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Inspected the proxy server."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Noticed that the proxy server makes a request to the backend server."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Identified that a 'secret' token is added to cookies in the request to the backend server."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "A user-controlled 'uri' is appended to the backend URL with Python's urllib.parse.urljoin",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Understood that a user-controlled 'uri' is involved in the attack."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Discovered that the 'uri' is appended to the backend URL using Python's urllib.parse.urljoin."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Realization that urllib.parse.urljoin doesn't handle malformed paths correctly - it can return the appended path as the base URL",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Realized the issue with urllib.parse.urljoin."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Identified that urllib.parse.urljoin can return the appended path as the base URL when handling malformed paths."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Using this anomaly, form a request to the proxy with the 'uri' parameter having a malformed path such as //ATTACKER-URL, causing the proxy to send a request to the specified URL",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Exploited the issue in urllib.parse.urljoin."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Formed a request to the proxy server."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Included a 'uri' parameter with a malformed path, such as //ATTACKER-URL, in the request."
                    },
                    {
                        "SubstepNumber": 5.4,
                        "SubstepString": "Caused the proxy server to send a request to the specified URL."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "The received request from the proxy contains the 'secret' cookie value",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Received a request from the proxy server."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Extracted the 'secret' cookie value from the request."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "By knowing the secret, now able to send a request directly to the backend server",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Obtained knowledge of the 'secret' token."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Used the 'secret' token to send a request directly to the backend server."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "The backend checks for the 'secret' cookie before returning the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Learned that the backend server checks for the 'secret' cookie."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Discovered that the flag is returned by the backend server only if the 'secret' cookie is present."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "The flag 'CTFSG{d0nT_toUcH_mY_c00k13s}' is obtained",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Obtained the flag 'CTFSG{d0nT_toUcH_mY_c00k13s}'."
                    }
                ]
            }
        ]
    }
}