{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Intercept the HTTP request to understand the form submission structure",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Intercept the HTTP request"
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Analyze the form submission structure"
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Modify the HTTP GET parameter to test for arbitrary code executions with print=echo+'';phpinfo()",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Modify the HTTP GET parameter"
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Set the GET parameter to 'print=echo+'';phpinfo()'"
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Observe the result and notice that it validates the possibility of arbitrary code execution",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Observe the result"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Notice the validation of arbitrary code execution"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Examine the source code of the page by enabling the 'debug' option",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Enable the 'debug' option"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Examine the source code of the page"
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Identify the 'eval()' vulnerability and understand the list of blocked keywords/functions in the source PHP code",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Identify the 'eval()' vulnerability"
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Understand the list of blocked keywords/functions in the source PHP code"
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Identify that the variables $blocked, $special_block, and $$special_block are defined before the 'eval()' statement and hence can be referenced in the eval-ed code",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Identify the variables $blocked, $special_block, and $$special_block"
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Recognize that they are defined before the 'eval()' statement"
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Understand that they can be referenced in the eval-ed code"
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Understand the concept of $$ variable in PHP and how it is used in the code",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Understand the concept of $$ variable in PHP"
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Analyze how $$ variable is used in the code"
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Try referencing the blocked function and restricted file in the HTTP GET parameter with ?print=echo+'';print(eval('return ${blocked}[4](${nc});'))",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Reference the blocked function and restricted file"
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Set the GET parameter to '?print=echo+'';print(eval('return ${blocked}[4](${nc});'))'"
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "See that this leads to eval function executing file_get_contents('../flag.txt')",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Observe the execution of eval function"
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Note that it executes file_get_contents('../flag.txt')"
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Realize that while eval executes the command, it does not display the output and thus use print to display the output",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Realize that eval does not display the output"
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Use print to display the output"
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Observe the retrieval of the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Observe the retrieval of the flag"
                    }
                ]
            }
        ]
    }
}