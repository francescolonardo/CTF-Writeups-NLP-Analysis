{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Read the problem's given details and description, identified it's a Web category challenge, with a goal to perform an XSS attack and make a URL to trigger alert(1) for getting the flag"
            },
            {
                "StepNumber": 2,
                "StepString": "Examined the provided source code which uses a markdown library to convert markdown into HTML, runs DOMPurify, and does some validation"
            },
            {
                "StepNumber": 3,
                "StepString": "Noticed DOMPurify is applied on HTML, but acknowledged that DOMPurify is pretty secure, and it's unlikely they want me to find a vulnerability in it"
            },
            {
                "StepNumber": 4,
                "StepString": "Saw a statement on DOMPurify's GitHub indicating that using the sanitized HTML with jQuery's insecure elm.html() method without the SAFE_FOR_JQUERY flag could lead to XSS"
            },
            {
                "StepNumber": 5,
                "StepString": "Recognized from the source code that it is using jQuery's html() method without using the SAFE_FOR_JQUERY flag, hinting that XSS might be possible in this case"
            },
            {
                "StepNumber": 6,
                "StepString": "Started looking for a payload to trigger the XSS, looked at the unit tests for the SAFE_FOR_JQUERY flag on the DOMPurify's GitHub"
            },
            {
                "StepNumber": 7,
                "StepString": "Found a section in DOMPurify's unit tests where they tested payloads that can cause XSS if used with jQuery's html() method"
            },
            {
                "StepNumber": 8,
                "StepString": "Tested payloads from the unit test in the challenge, the third payload ended up triggering an alert, indicating a successful XSS attack"
            },
            {
                "StepNumber": 9,
                "StepString": "Created a URL with the successful payload and upon submitting it, received the flag"
            }
        ]
    }
}