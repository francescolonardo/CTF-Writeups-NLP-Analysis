{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the HTML to find a comment indicating the location of the 'src.tgz' file containing the project source code."
            },
            {
                "StepNumber": 2,
                "StepString": "Extract the frontend and backend code from the 'src.tgz' file."
            },
            {
                "StepNumber": 3,
                "StepString": "Examine the backend file 'app.rb' to discover the backend endpoint that returns the flag when the path '/admin' is accessed."
            },
            {
                "StepNumber": 4,
                "StepString": "Identify vulnerable code in the frontend 'view.php' file."
            },
            {
                "StepNumber": 5,
                "StepString": "Craft an 'id' parameter that bypasses the first two 'if' statements in the PHP code by exploiting the lack of an 'int' cast."
            },
            {
                "StepNumber": 6,
                "StepString": "Use the crafted 'id' parameter to make the 'file_get_contents' instruction perform an HTTP GET call to the backend endpoint."
            },
            {
                "StepNumber": 7,
                "StepString": "Access the backend endpoint at `$BACKEND/admin` to retrieve the flag."
            }
        ]
    }
}