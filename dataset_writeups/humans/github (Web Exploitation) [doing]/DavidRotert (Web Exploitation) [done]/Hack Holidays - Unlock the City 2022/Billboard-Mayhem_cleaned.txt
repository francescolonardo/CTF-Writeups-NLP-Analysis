This execise contains 2 Flags. The first one is just finding the form (wow, complicated), the second seems to be hidden in environment variables.

First, the author tried to upload a file with the `.tpl` extension and a random content they can identify. It triggers a `POST` to `/upload.php` and then redirects with `302 Found` to the `/index.php`, where the file content is displayed. They tried to reload the page, but the file content is always displayed, so it is persistent. Uploading the file a second time changes the output. Uploading a different file changes the content again.

Then the author tried to upload a valid PHP file, and here it starts to become interesting:
[PHP script: Display an alert with the current URL]
Becomes: `<!--?php echo "<br--><script>alert(window.location.href)</script>";`
[PHP script: Echo the result of 1+1]
Becomes: `<!--?php echo 1+1; </div-->`

In this writeup, the author experimented with uploading files to a PHP web application. They discovered that the uploaded content is persistent and displayed on the site. They also noticed that when uploading PHP code, the server modifies the output, converting PHP tags into HTML comments.

After some more experiments, the author found that `<div class="test">{7*7}</div>` became `<div class="test">49</div>`, which means that there exists a Server Side Template Injection (SSTI).

The following payload reveals some useful information:
[HTML payload: Displays environment variables and exposes files]

After analyzing the output, the author discovered the presence of the `smarty-4.0.1` PHP library, a template engine. They also found the `templates_c` folder containing some template files.

The template files are accessible on the server and can be downloaded by calling their file paths. The source code of PHP can be leaked with the payload:
[HTML payload: Executes a system command to display the contents of the `index.php` file]

By accident, this revealed the flag.

An alternative solution mentioned that the template engine might have some sort of environment variable that could be accessible.
