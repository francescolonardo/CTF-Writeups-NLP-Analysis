{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the website with a login form and identify the auth.js script managing user credentials and guest account."
            },
            {
                "StepNumber": 2,
                "StepString": "Examine the JavaScript and find a query to a GraphQL endpoint with standard authentication, using cookies for credentials."
            },
            {
                "StepNumber": 3,
                "StepString": "Decode guest credentials from base64 and connect as a guest to access the dashboard."
            },
            {
                "StepNumber": 4,
                "StepString": "Discover the main.js script and GraphQL queries for authentication and challenges data."
            },
            {
                "StepNumber": 5,
                "StepString": "Enumerate types and dump the database schema, then visualize the schema structure with graphql-voyager."
            },
            {
                "StepNumber": 6,
                "StepString": "Identify the ID of the challenge containing the flag and attempt to retrieve it, only to find you're not authorized."
            },
            {
                "StepNumber": 7,
                "StepString": "Use the `allUsers` query to obtain user data and craft an authentication cookie for the administrator."
            },
            {
                "StepNumber": 8,
                "StepString": "Retrieve the challenge data and hints with a POST request."
            },
            {
                "StepNumber": 9,
                "StepString": "Dump all challenges data and discover a SQL error using a crafted payload."
            },
            {
                "StepNumber": 10,
                "StepString": "Create a SQL injection payload to retrieve the flag."
            }
        ]
    }
}