[
    "Analyze the provided PCAP file.",
    "Retrieved data from each document in the Firestore database using the code snippet.",
    "Started the app with 'PORT=8080 npm run start'",
    "Submit the form presented on the webpage",
    "Identify that the URL of the created webpage is a base64 encoded form.",
    "Use the custom command from 'phpggc' repo",
    "Identified that the underpinning technology of the web application is PhantomJS/2.1.1.",
    "Receive and log the cookie transferred as a query parameter.",
    "Performed parameter pollution on the frontend with 'GET /callback?user=FRONTEND_USERNAME&amount=1337&amount=0&nonce=NONCE&sig=SIGNATURE'.",
    "These parameters are set up to be manipulated later.",
    "Open Python.",
    "Found that the user check 'is_admin()' would proceed to handle the 'c2' admin command parameter if true, otherwise would call 'redirect()'.",
    "Identified that the 'read online' button opens a new window upon clicking.",
    "Understand that this value can be fetched from HTTP headers.",
    "Observed that the source code of the site became visible.",
    "Admin Bot visits the URL.",
    "Understand the workflow of the Flask web server.",
    "Observed that the web application uses PhantomJS/2.1.1",
    "Analyze 'calc.js'",
    "Encode the malicious payload in base64",
    "Realize 'os.exec' is blocked.",
    "Observed an SQL query at the start of the HTML page returned.",
    "Perform a test with an invalid productId value",
    "Used the page string as '' and die(show_source('templates/flag.php')) or ''",
    "Observe that the authentication process terminates if the `bind_param()` call returns false.",
    "Accessed 'README' file within '.bzr' directory.",
    "Observe redirection when the queried amount exceeds the user's actual balance.",
    "Write a Python script that automates this process",
    "Read '/proc/self/environ' to retrieve the flag.",
    "Bypass further server checks",
    "Realize that the secret key needs to be cracked.",
    "Identify the rule within the configuration file.",
    "Start the decoding process by reversing the function: encoded_arr.split('').map( x => key.indexOf(x) ).reverse().",
    "Discover that instead of 'gopher://' protocol, 'inctf://' should be used.",
    "Website displays the content of the '/flag.txt' file"
]