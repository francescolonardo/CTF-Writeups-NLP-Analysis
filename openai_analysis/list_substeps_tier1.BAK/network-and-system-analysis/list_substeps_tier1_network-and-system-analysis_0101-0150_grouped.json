{
    "Server Configuration and Discovery": [
        "Point the server to the testing server IP address or domain",
        "Attempt to access /server-status",
        "Succeed in accessing /server-status",
        "Discover website hosting on Apache Traffic Server 7.1.1.",
        "Discover website hosting on Nginx server 1.15.5.",
        "Discover a command related to a netcat session.",
        "Final server returns Server: Apache/2.4.50 (Unix).",
        "Admin bot visits URL submissions",
        "Payload catches and sends the response, containing the admin's hash, to an exploit server"
    ],
    "Port Scanning": [
        "Intercept the request.",
        "Performed the action of opening port 80.",
        "Identify the target port as port 11111",
        "Establish a connection to port 11111",
        "Started with port 20022",
        "Use it to SSH onto the target server.",
        "Performed a port scan and identified Apache server version 2.4.49 operating on port 12380",
        "Perform an internal port scan for ports between 5000 and 10000.",
        "Found out that ports 8080 and 9006 were open.",
        "Tried to access port 9006 directly but didn't get meaningful information.",
        "Detect open debugging ports.",
        "Receive the port number from the exfiltration attempt."
    ],
    "Web Application Exploration": [
        "Navigate to the '/example' route.",
        "Observe the form to fill.",
        "Submit the form.",
        "Find the input box.",
        "Click the submit button."
    ],
    "Network Exploration and Analysis": [
        "Establish a connection to localhost:12380.",
        "Identify another part of the Nginx configuration that preserves request headers when requests are forwarded to Gunicorn",
        "Identify an inaccessible server that is hosting data-server.",
        "Communicate with any TCP server using Gopher protocol.",
        "Locate the challenge at port 8080.",
        "Pivot from the previously found IP address.",
        "Scan the pivoted IP address.",
        "Determine the IP address in the URL.",
        "Scan the 10.0.42.0/24 network."
    ],
    "Browser and Webpage Analysis": [
        "Send a GET request to the URL.",
        "Discovered that headless mode of Chrome doesn't perform cache partitioning.",
        "Analyze the response headers.",
        "Investigate the backend.",
        "Receive the request.",
        "Note that a remote debugging port is exposed.",
        "Understand that the port scan needs to be completed within 30 seconds.",
        "Understand that the port scan needs to be completed before the browser instance is closed."
    ],
    "Proxy Server Interaction": [
        "Identify the application listening on port 11111.",
        "Observe that the application is behind AWS ELB.",
        "Caused the proxy server to send a request to the specified URL.",
        "Received a request from the proxy server.",
        "Note that the server checks the X-Forwarded-For header to validate the client IP.",
        "Noted that the poll options are exfiltrated to `example.com`.",
        "Send GET requests with incrementing 'id' using the script."
    ],
    "Reverse Shell and Remote Access": [
        "Establish a reverse shell."
    ]
}