{
    "Hash Cracking and Encoding": [
        "Recognize that the hash can be cracked.",
        "Encode the script into base64.",
        "Encode the script into base64 to bypass the filtering.",
        "Base64 encode the private key.",
        "Decode the received Base64 string.",
        "Sign the token using the public key."
    ],
    "Decryption Key Extraction": [
        "Realize that the decryption key can be obtained by supplying a 'key_id' in the HTTP headers",
        "Find out the decryption key by using the 'key_id'"
    ],
    "Text Encoding and Decoding": [
        "Decoded the base64-encoded string.",
        "Base64-encoded the entire input.",
        "URL-decoded the output",
        "Encode the cookie-characters as response headers."
    ],
    "Text Manipulation and Conversion": [
        "Identify the requirement of same MD5 hash for the two PDFs.",
        "Add padding to the extracted text.",
        "Apply Base64 decoding to the padded text.",
        "Encode the session.",
        "Encode the payload to base 64.",
        "Convert your public IP address to octal form using an octal IP address converter.",
        "Recognize rearrangement as 'P4s5_w0Rd'.",
        "Decode the base64-encoded string received from the previous step.",
        "Encoded the fetched cookies in base64.",
        "Note that the public key, verifyKey, is used to validate JWT signature in both HS256 and RS256 cases.",
        "Explore the HTML encoding process of individual characters",
        "Decode the field First-Flag.",
        "Decode the field flag from the receiving server."
    ]
}