{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Used lesscss to evaluate CSS on the backend and read arbitrary files with @import (inline) \"/etc/passwd\";",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Use lesscss to evaluate CSS on the backend."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Read arbitrary files with @import (inline) \"/etc/passwd\"."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Leaked source code;",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Leak source code."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Used interp to evaluate Golang at runtime from cookie;",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Use interp to evaluate Golang at runtime from cookie."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Controlled 'Version' in cookie to get arbitrary code execution;",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Control 'Version' in cookie."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Get arbitrary code execution."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Realized 'os.exec' is blocked, therefore used 'os.StartProcess' instead;",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Realize 'os.exec' is blocked."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Use 'os.StartProcess' instead."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Imported 'io/ioutil' and 'os';",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Import 'io/ioutil'."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Import 'os'."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Created a function named 'api' which reads the file 'satellite.txt';",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Create a function named 'api'."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Read the file 'satellite.txt'."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Defined 'os.ProcAttr' and assigned file descriptors for standard input, output and error handling;",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Define 'os.ProcAttr'."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Assign file descriptors for standard input, output, and error handling."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Started a new process to execute '/bin/sh' with argument to read flag file and redirect the output to '/tmp/jizz';",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Start a new process."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Execute '/bin/sh' with an argument to read the flag file and redirect the output to '/tmp/jizz'."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Waited for the process to complete and returned the content of 'satellite.txt'.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Wait for the process to complete."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Return the content of 'satellite.txt'."
                    }
                ]
            }
        ]
    }
}