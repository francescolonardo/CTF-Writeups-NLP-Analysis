{
    "Decoding and Manipulating Hashes": [
        "Decoded base64 strings to view the source code of 'wc.php'.",
        "Found a password hash '6f246c872cbf0b7fd7530b7aa235e67e'.",
        "Decoded the password hash.",
        "Recognize that the 'username' has been rot13 encoded in the decoded JWT.",
        "Apply rot13 decoding on the 'admin' value.",
        "Intend to rot13 encode the value 'true'.",
        "Decide to use the rot13-encoded version of a listed admin username.",
        "Note that the flag is in rot13 encoding.",
        "Decode the flagged text.",
        "Decode the cookie using base64 decoding",
        "Encode new cookie value into base64"
    ],
    "Analyzing Hashes and Encodings": [
        "Realize that the sha1 hashes of 'hash' and 'target' will not match.",
        "Identify that the sha1 hash of '10932435112' starts with '0e...'",
        "Understand that any other sha1 hash starting with the same prefix will match the target.",
        "Identify hashes that start with the '0e' prefix.",
        "Discovered that the python pickle can be prepended with '!'",
        "Obtained a sequence of hexadecimal values",
        "Concluded that they seemed to be MD5 hashes",
        "Decrypted the MD5 hashes",
        "Noticed that the decrypted string could form a meaningful phrase"
    ],
    "Manipulating Web Application Data": [
        "Identify that the snippet converts a base64 string to ASCII and stores it in local storage under the key 'flag'.",
        "Run a command to convert the base64 string to ASCII.",
        "Encode the payload in base64.",
        "Identify that the URL of the created webpage is a base64 encoded form.",
        "Decode the copied JWT token using a website like jwt.io.",
        "Encode a new JWT token with the modified 'role'.",
        "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
        "Identify that a new CAPTCHA is generated.",
        "Realize that the flag can be attained with more than 1000 CAPTCHA solves.",
        "Understand the CAPTCHA generating code.",
        "Identify that the random numbers generated are not cryptographically secure.",
        "Decode the cookie using the selected tool.",
        "Decode the session data from the cookie using Base64 decoding on a site like cyberchef.",
        "Note that you need the secret key due to Flask's hash based on session data, timestamp, and the secret key.",
        "Attempted to decode the data contents.",
        "Identify that the flag was formed by computing the MD5 hash of the username, password and a salt",
        "Understand the requirement of a private and public key",
        "Realised that the token was using the RS256 algorithm.",
        "Identified the need to change the Asymmetric Cipher Algorithm to Symmetric Cipher Algorithm.",
        "Used the public key as a secret for the HMAC token.",
        "Identify the algorithm used as HS256.",
        "Analyze the weak encryption.",
        "Set secret_key as 'redraider'."
    ],
    "Working with Base64 Encodings": [
        "Decode the base64 string.",
        "Observe use of secret flag within a MD5 calculation",
        "Identify a value in Base64 within the cookie.",
        "Decode the Base64 cookie value.",
        "Resulted in a base64-encoded result.",
        "Decoded the base64 encoded result.",
        "Decode the initial array with base64 encoded strings in the JavaScript script."
    ]
}