{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified the challenge as one requiring bypass of an Angular application setup behind an Nginx reverse proxy",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identified the challenge."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Recognized two flags; one hidden in angular endpoint /debug/answer restricted by Nginx and application, and one hidden in express endpoint /api/true-answer accessible only from localhost (IP: 127.0.0.1)",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Recognized first flag hidden in angular endpoint /debug/answer restricted by Nginx and application."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Recognized second flag hidden in express endpoint /api/true-answer accessible only from localhost."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "For the second flag, analyzed server-side JavaScript handling requests to '/api/true-answer', which only responded with the flag if the request came from the loopback network",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Analyzed server-side JavaScript handling requests to '/api/true-answer'."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Determined the system only responded with the flag if the request came from the loopback network."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Noted the situation that even though the app was hidden behind Nginx reverse proxy, 'req.ip' always pointed to the same IP address of the reverse proxy",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Noted the situation that even though the app was hidden behind Nginx reverse proxy."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "'req.ip' always pointed to the same IP address of the reverse proxy."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Identified that the application didn't trust 'X-Forwarded-*' headers so the IP address couldn't be overridden",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Identified that the application didn't trust 'X-Forwarded-*' headers."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Realized the IP address couldn't be overridden as a result."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Noticed when accessing '/q' endpoint, the application displayed contents of '/api/answer'. This was done server-side",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Accessed '/q' endpoint."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Observed the application displaying contents of '/api/answer'."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Understood this was done server-side."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Understood 'this.service.getAnswer()' led to 'this.http.get('/api/answer')' as it's a part of Angular\u2019s internal methods showing it was fetching '/api/answer' from server-side",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Identified 'this.service.getAnswer()' command in the Angular application."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Understood it led to 'this.http.get('/api/answer')'."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Recognized it as part of Angular's internal methods fetching '/api/answer' from server-side."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Found out Angular, while performing HTTP requests, uses a Host header - 'PROTOCOL + HOST + / PATH' - and also follows redirects",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Discovered Angular uses a Host header - 'PROTOCOL + HOST + / PATH' while performing HTTP requests."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Noticed Angular also follows redirects."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Formulated a strategy to provide a custom host and redirect anything to '127.0.0.1/api/true-answer' for capturing the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Formulated a strategy to provide a custom host."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Planned to redirect anything to '127.0.0.1/api/true-answer' to capture the flag."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Executed the curl command 'curl 'http://universe.chal.ctf.westerns.tokyo/a' -H 'Host: terjanq.me' to bypass restrictions",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Executed the curl command 'curl 'http://universe.chal.ctf.westerns.tokyo/a' -H 'Host: terjanq.me'."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Successfully bypassed restrictions."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Successfully obtained the flag {you-have-to-eat-tomato-yume-chan!} as a result of the bypass",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Successfully obtained the flag {you-have-to-eat-tomato-yume-chan!} as a result of the bypass."
                    }
                ]
            }
        ]
    }
}