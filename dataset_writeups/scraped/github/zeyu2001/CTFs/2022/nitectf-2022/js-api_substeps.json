{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyzed the JavaScript source provided in the challenge.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Analyzed the JavaScript source."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Reviewed the challenge."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Identified the use of a message event handler that had to be exploited in tandem with a '.jsapi.tech' subdomain takeover.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Identified the use of a message event handler."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identified the need for a '.jsapi.tech' subdomain takeover."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Recognized the ability to 'preview' HTML without saving it in this challenge. The HTML input however is sanitized through DOMPurify.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Recognized the ability to 'preview' HTML without saving it."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Noted the use of DOMPurify for HTML sanitization."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Identified a loophole where the 'search' feature originally using 'this.noteData' could be bypassed since 'this.noteData' remained the same even after sanitizing HTML input via 'preview' feature.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Identified a loophole in the 'search' feature."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Recognized that 'this.noteData' remained the same after sanitization."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Ran into an issue with the 'search' feature checking for 'window.enable_experimental_features', which did not originally exist.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Encountered an issue with the 'search' feature."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Noted the absence of 'window.enable_experimental_features'."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Used DOM clobbering as DOMPurify doesn't protect against it to override 'window.enable_experimental_features' property.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Utilized DOM clobbering."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Overrode the 'window.enable_experimental_features' property."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Inserted HTML through 'preview' feature to demonstrate DOM clobbering, thereby enabling 'enable_experimental_features'.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Inserted HTML through 'preview' feature."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Demonstrated DOM clobbering."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Enabled 'enable_experimental_features'."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Unintended solution used the property 'Lazy-loading' of an image to check if an extra div is rendered when search is correct.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Unintended solution using 'Lazy-loading' property."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Checked for an extra div when search is correct."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "If no request is received for a particular character, it is concluded the extra div was rendered and search was a correct guess.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Concluded the extra div was rendered when no request is received."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Determined a correct guess for the search."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "A script was written to implement the attack involving 'Lazy-loading' property.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Implemented the attack using 'Lazy-loading' property."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Wrote a script for the attack."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "A different intended solution involved the use of 'PerformanceLongTaskTiming API' to identify if the search was taking more than 50ms.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Different intended solution using 'PerformanceLongTaskTiming API'."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Checked if the search took more than 50ms."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Learned that any timing attack with 'performance.now()' would had worked too due to the JavaScript event loop being single-threaded.",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Discovered that any timing attack with 'performance.now()' would have worked."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Noted the single-threaded nature of the JavaScript event loop."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "A script using 'setTimeout' function was written to execute the timing attack.",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Wrote a script using 'setTimeout' function."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Executed the timing attack."
                    }
                ]
            }
        ]
    }
}