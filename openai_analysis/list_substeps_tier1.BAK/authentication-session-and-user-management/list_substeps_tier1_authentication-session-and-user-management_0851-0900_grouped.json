{
    "Remote Code Execution": [
        "Set the username as '{open('/flag').read()}' to trigger a Remote Code Execution during authentication."
    ],
    "URL Manipulation": [
        "Include the necessary characters in the final URL.",
        "Exclude the existing private key parameter through '#'.",
        "Force the debugging private key in the link."
    ],
    "Security Vulnerabilities": [
        "Use this as a proof-of-concept for XSS vulnerability",
        "Passed a SQL command into the X-FORWARDED-FOR header.",
        "Remembered that a Cloudflare error was triggered in the instance by SQL injection.",
        "Determine that the specific replace function does not sanitize the 'alt' parameter."
    ],
    "API Interactions and JWT": [
        "Make a GET request to the /api/admin endpoint with the new JWT.",
        "Find the details of the desired user under the post search section",
        "Check the value of the cookie 'not_admin'",
        "Identify the username and password values.",
        "Observe that the '/pleb' proxy isn't forwarding non-ASCII characters.",
        "Determine that the crucial check occurs in the 'checkout(req, res)' function that verifies the token's signature matches the key.",
        "Note the presence of 'username', 'cnonce', and 'hash' parameters.",
        "Attempt to utilize CSRF mechanism.",
        "Revealed the 'username', 'uid', and 'iat' from the decoded JWT token."
    ],
    "File Operations": [
        "View files using the 'file://' protocol."
    ],
    "Database Manipulation": [
        "Create a malicious input for the username",
        "Allowed reading the flag",
        "Sent the SQL query to FD 4 (MySQL server).",
        "Read the response from FD 4.",
        "Wrote the received response to the intended output.",
        "Send POST request to upload the generated file.",
        "Send a POST request to upload the created file.",
        "Verify if the count returns 1.",
        "Sensitive, user-specific data could be read if /api/filter endpoint returns based on these cookies",
        "CSRF to /api/flag is needed",
        "Use the /find endpoint to inject a Set-Cookie header.",
        "Input the SQL injection payload in the 'username' field as `username=admin&password=' or '1`.",
        "Input the SQL injection payload in the 'password' field as `username=admin&password=' or '1`.",
        "The deserialized object is assigned to the $perm variable in 'authentication.php'"
    ],
    "Website Interactions and Inputs": [
        "Find the input box.",
        "Click the submit button.",
        "Inject the 'id' command in the input box.",
        "Submit multiple 'n' parameters with the same value in the web application.",
        "Note that it includes the ability to upload photos.",
        "Change the 'account[role]' attribute to 'admin'",
        "Locate the login function in the web application."
    ],
    "User Account Manipulation": [
        "Visit the admin's profile and find out it is private.",
        "Noted that the single request contains the admin's headers.",
        "Redirected to own account upon a successful enumeration (403 redirect).",
        "Have the user (admin) visit the URLs."
    ],
    "Miscellaneous": [
        "Flag was in the user agent.",
        "Line shows: '+ /.env: .env file found. The .env file may contain credentials.'"
    ]
}