{
    "File System Access": [
        "Used shell access to browse the file system.",
        "Identified notable shell script 'findaas' inside '/ctf'.",
        "Executed './findaas flag.txt' command.",
        "Attempted to read the flag using 'cat ./system/of/a/down/flag.txt'.",
        "Executed 'cat ./system/of/a/down/flag.txt' command.",
        "Searched for the flag using 'ls /'."
    ],
    "Command Line Interaction": [
        "Constructed a command to be executed",
        "Slept for half a second",
        "Focus on the command line subprocess interaction.",
        "Open the cURL tool",
        "Execute the command 'curl -H \"Accept-Language: sv-SE\" very.uniquename.xyz:8880'",
        "Open cURL.",
        "Start a 'netcat' listener on your server.",
        "Gain a shell.",
        "List the directory.",
        "Constructed command '/santa_mon.sh \"curl http://localhost:3000/get_flag\"'.",
        "Use curl command"
    ],
    "Scripting and Automation": [
        "Decided to write a script to automate the process",
        "Wrote a Python script to automate the requests",
        "Wrote a python script",
        "The script automates the process",
        "Start the Flask python server with 'python xss-cookie-stealer.py' and then run '/ngrok http 16361'.",
        "Use the Python subprocess library's getoutput() function.",
        "Use a Python script to brute force the password",
        "Build the token using NodeJS",
        "Open jwt_tool."
    ],
    "Web Application Testing and Exploitation": [
        "The author sets up the environment to exploit the SQL Injection challenge.",
        "The iterated character is added to the 'flag'.",
        "Run the Python script.",
        "Set up a simple Node.js server backend.",
        "Create a PHP file named 'payload.php'",
        "Start the challenge instance.",
        "Open Postman or a similar tool for sending HTTP requests.",
        "Cloned the GitHub repository.",
        "Discovered a Dockerfile.",
        "Restarted the container.",
        "Used the command 'cat /flag.txt' as part of the URL parameter.",
        "Noticed the output of 'List Storage' command runs 'df -h'.",
        "Wait for a few seconds for the puppeteer instance to start and load the page.",
        "Open the file index.html.",
        "Download app.py",
        "Install and open Dirb tool",
        "Executed the cURL command",
        "Use the 'jsonwebtoken' library",
        "Specify 'rockyou.txt' as the dictionary file."
    ]
}