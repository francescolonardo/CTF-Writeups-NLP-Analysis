<hr />

<h2>description: Server-side Request Forgery (SSRF)</h2>

<h1>Triskel 1: First Contact</h1>

<h2>Problem</h2>

<p>Coronavirus affected our airport so much that our dev team developed an app to keep track of it! I mean they didn't have much time to make it, but what could go wrong?</p>

<p>by Remsio</p>

<h2>Solution</h2>

<p>Pivoting from the previously found IP address, we scan this IP address to find that there is a HTTP service running on it.</p>

<p><img src="../../.gitbook/assets/fffd100ad9b0471c974126dabee947d9.png" alt="" /></p>

<p>This seems to be the app that the challenge is talking about.</p>

<p><img src="../../.gitbook/assets/e29ab5737d7e49fb9e265bf699eb4ce9.png" alt="" /></p>

<p>While fuzzing the input, I found that it uses curl.</p>

<p><img src="../../.gitbook/assets/80da5f1a23214b5590258a5ad3121589.png" alt="" /></p>

<p>Additionally, it appears that the IP address in the URL is checked against a whitelist of allowed IP ranges. These were 10.0.0.0/24, 10.0.42.0/24, and 10.0.43/24.</p>

<p>We can run a Burp intruder scan to find out what other hosts we can connect to through <code>10.35.2.134/call_api.php</code>.</p>

<p>Indeed, on scanning the <code>10.0.42.0/24</code> network, we find <code>10.0.42.2</code> and <code>10.0.42.200</code> is a valid endpoint.</p>

<p><img src="../../.gitbook/assets/ac58c875d75641f49253c08bf7481749 (1).png" alt="" /></p>
