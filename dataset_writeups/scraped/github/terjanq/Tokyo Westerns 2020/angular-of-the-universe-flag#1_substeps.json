{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Bypassed the Angular application that was set up behind Nginx reverse proxy.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Found a way to bypass the Angular application."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "The Angular application was set up behind an Nginx reverse proxy."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Accessed '/debug/answer' endpoint which was restricted both by nginx and the application.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Successfully accessed the '/debug/answer' endpoint."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "The '/debug/answer' endpoint was restricted by both Nginx and the application."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Used a trick where angular recognizes '\\' as '/', and %-decodes strings. Matched to 'debug/answer' via a simple curl request to '/\\%64ebug/answer'.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Utilized a trick where Angular recognizes '\\' as '/'."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Used %-decodes strings to match the '/debug/answer' endpoint."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Performed a simple curl request to '/\\%64ebug/answer'."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Discovered another way to solve the challenge for the second flag by injecting '\\debug\\answer' as the host in a curl request.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Found an alternative method to solve the challenge for the second flag."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Injected '\\debug\\answer' as the host in a curl request."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Confirmed that when Angular tries to match up the path, it parses the URL created from 'PROTOCOL + HOST + PATH'.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Verified that Angular parses the URL created from 'PROTOCOL + HOST + PATH'."
                    }
                ]
            }
        ]
    }
}