[
    "The website is a simple login page.",
    "Looking at the source code, identified that the `database.sql` file contains password hashes for a manager and admin user.",
    "Used CrackStation to identify the passwords for the hashed passwords, resulting in credentials `manager:bigsanta!` and `admin:tryharder`.",
    "Logged in using `manager:bigsanta!` credentials but `admin:tryharder` credentials were not valid.",
    "After login, saw a list of toys and some other properties.",
    "Reviewed the source code in `database.sql` file and identified that the flag was in the database with the rest of the toys, with its approved value set to 0 instead of 1.",
    "In `challenge/routes/index.js`, found that the `/api/toylist` endpoint would set `approved` to 1 unless the logged in user is `admin`, indicating that to access the flag, we needed to log in as admin.",
    "Reconsidered the source code and realized that the user authentication process could be vulnerable to a SQL injection.",
    "Attempted various SQL injection payloads on the login page from [swisskyrepo/PayloadsAllTheThings GitHub repository.",
    "Found a working payload with username `admin' -- ` and any password, which revealed the unapproved toy containing the flag: `HTB{1nj3cti0n_1s_in3v1t4bl3}`."
]