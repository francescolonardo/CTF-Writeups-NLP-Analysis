{
    "HTTP Requests & Responses": [
        "Include 'Content-Length:53' header in the request.",
        "Performed a HTTP GET request",
        "Find an image tag",
        "Receive internal web page response for the second GET request.",
        "Investigated the responses received."
    ],
    "SQL Injection": [
        "Understand that the input format for the SQL injection should match the UUID format.",
        "Altered the email field: 'test' UNION SELECT 'test', 'test'#.",
        "Identify a function that validates the input of a UUID in 'functions.php'.",
        "Choose the vulnerable points in the script to perform the injection."
    ],
    "Server-side Vulnerabilities": [
        "Exploit SSRF vulnerability to gain access to NFS filesystem",
        "Identified vulnerability CVE-2018-8004.",
        "Consider that the debugging port is generated from the getRandomPort function.",
        "Analyzing the provided Javascript and Dockerfile scripts."
    ],
    "File System Manipulation": [
        "Used AWS CLI to access the 'palindromecloudynekos' S3 bucket",
        "Open the style.css file",
        "Extract the flag from the '/flag' file.",
        "Verify the server code location from the provided Dockerfile as '/code/app.py'."
    ],
    "Authentication & Authorization": [
        "Identified 'the_real_flag' user and suspected the flag to be in the 'wordpass' value.",
        "Obtain the flag",
        "Identified that the binary calls the 'id' command three times, without privileges",
        "The condition to receive the CTF password (flag) is checked.",
        "Accessed the 'app.secret_key' value",
        "TranslateBBCode routine is in bbcode.asm file part of FreshLib"
    ],
    "Web Application Analysis": [
        "Locate the made-an-account cookie.",
        "Check for notes that match the regex pattern 'flag{.*}'.",
        "Identify the mistake in the test"
    ],
    "XML Entities & Data Manipulation": [
        "Devise a workaround by defining XML entities to form the string 'text'.",
        "Enter junk value to log in.",
        "Submitted the request containing the crafted payload to the meme generator."
    ],
    "Code Analysis & Vulnerability Identification": [
        "Set 'process.env.npm_execpath' to a controlled value.",
        "Analyzing the structure and properties of the `Login` object to find potential vulnerabilities."
    ]
}