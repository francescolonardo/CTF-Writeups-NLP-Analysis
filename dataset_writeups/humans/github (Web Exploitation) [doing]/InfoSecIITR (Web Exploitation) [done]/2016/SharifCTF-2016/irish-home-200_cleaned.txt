`/login.php` is vulnearable to sql injection.
However, filters were applied on the double quotes. By using a specific username and password combination, they were able to bypass the filter and log in as admin.

After logging in, the teammate pointed out that the site was also vulnerable to Local File Inclusion (LFI). They used an LFI technique to access a PHP script:
[PHP script: the site is under maintenance and all destructive actions are disabled]

Next, they used another LFI technique to access a PHP script containing the flag, but the password was missing. The PHP script had a username, a salt value, and an empty password field.
[PHP script: Generate the flag using the username, password, and salt]

Now using a Python script, we were able to brute-force the password.
[Python script: Brute-force the password]

So, this was the challenge which had all fruits in the basket, we had sqli, LFI, path transversal, blind sqli.
