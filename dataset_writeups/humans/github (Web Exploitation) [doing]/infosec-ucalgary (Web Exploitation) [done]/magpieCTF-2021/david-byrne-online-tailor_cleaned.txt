Hint: "There is a vulnerability in the way that the server takes user input and processes it."

We see that this website is running on Flask, and that the logic for dealing with the input form is as follows: 
[Flask code: Process input using the eval() function and calculate jacket size]

This exploit relies on the dangerous use of Python's `eval()` function. When passed a string, `eval` will attempt to evaluate the string as a Python expression. Though the intended use-case here is to do basic math with strings (e.g., sending "1+1" will return `2`), we can also use it to send lines of code that we want Python to run. By using the `subprocess` library, we can execute shell commands from within Python. Especially useful is the `getoutput()` function, which will return the output of the command as a string. With this knowledge, and knowing that the flag is at `/flag/flag.txt`, we can craft the following payload:
[Payload: Use Python subprocess library to execute a shell command and read the flag from /flag/flag.txt]
