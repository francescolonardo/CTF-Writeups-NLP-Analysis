{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Starting point of the code, it's a SQL Injection attack and for domain they used a combination of uppercase, lowercase, numbers, underscore and curly braces"
            },
            {
                "StepNumber": 2,
                "StepString": "Author defined a conditional statement, if the challenge is 'taxi union', certain variables are initialized with specific values"
            },
            {
                "StepNumber": 3,
                "StepString": "If the challenge is 'Gate keeper', specific values are assigned to the same variables, like url and check"
            },
            {
                "StepNumber": 4,
                "StepString": "The execution enters a while loop, where the code iterates over every character in the domain to build up the 'payload'"
            },
            {
                "StepNumber": 5,
                "StepString": "In the loop, the 'payload' is created in the format of a SQL statement with an OR operator to guess the next character in the password"
            },
            {
                "StepNumber": 6,
                "StepString": "A POST request is sent to the server with the 'payload' as the data"
            },
            {
                "StepNumber": 7,
                "StepString": "If the response contains the 'check' string, that means the guess was correct and the character is appended to the 'flag' and the process continues"
            },
            {
                "StepNumber": 8,
                "StepString": "If the guessed character is not in the password, the loop continues with the next character"
            },
            {
                "StepNumber": 9,
                "StepString": "The script continues in this way until the full password is discovered"
            }
        ]
    }
}