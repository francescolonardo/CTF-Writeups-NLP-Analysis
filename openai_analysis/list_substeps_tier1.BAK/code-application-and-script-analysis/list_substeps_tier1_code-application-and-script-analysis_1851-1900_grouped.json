{
    "SQL Injection": [
        "Create a SQL injection payload.",
        "Identify that the code is using the HTTP header to construct a file path.",
        "Understand that '....//' can be used to bypass the replacement of '../'.",
        "Identify the password check code.",
        "Realize that the 'id' parameter can be manipulated.",
        "Defined SQL injection as the manipulation of a query to interact with a website's database."
    ],
    "Server Analysis": [
        "Access the link 'http://35.207.189.79/pyserver/server.py'.",
        "Identify the server's functioning port and host from the extracted main execution function.",
        "Construct a payload.",
        "Complete the payload.",
        "Analyze 'cgi-bin/' directory",
        "Identify 'scriptlet' vulnerability",
        "Identify Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Print contents of 'flag.file'",
        "Included a calculation statement in the request.",
        "Executed 'cat index.php' command.",
        "Execute 'cat index.php' command",
        "Access 'login.php.bak'",
        "Make an educated guess on the numbers at the beginning of the MD5 string",
        "Execute the 'id' command remotely using the identified class",
        "Read the file 'flag210d9f88fd1db71b947fbdce22871b57.php' using the same technique applied during reading of 'config.php'",
        "Visit 'http://easy-php.darkarmy.xyz/?bruh=base64_encode(fread(fopen($_GET[%27pwn%27],%27r%27),512))&nic3=/DarkCON/e&pwn=flag210d9f88fd1db71b947fbdce22871b57.php'",
        "Use the 'git diff' command.",
        "Find the flag, which is meant to be in a file in the '/etc' directory",
        "Upload the new PHP exploit",
        "Used 'Updatexml()' in the SQL payload.",
        "Replace the email value in the intercepted Post Request with a controlled one.",
        "Updated the '$url' attribute in the serialized object.",
        "Get link to the source code"
    ],
    "Cross-site Scripting (XSS)": [
        "Analyze the challenge title for possible XSS vulnerability",
        "Craft a message with an XSS attack using an `img` tag",
        "Implied a possibility of Cross-site Scripting (XSS)",
        "Craft a precise content payload",
        "Create a working XSS"
    ],
    "XML External Entity (XXE) Attack": [
        "Understood that the application can be exploited via a XXE attack.",
        "Triggered the XML payload on the application."
    ],
    "Web Application Analysis": [
        "Analyze the HTML of the page.",
        "Identify 'scriptlet' vulnerability",
        "Identify Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Exploit Shellshock vulnerability",
        "Replace any 'secret' tags with the word 'Protected'.",
        "Identify the onclick track event",
        "Observe the 'get_user_info' method during authentication in the User class."
    ]
}