{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Inspect the Python file provided in the challenge, which includes some regex functionality",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Inspect the Python file provided in the challenge."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Note the inclusion of regex functionality."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Analyze the Python code, noting that it ignores the first letter if it's uppercase and establishes a pattern based on this",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Analyze the Python code."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Note that the code ignores the first letter if it's uppercase."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Establish a pattern based on the previous observation."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Use a debugging tool such as regex101 to view code specifics and ensure understanding",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Use a debugging tool such as regex101."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "View code specifics using the debugging tool."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Ensure understanding of the code."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Consult the official Python documentation to learn about special characters usable in regex",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Consult the official Python documentation."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Learn about special characters usable in regex from the documentation."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Identify the '|' operator as potentially useful, as it allows for matching of either of two separate regular expressions",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Identify the '|' operator as potentially useful."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Note that the '|' operator allows for matching of either of two separate regular expressions."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Test the code with 'flag{randomString}' to determine suitable regular expressions",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Test the code with 'flag{randomString}'."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Determine suitable regular expressions based on the test."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Create a new regex matching the 'flag{randomString}' pattern, using the '|' operator",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Create a new regex matching the 'flag{randomString}' pattern."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Use the '|' operator in the created regex."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Replace the initial regex in the Python code with the newly created one",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Replace the initial regex in the Python code."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Use the newly created regex as the replacement."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "This allows the flag to be obtained",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Obtain the flag."
                    }
                ]
            }
        ]
    }
}