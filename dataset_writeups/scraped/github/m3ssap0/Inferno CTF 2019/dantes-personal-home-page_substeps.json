{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Inspect the source code of the website to know what server-side checks are being done",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Inspect the source code of the website."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identify what server-side checks are being done."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Study the source code and identify that there are checks for specific patterns that will allow or block request",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Study the source code."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identify the checks for specific patterns."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Determine which patterns will allow or block requests."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identify that the first check points to a GET parameter with underscores but query string cannot have underscores",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identify the first check."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Observe that the first check points to a GET parameter with underscores."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Recognize that query string cannot have underscores."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Research if and how PHP manipulates input parameters' names to remove whitespaces and convert characters into underscores",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Research if PHP manipulates input parameters' names."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Look into how PHP removes whitespaces from input parameters' names."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Investigate how PHP converts characters into underscores in input parameters' names."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Write a PHP program to check if characters are converted to underscores and enumerate these characters",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Write a PHP program."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Check if characters are converted to underscores in the program."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Enumerate the characters that are converted to underscores."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Use the output of the script to craft a URL with the identified character",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Use the output of the script."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Identify the character from the script output."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Craft a URL using the identified character."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Check the website response with this newly crafted URL",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Check the website response."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Use the newly crafted URL for the website response check."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Analyze the remaining check in the source code to bypass it",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Analyze the remaining check in the source code."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Find a way to bypass the remaining check."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Research if it is possible to bypass the 'ereg' instruction by injecting a NULL byte",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Research if 'ereg' instruction can be bypassed."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Investigate if injecting a NULL byte can bypass the 'ereg' instruction."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Formulate the final URL by injecting a NULL byte and the necessary characters",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Formulate the final URL."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Inject a NULL byte into the final URL."
                    },
                    {
                        "SubstepNumber": 10.3,
                        "SubstepString": "Include the necessary characters in the final URL."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Use this final URL to solicit a response from the server, successfully bypassing the checks in the source code",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Use the final URL."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Send a request to the server using the final URL."
                    },
                    {
                        "SubstepNumber": 11.3,
                        "SubstepString": "Successfully bypass the checks in the source code."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Capture the flag from the server response",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Capture the flag."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Extract the flag from the server response."
                    }
                ]
            }
        ]
    }
}