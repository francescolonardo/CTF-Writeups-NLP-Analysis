{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Visiting the website and finding a cookie that contains a JWT hashed with HS256."
            },
            {
                "StepNumber": 2,
                "StepString": "Using rockyou.txt to brute force the JWT secret with John The Ripper."
            },
            {
                "StepNumber": 3,
                "StepString": "Discovering the secret to be 'supersecret'."
            },
            {
                "StepNumber": 4,
                "StepString": "Creating a JWT with 'username: admin'."
            },
            {
                "StepNumber": 5,
                "StepString": "Adding the new JWT to the cookie to impersonate an admin."
            },
            {
                "StepNumber": 6,
                "StepString": "Visiting a non-existent route starting with '/admin/' to trigger a 404 error page, discovering a template injection vulnerability."
            },
            {
                "StepNumber": 7,
                "StepString": "Exploiting the template injection vulnerability to climb the Python MRO (Method Resolution Order) hierarchy and listing all usable classes."
            },
            {
                "StepNumber": 8,
                "StepString": "Finding the 'subprocess.Popen' class at index 405."
            },
            {
                "StepNumber": 9,
                "StepString": "Using the 'subprocess.Popen' class to spawn a reverse shell."
            },
            {
                "StepNumber": 10,
                "StepString": "Starting a 'netcat' listener on your server at the specified port."
            },
            {
                "StepNumber": 11,
                "StepString": "Gaining a shell and listing the directory."
            },
            {
                "StepNumber": 12,
                "StepString": "Finding the flag in a file named 'flag.txt'."
            }
        ]
    }
}