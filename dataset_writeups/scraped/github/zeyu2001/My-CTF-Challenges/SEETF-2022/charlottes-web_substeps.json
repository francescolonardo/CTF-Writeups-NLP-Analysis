{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified prototype pollution vulnerability in `utils.merge()` method",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify prototype pollution vulnerability"
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Vulnerability found in `utils.merge()` method"
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Exploited an off-by-one error in `background.js` font validation to manipulate `utils.FONTS[10]` and bypass standard checks",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Identify off-by-one error in `background.js` font validation"
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Manipulate `utils.FONTS[10]` using the off-by-one error"
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Bypass standard checks by exploiting the off-by-one error"
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Made a fetch request with polluted `credentials: include` option in `setFont.js` to use the credentials for `http://app/`",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Create a fetch request"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Modify fetch request to include polluted `credentials: include` option"
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Use the credentials for `http://app/` in the fetch request"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "The output was injected into the exploit page\u2019s `style` element, which was readable by the attacker",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Inject the output into the exploit page's `style` element"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Ensure the injected `style` element is readable by the attacker"
                    }
                ]
            }
        ]
    }
}