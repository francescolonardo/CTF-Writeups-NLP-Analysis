{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Examine the website and find the `database.sql` file containing password hashes."
            },
            {
                "StepNumber": 2,
                "StepString": "Use CrackStation to crack the hashes, obtaining credentials for the manager and admin users."
            },
            {
                "StepNumber": 3,
                "StepString": "Log in with the manager credentials, viewing a list of toys and properties."
            },
            {
                "StepNumber": 4,
                "StepString": "Identify the flag in the database with an 'approved' value set to 0."
            },
            {
                "StepNumber": 5,
                "StepString": "Find the `/api/toylist` endpoint in the `challenge/routes/index.js` file, and note that the 'approved' value must be 1 for the admin user."
            },
            {
                "StepNumber": 6,
                "StepString": "Notice the potential SQL injection vulnerability in the `database.js` file."
            },
            {
                "StepNumber": 7,
                "StepString": "Attempt various SQL injection payloads on the main login page, ultimately using the payload `admin' --` to bypass authentication and reveal the flag."
            }
        ]
    }
}