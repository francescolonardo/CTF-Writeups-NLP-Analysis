{
    "Cookies and Session Handling": [
        "Had the right PHPSESSID in cookies."
    ],
    "Server Configuration and Reverse Proxy": [
        "Used distinct virtual hosts and shell wildcards for the same result.",
        "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy.",
        "'req.ip' always pointed to the same IP address of the reverse proxy."
    ],
    "API and Data Manipulation": [
        "Observed the application displaying contents of '/api/answer'.",
        "Understood this was done server-side.",
        "Successfully bypassed restrictions.",
        "Manipulated the `statusCode` using the injected buttons.",
        "Ensure the request is made from the localhost.",
        "Proceed to send a GET request to the provided URL if the IP is not private.",
        "Intercept the data.",
        "Manipulate the intercepted data using burpsuite.",
        "Bypass the front end input sanitization.",
        "Recognize the potential involvement of code str_replace in changing language.",
        "Send the content of flag.txt to a webhook.",
        "Retrieve the flag from the server's response",
        "Discover a new path /server-status",
        "Retrieve the flag value 'flag{th3_an5w3r_w4s_HSCTF_0bvi0us1y}'."
    ],
    "User Interaction and Account Manipulation": [
        "Change the cookie values: userID to 768 and username to 'admin'.",
        "Start at a login/register page.",
        "Understand how to modify user's profile and upload images.",
        "Try XSS payloads on different input fields.",
        "Report the HTML file link to trick admin into opening it.",
        "Embed the 'id' of the attacker's user in the request body.",
        "Fill out registration form.",
        "Add 'account[role]' parameter with value 'admin'.",
        "Inject an address into the URL parameter.",
        "Find the flag inside the newly public gallery."
    ],
    "XML Parsing and File Access": [
        "Observed an interface that offered XML parsing as a service.",
        "Reviewed the XML return from the 'view XML' tab.",
        "Successfully extracted the flag from /var/www.",
        "Discover a Disallowed path /ingen/."
    ],
    "API and Data Retrieval": [
        "Receive a list of pumps and their IDs.",
        "Receive a notice that the request body must be JSON.",
        "Update the timestamp in the POST request.",
        "Submit an integer value as the input in the web application."
    ],
    "GraphQL and Schema Exploration": [
        "Generate an introspection query for graphql.",
        "The introspection query returns all the content of a graphql schema.",
        "Visualize the data structure using the graphql voyager tool."
    ],
    "Security Vulnerability Detection": [
        "Successfully extract the user.",
        "Successfully extract the password token.",
        "Suggested that the 'shell_exec' function is running.",
        "Notice an option to register a new account."
    ],
    "Server Interaction and Request Manipulation": [
        "Performed a simple curl request to '/\\%64ebug/answer'.",
        "Used %-decodes strings to match the '/debug/answer' endpoint.",
        "Send first GET request with 65534 empty spaces.",
        "Send second GET request with 65534 empty spaces.",
        "Include session ID in the request."
    ]
}