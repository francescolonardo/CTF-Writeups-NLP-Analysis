[
    "Analyzed the provided PHP source code for the application's authentication process",
    "Identified that the 'login' cookie is deserialized into a Login object",
    "Understood the structure of the 'Login' object which consists of a 'User' object and an MFA token",
    "Identified the presence of SQL object within User Class which executes SQL queries for user authentication",
    "Identified the opportunity for a PHP Object Injections vulnerability due to the deserialization process",
    "Formulated a Property-Oriented Programming (POP) chain for exploiting the identified vulnerability",
    "Created a custom 'Login' object where '$mfa_token' is a reference to the '$_correctValue' attribute to bypass the MFA token check",
    "Identified that the 'SQL' class has a '$query' attribute which can be modified to perform an SQL injection",
    "Created an SQL query that returns a 'valid' result set with 'email' and 'password' columns to bypass the authentication check",
    "Used the PHP serialize() function to serialize the custom 'Login' object",
    "Created a base64 encoded serialized data to inject into the 'login' cookie",
    "Injected the exploit into the 'login' cookie to bypass the login process and get access to the system"
]