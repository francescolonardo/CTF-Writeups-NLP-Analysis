{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Downloaded and analyzed website source code"
            },
            {
                "StepNumber": 2,
                "StepString": "Discovered 'Report Vulnerability' message requiring a reflected XSS exploit"
            },
            {
                "StepNumber": 3,
                "StepString": "Understood the website allowed changing the theme via a URL parameter `theme='value'`"
            },
            {
                "StepNumber": 4,
                "StepString": "Inferred the challenge was to exploit the `theme` parameter to inject XSS"
            },
            {
                "StepNumber": 5,
                "StepString": "Attempted payload to inject XSS via `theme` failed due to Content Security Policy"
            },
            {
                "StepNumber": 6,
                "StepString": "Tried to bypass CSP to inject XSS"
            },
            {
                "StepNumber": 7,
                "StepString": "Discovered a script on the `index.php` page calling `api.php` endpoint"
            },
            {
                "StepNumber": 8,
                "StepString": "Tried passing custom callback parameter to `api.php` endpoint"
            },
            {
                "StepNumber": 9,
                "StepString": "Hit a snag due to restrictions of the `trustedTypes` policy of CSP"
            },
            {
                "StepNumber": 10,
                "StepString": "Used DOM Clobbering technique to redefine `window.callback` and `trustedTypes`"
            },
            {
                "StepNumber": 11,
                "StepString": "Injected payload for basic XSS execution with DOM Clobbering"
            },
            {
                "StepNumber": 12,
                "StepString": "Decided to use the `jsonp` method itself to perform cross-origin request"
            },
            {
                "StepNumber": 13,
                "StepString": "Created two endpoints, `/evil/` for cookie grabbing script and `/cookie/` for receiving exploited cookies"
            },
            {
                "StepNumber": 14,
                "StepString": "Injected final payload to initiate the XSS to send the cookies from the server to the `/cookie/` endpoint"
            },
            {
                "StepNumber": 15,
                "StepString": "Decoded the base64 encoded flag from the cookies received"
            }
        ]
    }
}