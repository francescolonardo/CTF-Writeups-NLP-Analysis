Analyze the Python Flask API at `http://35.207.189.79/pyserver/server.py` and identify the vulnerable functionality due to unsanitized parameters.

Perform a login as an admin user to obtain the `token` value, which will be set in the cookies.

Identify the `DB_SECRET` variable containing the flag, which is stored in another table.

Craft a SQL injection payload to target the vulnerable functionality.

Send the HTTP POST request with the SQL injection payload to the server.

Examine the HTTP response containing a JSON object with null values for most keys and a non-null value for the key userName with the flag value.

Retrieve the flag.
