[
    "Recognize that the `Login` object contains an MFA token and a reference to a `User` object.",
    "Executed the payload using the 'unserialize()' function",
    "Noted the specific flag value: HarekazeCTF{j4v4scr1pt-0bfusc4t0r_1s_tsur41}",
    "Inserted the payload into the target site's URL.",
    "Conduct research on prototype pollution vulnerability.",
    "Craft attack payload using permitted characters.",
    "Identify LFI vulnerability.",
    "Note that a JWT key is created for each new user during registration.",
    "Locate the route '/login' in the website source.",
    "The POST-based XSS vectors are not exploitable for admin privilege access",
    "Submit the payload through the form.",
    "Noted filter size limitation",
    "Inject the command '127.0.0.1; ls -al' into the IP address field.",
    "Discover valid endpoints at 10.0.42.2 and 10.0.42.200.",
    "Send the crafted request to confirm the presence of the vulnerability.",
    "Analyze the challenge description for hints.",
    "Note that the cached secret is only available for 2 seconds after logging in.",
    "Visit lukas-app.de.",
    "Access the front-end JavaScript source code.",
    "Add the RS256-to-HS256 exploit to the JWT.",
    "Identify the need to perform an XSS attack.",
    "The payload executed successfully",
    "Observe the cookie 'not_admin' after form submission",
    "Specify the 'RS256' algorithm for signing",
    "Put all components of the attack together",
    "Located the flag.",
    "Set up a redis server.",
    "Take a break.",
    "Observe possibility of XSS attack from bot's lens.",
    "Decide to create a new HTML script element",
    "Send the admin to the page with the payload",
    "Retrieve the flag from the decoded base64 response.",
    "Enter a color",
    "Use the 'UpdatePassword' mutation.",
    "Identify HTTP request smuggling as the first obstacle."
]