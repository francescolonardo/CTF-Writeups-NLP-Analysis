[
    "Visit the target website.",
    "Observe the presence of a redirection URL: /?file=wc.php.",
    "Recognize that the redirection suggests a potential file inclusion vulnerability.",
    "Access the URL ?file=/etc/passwd.",
    "Identify the presence of the 'ctf' user in the /etc/passwd file.",
    "Access the URL ?file=robots.txt.",
    "Discover that /?file=checkpass.php is disallowed in robots.txt.",
    "Utilize the 'php://filter' wrapper to access the source code of checkpass.php.",
    "Locate the hardcoded password within the source code.",
    "Inspect the source code of wc.php.",
    "Search for the 'ctf' user's password hash within the README file.",
    "Inspect the HTML source code of the website.",
    "Identify the /login and /adminNames routes within the source code.",
    "Access the /login route of the website.",
    "Complete the login form with appropriate credentials.",
    "Open the Network Tab in your browser's developer tools.",
    "Locate and examine the HTTP request made to the server.",
    "Find and extract the token header containing a JWT.",
    "Use a JWT decoding tool to decode the JWT.",
    "Retrieve the payload from the decoded JWT.",
    "Access the /adminNames route of the website.",
    "Download the file from the /adminNames route.",
    "Extract the GitHub URL from the downloaded file.",
    "Access the GitHub repository using the extracted URL.",
    "Identify and retrieve the list of admin usernames from the repository.",
    "Apply the rot13 decryption algorithm to the received flag.",
    "Retrieve the real flag from the decrypted text.",
    "Examine the JavaScript code of the Express app.",
    "Identify the restrictions placed on the `file` parameter.",
    "Open and review the contents of the `a.cpp` file.",
    "Observe the presence of the `system(\"cat flag.txt\")` command in the code.",
    "Infer the existence of the `flag.txt` file in the same directory."
]