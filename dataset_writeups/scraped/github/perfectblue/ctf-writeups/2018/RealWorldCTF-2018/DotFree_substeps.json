{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Opened the provided URL which returned a page that accepts another URL and submits it.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Open the provided URL."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Observe a page that accepts another URL and submits it."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Observed possibility of XSS attack from bot's lens when it visits the URL provided on the page.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Observe possibility of XSS attack from bot's lens."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Visit the URL provided on the page."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Analyzed the source code of the page and identified JavaScript functions that handle creation of iframe or appending script source, and a message event listener that conducts some checks on iframe data from URL.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Analyze the source code of the page."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Identify JavaScript functions that handle creation of iframe or appending script source."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Identify a message event listener that conducts some checks on iframe data from URL."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Understood that the challenge is to pass checks where there should not be any dots, double slashes or non-ascii dot in the iframe value in the url.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Understand that the challenge is to pass checks."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Understand that dots, double slashes, or non-ascii dot are not allowed in the iframe value in the URL."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Noticed a flaw in check condition where it checks if iframe is not an object instead of checking if iframe value is not an object.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Notice a flaw in the check condition."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Realize that the check should be for iframe value not being an object, not iframe itself."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Created a payload that doesn't have dots or double slashes. This is done using data URI in the form 'data:text/html;base64,<base64 data>'.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Create a payload without dots or double slashes."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Use data URI in the form 'data:text/html;base64,<base64 data>' for the payload."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "The base64 data encodes an XMLHttpRequest which retrieves document's cookie and sends to a specified server.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Base64 encode an XMLHttpRequest."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "The encoded XMLHttpRequest retrieves document's cookie."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "The encoded XMLHttpRequest sends the cookie to a specified server."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Payload is structured in JSON and added to the URL after first '?' character.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Structure the payload in JSON format."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Add the JSON payload to the URL after the first '?' character."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Submitted the URL so that it is visited by the bot.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Submit the URL."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Wait for the bot to visit the URL."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Received the flag in server logs as a cookie in the HTTP GET request.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Check the server logs."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Identify the received flag as a cookie in the HTTP GET request"
                    }
                ]
            }
        ]
    }
}