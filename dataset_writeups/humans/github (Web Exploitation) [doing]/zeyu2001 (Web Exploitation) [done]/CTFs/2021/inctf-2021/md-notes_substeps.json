{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Received a Markdown Editor web application to host notes for a challenge with an admin bot that visits URL submissions",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Received a Markdown Editor web application to host notes for a challenge"
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Admin bot visits URL submissions"
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Wanting to create an XSS payload, started by analysing how the web application processes Markdown",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Started analysing how the web application processes Markdown"
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Found that the preview feature on the right side is an iframe of /demo",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Found that the preview feature is an iframe"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "The iframe source is /demo"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Found that the Preview button posts a message to the iframe, ensuring that the message is only sent to the intended receiver",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Preview button posts a message to the iframe"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Message is only sent to the intended receiver"
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Found that the iframe's message is received and processed in /demo, with data POST-ed to the /api/filter endpoint and sanitized HTML added to document.body.innerHTML",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Iframe's message is received and processed in /demo"
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Data is POST-ed to the /api/filter endpoint"
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Sanitized HTML is added to document.body.innerHTML"
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Noticed that the iframe also posts the response from the /api/filter endpoint to window.parent, meaning any site can create an iframe of the web application and receive the message",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Iframe posts the response from the /api/filter endpoint to window.parent"
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Any site can create an iframe of the web application and receive the message"
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Found that the user's cookies are sent along with the POST request, and if /api/filter endpoint returns sensitive, user-specific data based on these cookies, this information could be read",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "User's cookies are sent along with the POST request"
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Sensitive, user-specific data could be read if /api/filter endpoint returns based on these cookies"
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Realised that the server code for /api/filter endpoint does indeed return the hash of the user's token in the response",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Server code for /api/filter endpoint returns the hash of the user's token in the response"
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Created a payload that loads /demo in an iframe, posts a message to trigger the /api/filter POST request in the admin's context, then catches and sends the response, containing the admin's hash, to an exploit server",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Payload loads /demo in an iframe"
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Payload posts a message to trigger the /api/filter POST request in the admin's context"
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Payload catches and sends the response, containing the admin's hash, to an exploit server"
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Received the admin's hash on the exploit server, but realized that this is not enough to access the flag - admin's token access is required, which needs a CSRF to /api/flag, necessitating an XSS on the challenge server",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Received the admin's hash on the exploit server"
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Admin's token access is required to access the flag"
                    },
                    {
                        "SubstepNumber": 10.3,
                        "SubstepString": "CSRF to /api/flag is needed"
                    },
                    {
                        "SubstepNumber": 10.4,
                        "SubstepString": "XSS on the challenge server is necessitated"
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Noted that when the admin's hash is used, the /api/create handler does not sanitize data. Hence, XSS payload is generated by sending a POST request to /api/create",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "When the admin's hash is used, the /api/create handler does not sanitize data"
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "XSS payload is generated by sending a POST request to /api/create"
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Created a CSRF payload that fetches /api/flag and makes a callback to the exploit server with the page contents. Utilized fromCharCode() to avoid escaping single and double quotes",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "CSRF payload is created"
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "CSRF payload fetches /api/flag"
                    },
                    {
                        "SubstepNumber": 12.3,
                        "SubstepString": "CSRF payload makes a callback to the exploit server with the page contents"
                    },
                    {
                        "SubstepNumber": 12.4,
                        "SubstepString": "fromCharCode() is utilized to avoid escaping quotes"
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "Finally, received the /api/flag contents, URL-decoded the output, and obtained the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Received the /api/flag contents"
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "URL-decoded the output"
                    },
                    {
                        "SubstepNumber": 13.3,
                        "SubstepString": "Obtained the flag"
                    }
                ]
            }
        ]
    }
}