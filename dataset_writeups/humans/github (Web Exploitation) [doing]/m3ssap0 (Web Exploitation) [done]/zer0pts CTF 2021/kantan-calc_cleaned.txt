The challenge gives you a tar.gz containing the source code.

The website is a some sort of calculator.

Even if several articles on how to escape `vm` sandbox can be found on the Internet, here the point is to dump the source code of the defined function.

Two constraints are present: the payload must be lesser than 30 chars and if the output contains `zer0pts`, so the starting part of the flag, it will be blocked.

This is a code injection challenge.

First of all, a JavaScript named function can print itself, with comments, if its name is returned.

The structure of the given script can be seen as something like `(x, y)()`.

If you try to exfiltrate the function source code in this way, you will be blocked by the check on the output content, because the output is converted to a string and checked for the presence of `zer0pts`.

In JavaScript you can convert a string to an array of chars with the following clause: `[...p]`. With this trick you could bypass the check on the content.

But you can't execute that clause directly on `p` because it `is not iterable`. So you have to convert it to a string with a concatenation.

Putting all together, you can craft the payload and get the flag.