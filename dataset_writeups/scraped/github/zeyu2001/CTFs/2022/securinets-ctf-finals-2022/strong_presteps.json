[
    "Identified that it was a Jinja2 Template Injection challenge",
    "Understood the extensive filter used for the challenge",
    "Worked on bypassing '{{' and '}}' by using an if-else statement",
    "Found a workaround for using '.' by employing the 'attr' filter",
    "Utilized 'first' and 'last' to get the first and last items of a list; Converted items in a dictionary to a list using 'list'",
    "Bypassed '_', '\\', 'class', 'subclasses', 'getitem' by constructing a string",
    "Used 'request.args' to bypass banned characters",
    "Leveraged 'lower' filter to bypass 'class', 'subclasses', and 'getitem' strings",
    "Joined the 'class' string with preceding and ending '__' characters using 'join' filter",
    "Built Remote Code Execution (RCE) payload using '().__class__.__subclasses__.__getitem__(x)' method, with 'x' corresponding to the index of 'subprocess.Popen'",
    "Bruteforced the value of 'x' by submitting RCE payload with different 'x' values until a shell was received",
    "Used similar approach to bypass '.' character for callback domain and '\"' character for bash command",
    "Created final payload using all the methods of bypassing and injecting discovered",
    "Submitted the final payload to complete the challenge"
]