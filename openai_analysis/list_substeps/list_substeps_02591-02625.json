[
    "Abused the type attribute.",
    "Identify the goal: Bypass a WAF (Web Application Firewall).",
    "Understand the list of blocked keywords/functions in the source PHP code",
    "Run the written JavaScript",
    "Notice lack of content verification or removal of unwanted content",
    "Find a cookie that contains a JWT hashed with HS256.",
    "Identified the need for a '.jsapi.tech' subdomain takeover.",
    "Included code in the payload to return the flag as the username",
    "Locate 2 'users.db' files.",
    "Attempt SQL injection using MySQL comments in place of spaces.",
    "Repeat the previous substep 4 more times",
    "Determined the solution for the crossword puzzle.",
    "Search for the flag within the content of the index.php file",
    "Send the composed POST request via curl.",
    "Observe the redirection upon successful authentication.",
    "URL format: `http://challenge.nahamcon.com:32132/exploit?text=%3Ciframe%20src=%22https://ATTACKER_URL/exploit.html%22%3E&color=%2324d600`",
    "Discover that the 'DB_SECRET' is stored in another table.",
    "Dumped the database.",
    "Take advantage of the Flask server's failure to comply with RFC norms",
    "Discover that the 'auth' cookie was previously set in 'gethash.sh'",
    "Conduct an analysis on the resulting PNG file.",
    "Successfully complete the POST request with all required parameters.",
    "Use HTTP request smuggling techniques",
    "Use the /find endpoint.",
    "Specify the number range to be checked.",
    "Investigated the search function.",
    "Verified it returns data for user ID 1.",
    "Discovered that the app uses local storage to save notes.",
    "Inject an address into the URL parameter.",
    "Devise the exploit.",
    "Discovered that HTML injection is possible",
    "Assumed an admin visit to the site.",
    "Utilize the network tab in the browser's developer tools.",
    "List the files using the backtick-enclosed 'ls' command.",
    "Scour the page source and Javascript files to locate the token."
]