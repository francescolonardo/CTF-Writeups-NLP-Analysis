[
    "Make a GET request to the /api/admin endpoint with the new JWT.",
    "Access the given URL.",
    "Unintended solution using 'Lazy-loading' property.",
    "Send an XSS to the pop-up",
    "Visited the provided webpage",
    "Get the flag",
    "Use the internetwache GitTools.",
    "Converted the hexadecimal values into binary data.",
    "Read the contents of 'flag.txt'.",
    "Find that SQLite treats large integers the same way it treats strings during concatenation.",
    "Analyzed 'phpinfo()' output.",
    "Submitted this payload to the meme generator",
    "Examined the site's JavaScript script 'script.js'.",
    "Insert an image reference with an 'onerror' attribute.",
    "Open the app's login page.",
    "Dump the related WebSocket packets for further analysis (decoding).",
    "Formed a request to the proxy server.",
    "Examined the login form on 'login.php'.",
    "Encode the script into base64 to bypass the filtering.",
    "..by inputting ' OR 1=1--'",
    "Use sqlmap tool.",
    "View the HTML source code.",
    "Confirmed SQLite injection was possible by manipulating the 'moneys=' parameter and seeing the results in the green text.",
    "Navigate to the disallowed path /ingen/.",
    "Try using /search as per instructions in the response.",
    "Inject a NULL byte into the final URL.",
    "Identify the presence of the flag utflag{n3xt_y3ar_go1ng_bl1nd}",
    "Locate the captcha boxes on the screen",
    "Observe the HTTP response.",
    "Reconstruct the user data from the encoded string.",
    "Create a Python script",
    "Recognize the presence of a Local File Inclusion vulnerability on '/post.php'.",
    "Navigate to the 'Sources' tab in the developer tools.",
    "Sanitized HTML is added to document.body.innerHTML",
    "Observe that the server reflects the passed productId value in the response."
]