<h1>DarkCTF 2020 – PHP İnformation</h1>

<ul>
<li><strong>Category:</strong> web</li>
<li><strong>Points:</strong> 198</li>
</ul>

<h2>Challenge</h2>

<blockquote>
  <p>Let's test your php knowledge.</p>
  
  <p>Flag Format: DarkCTF{}</p>
  
  <p>http://php.darkarmy.xyz:7001</p>
</blockquote>

<h2>Solution</h2>

<p>Connecting to the web page will give you the following PHP source code.</p>

<p>```php
<?php</p>

<p>include "flag.php";</p>

<p>echo show_source("index.php");</p>

<p>if (!empty($<em>SERVER['QUERY</em>STRING'])) {
    $query = $<em>SERVER['QUERY</em>STRING'];
    $res = parse_str($query);
    if (!empty($res['darkctf'])){
        $darkctf = $res['darkctf'];
    }
}</p>

<p>if ($darkctf === "2020"){
    echo "<h1 style='color: chartreuse;'>Flag : $flag</h1></br>";
}</p>

<p>if ($<em>SERVER["HTTP</em>USER<em>AGENT"] === base64</em>decode("MjAyMF90aGVfYmVzdF95ZWFyX2Nvcm9uYQ==")){
    echo "<h1 style='color: chartreuse;'>Flag : $flag_1</h1></br>";
}</p>

<p>if (!empty($<em>SERVER['QUERY</em>STRING'])) {
    $query = $<em>SERVER['QUERY</em>STRING'];
    $res = parse<em>str($query);
    if (!empty($res['ctf2020'])){
        $ctf2020 = $res['ctf2020'];
    }
    if ($ctf2020 === base64</em>encode("ZGFya2N0Zi0yMDIwLXdlYg==")){
        echo "<h1 style='color: chartreuse;'>Flag : $flag_2</h1></br>";</p>

<pre><code>    }
}



if (isset($_GET['karma']) and isset($_GET['2020'])) {
    if ($_GET['karma'] != $_GET['2020'])
    if (md5($_GET['karma']) == md5($_GET['2020']))
        echo "&lt;h1 style='color: chartreuse;'&gt;Flag : $flag_3&lt;/h1&gt;&lt;/br&gt;";
    else
        echo "&lt;h1 style='color: chartreuse;'&gt;Wrong&lt;/h1&gt;&lt;/br&gt;";
}
</code></pre>

<p>?>
```</p>

<p>You have to satisfy all checks to print the flag.</p>

<p>For the last check you have to find <a href="https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value">two colliding MD5 strings</a>. Based on <a href="https://ideone.com/UyP22Z">this example</a> you can write your <a href="md5_collisions.php">script</a> to generate the URL-encoded version of the original strings for which hexadecimal values are provided.</p>

<p>```php
<?php</p>

<p>$hex1 = '4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2';
$hex2 = '4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2';</p>

<p>$bin1 = hex2bin($hex1);
$bin2 = hex2bin($hex2);</p>

<p>if ($bin1 == $bin2)
    echo 'The binary data is the same' . PHP<em>EOL;
else 
    echo 'The binary data is not the same' . PHP</em>EOL . PHP_EOL;</p>

<p>$md51 = md5($bin1);
$md52 = md5($bin2);</p>

<p>echo 'MD5 hash for binary #1: ' . $md51 . PHP<em>EOL;
echo 'MD5 hash for binary #2: ' . $md52 . PHP</em>EOL;</p>

<p>if ($md51 == $md52)
    echo 'The MD5 hashes are the same' . PHP<em>EOL;
else 
    echo 'The MD5 hashes are not the same' . PHP</em>EOL;</p>

<p>$urlencoded1 = urlencode($bin1);
$urlencoded2 = urlencode($bin2);
echo PHP<em>EOL;
echo 'The urlencoded #1 is: '. $urlencoded1 . PHP</em>EOL;
echo 'The urlencoded #2 is: '. $urlencoded2 . PHP_EOL;
```</p>

<p>The script will give you the strings.</p>

<p>```
The binary data is not the same</p>

<p>MD5 hash for binary #1: 008ee33a9d58b51cfeb425b0959121c9
MD5 hash for binary #2: 008ee33a9d58b51cfeb425b0959121c9
The MD5 hashes are the same</p>

<p>The urlencoded #1 is: M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3<em>Bu%93%D8Igm%A0%D1U%5D%83%60%FB</em>%07%FE%A2
The urlencoded #2 is: M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3<em>Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB</em>%07%FE%A2
```</p>

<p>So you can craft the complete request.</p>

<p><code>
GET /?darkctf=2020&amp;ctf2020=WkdGeWEyTjBaaTB5TURJd0xYZGxZZz09&amp;karma=M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;2020=M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2 HTTP/1.1
Host: php.darkarmy.xyz:7001
User-Agent: 2020_the_best_year_corona
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
</code></p>

<p>The webpage will give you the following.</p>

<p>```html</p>

<h1 style='color: chartreuse;'>Flag : DarkCTF{</h1></br><h1 style='color: chartreuse;'>Flag : very_</h1></br><h1 style='color: chartreuse;'>Flag : nice</h1></br><h1 style='color: chartreuse;'>Flag : _web_challenge_dark_ctf}</h1>

<p>```</p>

<p>The flag is the following.</p>

<p><code>
DarkCTF{very_nice_web_challenge_dark_ctf}
</code></p>
