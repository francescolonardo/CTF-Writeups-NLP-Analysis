{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Checked source code and identified the prototype pollution vulnerability",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Checked source code."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identified the prototype pollution vulnerability."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Understood that 'JSON.parse' allows the '__proto__' key, storing it as ['__proto__']",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Understood that 'JSON.parse' allows the '__proto__' key."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Stored the '__proto__' key as ['__proto__']."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identified how to leverage the prototype pollution to run 'require('./usage')'",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identified how to leverage the prototype pollution."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Leveraged the prototype pollution to run 'require('./usage')'."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Noticed that causing a TypeError triggers the 'require('./usage')'",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Noticed that causing a TypeError triggers the 'require('./usage')'."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Interpreted how 'pkg' and 'pkgPath' can be controlled by polluting '__proto__.data' and '__proto__.path'",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Interpreted how 'pkg' and 'pkgPath' can be controlled."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Controlled 'pkg' by polluting '__proto__.data'."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Controlled 'pkgPath' by polluting '__proto__.path'."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Found out that 'pkg' is an object containing the 'package.json' fields and 'pkgPath' is the path to this package",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Found out that 'pkg' is an object containing the 'package.json' fields."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Found out that 'pkgPath' is the path to this package."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Found that we can load any JavaScript file by polluting 'data' and 'exports' in '__proto__.data' and '__proto__.path'",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Found that we can load any JavaScript file."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Polluted 'data' in '__proto__.data' to load the JavaScript file."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Polluted 'exports' in '__proto__.path' to load the JavaScript file."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Found '/opt/yarn-v1.22.19/preinstall.js' in the container",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Found '/opt/yarn-v1.22.19/preinstall.js' in the container."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Identified that 'child_process.execFileSync' is being called in 'preinstall.js'",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Identified that 'child_process.execFileSync' is being called in 'preinstall.js'."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Understood that to reach this code path, 'npm_config_global' needs to be polluted to a truthy value",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Understood that to reach this code path, 'npm_config_global' needs to be polluted."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Polluted 'npm_config_global' to a truthy value."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Realized that 'process.env.npm_execpath' can be controlled since it is not set by default",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Realized that 'process.env.npm_execpath' can be controlled."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Set 'process.env.npm_execpath' to a controlled value."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Figured out how to use '--eval' option to run inline JavaScript",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Figured out how to use '--eval' option to run inline JavaScript."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "Realized JSON payload cannot have spaces due to regex match and used '${IFS}' to get around this",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Realized JSON payload cannot have spaces due to regex match."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Used '${IFS}' to get around the regex match restriction."
                    }
                ]
            },
            {
                "StepNumber": 14,
                "StepString": "Defined final payload using 'wget' and command substitution to exfiltrate the '/readflag' output",
                "Substeps": [
                    {
                        "SubstepNumber": 14.1,
                        "SubstepString": "Defined final payload using 'wget' and command substitution."
                    },
                    {
                        "SubstepNumber": 14.2,
                        "SubstepString": "Exfiltrated the '/readflag' output using the defined payload."
                    }
                ]
            },
            {
                "StepNumber": 15,
                "StepString": "Sent payload and received flag on the HTTP server",
                "Substeps": [
                    {
                        "SubstepNumber": 15.1,
                        "SubstepString": "Sent the payload to the HTTP server."
                    },
                    {
                        "SubstepNumber": 15.2,
                        "SubstepString": "Received the flag from the HTTP server."
                    }
                ]
            }
        ]
    }
}