{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Study and understand the given client-side web exploitation challenge, where a URL is submitted to an '/share' endpoint which is then visited by an admin bot",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Study and understand the given client-side web exploitation challenge."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Submit a URL to the '/share' endpoint."
                    },
                    {
                        "SubstepNumber": 1.3,
                        "SubstepString": "Visit the URL submitted to the '/share' endpoint by an admin bot."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Identify the '/queue' WebSocket endpoint where the flag resides, with the conditions that the WebSocket client's origin must start with 'http://localhost' and the client having the correct 'auth' cookie set",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Identify the '/queue' WebSocket endpoint."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Verify that the WebSocket client's origin starts with 'http://localhost'."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Check if the client has the correct 'auth' cookie set."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Understand that the correct 'auth' cookie is set at the '/auth' endpoint when the request is made locally by the admin bot",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Understand that the correct 'auth' cookie is set at the '/auth' endpoint."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Confirm that the request to the '/auth' endpoint is made locally by the admin bot."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Perform a GET-based CSRF through a top-level navigation to set the authentication cookie for the victim using JavaScript, followed by a 'sleep' for 1 second to ensure the navigation completion and cookie placement",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Perform a GET-based CSRF through a top-level navigation."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Set the authentication cookie for the victim using JavaScript."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Ensure the completion of navigation and placement of the cookie by sleeping for 1 second."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Understand that the WebSockets library used, flask_sockets is quite old, with no vulnerability in the ws.origin",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Understand that the WebSockets library used is flask_sockets."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Realize that there is no vulnerability in the ws.origin."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Notice that ws.origin corresponds to the Origin request header, which is forbidden to be modified by JavaScript with comprises of the webpage URL, i.e., ://hostname:port",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Notice that ws.origin corresponds to the Origin request header."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Understand that the Origin request header cannot be modified by JavaScript."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Recognize that the Origin request header comprises the webpage URL in the format: ://hostname:port."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Realize that there is no way around the exploit page's origin needing to start with 'http://localhost', unless a browser's zero-day allows a malicious webpage to spoof Origin headers",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Realize that the exploit page's origin must start with 'http://localhost'."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Acknowledge that there is no known way to bypass the requirement for 'http://localhost' as the origin."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Consider the possibility of exploiting a browser zero-day to spoof Origin headers."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Manipulate the fact that sufficient validation does not ensure WebSocket connection came from a page hosted on localhost, hence domain starting with localhost could be used, such as localhost.zeyu2001.com",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Manipulate the fact that WebSocket connection validation does not guarantee that the page is hosted on localhost."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Consider using a domain starting with localhost, such as localhost.zeyu2001.com."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Identify that CSRF token is not being checked and WebSockets are not restricted by the Same-Origin Policy, hence enabling 'cross-site WebSocket hijacking' to obtain and exfiltrate the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Identify that CSRF token is not being checked."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Recognize that WebSockets are not restricted by the Same-Origin Policy."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Understand that 'cross-site WebSocket hijacking' can be used to obtain and exfiltrate the flag."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Construct a page hosted on a domain starting with 'localhost' and submitted to '/share', this script sets the auth token by making the bot visit 'http://localhost:7070/auth', opens a WebSocket to 'ws://localhost:7070/quote' and exfiltrates the data to 'http://ATTACKER_URL'",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Construct a page hosted on a domain starting with 'localhost'."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Submit the constructed page to the '/share' endpoint."
                    },
                    {
                        "SubstepNumber": 10.3,
                        "SubstepString": "Set the auth token by making the bot visit 'http://localhost:7070/auth'."
                    },
                    {
                        "SubstepNumber": 10.4,
                        "SubstepString": "Open a WebSocket to 'ws://localhost:7070/quote'."
                    },
                    {
                        "SubstepNumber": 10.5,
                        "SubstepString": "Exfiltrate the data to 'http://ATTACKER_URL'."
                    }
                ]
            }
        ]
    }
}