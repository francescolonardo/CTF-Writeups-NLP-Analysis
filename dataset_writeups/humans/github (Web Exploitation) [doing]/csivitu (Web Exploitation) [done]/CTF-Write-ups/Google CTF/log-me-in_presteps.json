[
    "Analyzed the source code of the web application and noticed that body-parser is set to allow arrays and objects",
    "Noticed that the output in the /login POST route has not been stringified, which gives the possibility to pass an object in the query statement",
    "Studied the official `mysql` docs to understand how objects are handled",
    "Inferred the username to be michelle from the code",
    "Attempted to pass an object in place of password, with a known attribute",
    "Submitted this payload 'csrf&username=michelle&password[username]=michelle' which makes password an object",
    "Understood that objects are converted into comma separated attributes",
    "Understood that this works as 'password' = 'username' evaluates to 0 and then 0 compared with 'michelle' returns true",
    "Used this exploit to log in",
    "Executed curl command to make a POST request to the /login with the payload",
    "Extracted the session cookie from the response headers",
    "Used the session cookie to visit /flag and collect the flag",
    "Alternatively, wrote a python script that automates the process of sending the POST request, extracting the cookie and getting the flag"
]