{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified XSS vulnerability in the feedback feature of the site enabling CSRF attacks on the admin"
            },
            {
                "StepNumber": 2,
                "StepString": "Used the XSS vulnerability to send a POST request to '/reset2fa' aiming to reset the admin's 2FA code"
            },
            {
                "StepNumber": 3,
                "StepString": "Included 'credentials: include' to ensure same-origin policy wouldn't block the request"
            },
            {
                "StepNumber": 4,
                "StepString": "Upon promise resolution, used 'fetch' function to send the response text (containing the new 2FA token) to an external URL"
            },
            {
                "StepNumber": 5,
                "StepString": "Decoded the 2FA token received from previous step to obtain admin 2FA code"
            },
            {
                "StepNumber": 6,
                "StepString": "Used the 2FA token on an authenticator application to generate the admin 2FA codes"
            },
            {
                "StepNumber": 7,
                "StepString": "Used the generated 2FA code to perform another CSRF attack on the admin"
            },
            {
                "StepNumber": 8,
                "StepString": "Sent a POST request to '/show_secret' (using the stolen 2FA codes) with the aim of stealing the admin's secrets"
            },
            {
                "StepNumber": 9,
                "StepString": "Included 'Content-Type: application/json' in the request header and 'otp' and 'secretId' in the request body"
            },
            {
                "StepNumber": 10,
                "StepString": "Upon promise resolution, used 'fetch' function to send the response text (containing the secrets) to an external URL"
            },
            {
                "StepNumber": 11,
                "StepString": "Decoded the flag from the base64-encoded string received from previous step"
            }
        ]
    }
}