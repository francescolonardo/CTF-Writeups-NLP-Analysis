{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify the goal: Bypass a WAF (Web Application Firewall), with the IP address being checked using the ipaddress library in Python."
            },
            {
                "StepNumber": 2,
                "StepString": "Understand the provided code, which validates a given IP by first checking if it is a private IP using the ipaddress library. If the IP is not private (i.e., it's a global IP), the code proceeds to send a GET request to the provided url."
            },
            {
                "StepNumber": 3,
                "StepString": "Observe that the code is structured in such a way that it performs two DNS resolutions: the first to check if the destination is private, and the second to request the resource."
            },
            {
                "StepNumber": 4,
                "StepString": "Add two A records to the DNS entry in an attempt to bypass this double-check, by first resolving to 127.0.0.1 (a local IP) and then to 51.38.138.162 (an IP address of a server)."
            },
            {
                "StepNumber": 5,
                "StepString": "Make several attempts with this setup until the flag is obtained."
            },
            {
                "StepNumber": 6,
                "StepString": "For a more reliable solution, consider setting up a personal DNS server: one that will temporarily respond with a public IP (when the Python program is checking), but then resolve to the local IP when the GET request is made."
            },
            {
                "StepNumber": 7,
                "StepString": "Because this method is similar to DNS Rebinding, consider using a tool such as singularity to set up this type of server."
            },
            {
                "StepNumber": 8,
                "StepString": "Demo the reliability of this solution by using the DEMO application provided by singularity, replacing the RANDOM placeholder in the URL with something random."
            }
        ]
    }
}