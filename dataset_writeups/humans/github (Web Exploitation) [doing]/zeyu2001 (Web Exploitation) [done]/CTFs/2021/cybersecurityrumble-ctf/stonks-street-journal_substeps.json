{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Signed up on the website and viewed the invoice URL, which was in the format '/legacy_invoice_system/BASE64_ENCODED_STRING'",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Signed up on the website."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Viewed the invoice URL in the format '/legacy_invoice_system/BASE64_ENCODED_STRING'."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Decoded the base64-encoded string to 'USERNAME-YEAR-MONTH-DAY'",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Decoded the base64-encoded string."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Added a special character (') to the end of the username, causing an SQL error",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Added a special character (') to the end of the username."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Caused an SQL error."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Collected from the error message that the username and signup date were passed into the SQL query without sanitization",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Collected from the error message."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Username and signup date were passed into the SQL query."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "No sanitization was applied."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Created a custom SQLMap tamper script that appends a payload to the back of the signup date and base64-encoded the entire input before passing it to the injection point at 'GET /legacy_invoice_system/*'",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Created a custom SQLMap tamper script."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Appended a payload to the back of the signup date."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Base64-encoded the entire input."
                    },
                    {
                        "SubstepNumber": 5.4,
                        "SubstepString": "Passed the input to the injection point at 'GET /legacy_invoice_system/*'."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Ran SQLMap with the script using the command 'sqlmap -r invoice.req --tamper tamper.py --threads 10 -T news_article --dump' to dump the database",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Ran SQLMap with the script."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Used the command 'sqlmap -r invoice.req --tamper tamper.py --threads 10 -T news_article --dump'."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Dumped the database."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Located the flag within the public news_article table of the database dump",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Located the flag."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Flag was located within the public news_article table of the database dump."
                    }
                ]
            }
        ]
    }
}