[
    {
        "Debugging, Monitoring, and Troubleshooting": [
            "Monitor the Network Tab responses.",
            "Observed the output on my netcat listener",
            "Utilize the network tab in the browser's developer tools.",
            "Viewed the backend activity in the Network tab.",
            "Detect open debugging ports."
        ]
    },
    {
        "N/A": [
            "Retrieve the flag from the server response",
            "Retrieve the flag from the server.",
            "Run the command 'curl -H \"Accept-Language: sv-SE\" very.uniquename.xyz:8880'",
            "Executed a curl command to make a POST request",
            "Set up a netcat listener on a local server.",
            "Capture incoming connections.",
            "Cookies are sent by the executed payload to the netcat listener.",
            "Send a request to obtain a list of all users.",
            "Start the instance.",
            "Received the server's response to the malicious `POST` request.",
            "Observe the server's response.",
            "Understand that the app listens to 'POST' requests.",
            "Identify that the requests are made to '/captcha'.",
            "We need an actively running server to receive this request and log the cookie.",
            "We run this server on all interfaces '0.0.0.0' on port '16361'.",
            "Identify the second function that is used to proxy images.",
            "Download the source code.",
            "Send the code to the site administrator",
            "Wait for the admin cookies to be caught",
            "Server returned all allowed methods.",
            "Received different responses from '/two/' endpoint with 'PUT' and 'CONNECT' HTTP verbs.",
            "Analyze the provided PCAP file",
            "Identify a packet (#6) in the PCAP file",
            "Identify packet #261 in the capture",
            "Identify packet #263 in the capture",
            "Observe the flag in the response from the server",
            "Analyze the provided PCAP file.",
            "Investigated the responses received.",
            "Paid particular attention to the HTTP headers: 'Server', 'Via', 'X-Served-By'.",
            "Viewed the backend infrastructure.",
            "Start a listening host with 'nc -lkv 1337'",
            "Monitor the websockets traffic",
            "Observe the packets used for post retrieval",
            "Analyze the websockets packet structure",
            "Receive partial flag",
            "Observe the output",
            "Download files from the target server.",
            "Connect to the website 138.247.13.115.",
            "Set up a listening server using 'netcat'.",
            "Observe incoming requests.",
            "Inspect the HTTP Response.",
            "Suspect that a reverse proxy might be stripping the X-Forwarded-For header.",
            "Set up a wildcard DNS listener.",
            "Observe the returned DNS query for example.com.",
            "Used PORT ftp command",
            "Infer that the IP address has prefix 219",
            "Observe the HTTP response header",
            "Use Wireshark to read the packet capture file.",
            "Search for HTTP packets within the packet logs.",
            "Identify the existence of a WebSocket tunnel from the 'HTTP/1.1 101 Switching Protocols' packet.",
            "Dump the related WebSocket packets for further analysis (decoding).",
            "Identify that the request was double proxied with Apache.",
            "Identify that the request was double proxied with Nginx.",
            "Determined the system only responded with the flag if the request came from the loopback network.",
            "Consider setting up a personal DNS server for a more reliable solution.",
            "Modify the server configuration settings",
            "Point the server to the testing server IP address or domain",
            "Attempt to access /server-status",
            "Succeed in accessing /server-status",
            "Establish a connection to localhost:12380.",
            "Discover website hosting on Apache Traffic Server 7.1.1.",
            "Discover website hosting on Nginx server 1.15.5.",
            "Intercept the request.",
            "Performed the action of opening port 80.",
            "Identify the target port as port 11111",
            "Establish a connection to port 11111",
            "Started with port 20022",
            "Discover a command related to a netcat session.",
            "Send a GET request to the URL.",
            "Identify an inaccessible server that is hosting data-server.",
            "Use it to SSH onto the target server.",
            "Identify another part of the Nginx configuration that preserves request headers when requests are forwarded to Gunicorn",
            "Final server returns Server: Apache/2.4.50 (Unix).",
            "Admin bot visits URL submissions",
            "Communicate with any TCP server using Gopher protocol.",
            "Performed a port scan and identified Apache server version 2.4.49 operating on port 12380",
            "Realized the ATS server forwards the payload as a single request to the Nginx backend.",
            "Identify the application listening on port 11111.",
            "Determine the IP address in the URL.",
            "Scan the 10.0.42.0/24 network.",
            "Discovered that headless mode of Chrome doesn't perform cache partitioning.",
            "Performed an internal port scan for ports between 5000 and 10000.",
            "Found out that ports 8080 and 9006 were open.",
            "Identified that the page at port 8080 is the same as the public challenge site.",
            "Tried to access port 9006 directly but didn't get meaningful information.",
            "Receive the request.",
            "Understand that the port scan needs to be completed before the browser instance is closed.",
            "Use the obtained port number for the request.",
            "Received a request from the proxy server.",
            "Through the request captured",
            "Accounted for pipelining in the server.",
            "Discover that the Express application is put behind a reverse proxy (Apache Traffic Server).",
            "Use the server's IP address and port number in the command",
            "Identify ATS and Puma as the systems involved in the smuggling.",
            "Host a server to capture the request.",
            "Capture the request.",
            "Understand that the rendering is done via a custom host header"
        ]
    },
    {
        "Tools, Scripting, and System Interactions": [
            "Prepared my server for listening with netcat",
            "Set up a netcat listener on my server",
            "Specify the port number.",
            "You can run this script anywhere that is internet accessible, port forward port '16361' or deploy on Google Cloud. But, the easiest method is to use ngrok.",
            "Or, use Wireshark for analyzing the HTTP traffic.",
            "Construct a curl command to send the payload to the server.",
            "Execute the curl command to send the payload to the server.",
            "Intercept data between the server and the client.",
            "Executed the 'dig' command on 'asdf.jsapi.tech'."
        ]
    },
    {
        "Web Interaction and Navigation": [
            "Locate the 'Host' header in the HTTP request.",
            "Set the 'Host' as 'dscvit.com'.",
            "Explored the site using ZAP Proxy.",
            "Planned to execute 'curl http://localhost:3000/get_flag' to obtain output through the webpage.",
            "Took note of the different server requests that were sent as a result.",
            "Observed that the source code of the site became visible.",
            "Waited and read the response as it came in.",
            "'req.ip' always pointed to the same IP address of the reverse proxy.",
            "Ensure the request is made from the localhost.",
            "Proceed to send a GET request to the provided URL if the IP is not private.",
            "Caused the proxy server to send a request to the specified URL.",
            "Send GET requests with incrementing 'id' using the script."
        ]
    },
    {
        "Data Analysis, Manipulation, and Storage Interactions": [
            "Found a response header",
            "Inspect the format of request packets.",
            "Analyze the format of response packets.",
            "Executed the URL.",
            "The encoded XMLHttpRequest sends the cookie to a specified server.",
            "Noted that the SQL query was sent to FD 4.",
            "Read the response from FD 4.",
            "Sent the encoded cookies to a pre-defined URL controlled by the attacker."
        ]
    },
    {
        "Exploitation Techniques and Payload Handling": [
            "Executed the modified command and obtained the flag output from the server.",
            "Cause the checkpoint action to be executed by exceeding 10 records.",
            "Payload catches and sends the response, containing the admin's hash, to an exploit server",
            "Establish a reverse shell.",
            "Caught the request including the Admin-Key on our own server."
        ]
    },
    {
        "Code, Application, and Script Analysis": [
            "Identify the server's functioning port and host from the extracted main execution function.",
            "Analyze 'cgi-bin/' directory",
            "Send the document cookies to an attacker-controlled server.",
            "Craft AJP Requests to be sent using Request Smuggling.",
            "Perform the first DNS resolution to check if the destination is private.",
            "Perform the second DNS resolution to request the resource.",
            "Analyze the response headers.",
            "Receive the port number from the exfiltration attempt."
        ]
    },
    {
        "Documentation, Strategy, and Miscellaneous Techniques": [
            "Noted the server requests"
        ]
    },
    {
        "Information Gathering and Security Analysis": [
            "Switch to a different IP address",
            "Use the original token-generating IP address",
            "Perform an nmap scan on IP 18.213.16.123.",
            "Confirm that IP 18.213.16.123 is not a local IP.",
            "Configure the personal DNS server to respond with a public IP during the IP check.",
            "Configure the personal DNS server to resolve to the local IP during the GET request.",
            "Set up the DNS server similar to DNS Rebinding.",
            "Locate the challenge at port 8080.",
            "Pivot from the previously found IP address.",
            "Scan the pivoted IP address.",
            "Investigate the backend.",
            "Note that a remote debugging port is exposed.",
            "Understand that the port scan needs to be completed within 30 seconds.",
            "Observe that the application is behind AWS ELB.",
            "Noted that the poll options are exfiltrated to `example.com`.",
            "Identified the wildcard DNS configuration responsible for the pointing."
        ]
    },
    {
        "Authentication, Session, and User Management": [
            "Note that the server checks the X-Forwarded-For header to validate the client IP."
        ]
    }
]