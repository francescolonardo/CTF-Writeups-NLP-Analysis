{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "The challenge was to host 'https://chall1.jsapi.tech' on GitHub. This site provided an HTML interface for writing and saving notes.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Visited the website 'https://chall1.jsapi.tech'."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Observed the HTML interface for writing and saving notes."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Upon examination of the site's JavaScript script 'script.js', it was found that it added the message event handler to the window after meeting several checks.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Examined the site's JavaScript script 'script.js'."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identified the message event handler added to the window."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Verified that the event handler is added after meeting several checks."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "These checks included whether the 'enableapi' query parameter was set to 'true', if 'recv' query parameter was a subdomain of 'jsapi.tech', and if the window was framed or opened by another window.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Checked if the 'enableapi' query parameter was set to 'true'."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Checked if the 'recv' query parameter was a subdomain of 'jsapi.tech'."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Checked if the window was framed or opened by another window."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "It was discovered that if the subdomain is 'jsapi.tech', it points to 'sohomdatta1.github.io' thanks to a wildcard DNS configuration.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Discovered that the subdomain 'jsapi.tech' points to 'sohomdatta1.github.io'."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Identified the wildcard DNS configuration responsible for the pointing."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "By using the 'dig' command on 'asdf.jsapi.tech', it was confirmed that any new repository with a CNAME file containing 'asdf.jsapi.tech' can be created to serve a GitHub pages site at 'asdf.jsapi.tech'.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Executed the 'dig' command on 'asdf.jsapi.tech'."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Confirmed the possibility of creating a new repository with a CNAME file containing 'asdf.jsapi.tech'."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Verified the GitHub pages site at 'asdf.jsapi.tech' can be served."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Further scrutiny of the code revealed that when a note is saved and self.set() is called, the note's contents are added to the 'data-last' attribute of the '#note-text-area' element. The DOMPurify v2.3.0 tool is used for sanitizing the note, with 'link' and 'style' tags explicitly permitted.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Examined the code to understand the note saving mechanism."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Identified the addition of note contents to the 'data-last' attribute of the '#note-text-area' element."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Noted the usage of DOMPurify v2.3.0 tool for sanitizing the note."
                    },
                    {
                        "SubstepNumber": 6.4,
                        "SubstepString": "Verified that 'link' and 'style' tags are explicitly permitted during sanitization."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "This allows the addition of DOMPurify-sanitized HTML into the child iframe if a postMessage starting with 'NOTE_APP_SET_REQUEST' is sent.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Understood the condition for adding DOMPurify-sanitized HTML into the child iframe."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Noted that the postMessage should start with 'NOTE_APP_SET_REQUEST' to trigger the addition."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "The site's Content-Security-Policy (CSP) allowed stylesheets to be loaded from '*.jsapi.tech', enabling the loading of a CSS file from the exploit domain.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Examined the Content-Security-Policy (CSP) of the site."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Identified the allowance of loading stylesheets from '*.jsapi.tech'."
                    },
                    {
                        "SubstepNumber": 8.3,
                        "SubstepString": "Realized that this allows loading of a CSS file from the exploit domain."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "However, adding anything _before_ the '<link>' tag fixes this behaviour, such as using 'asdf<link rel='stylesheet' href='...'>'.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Discovered a workaround to fix the loading behaviour."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Noted that adding something before the '<link>' tag fixes the behaviour."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Observed the usage of 'asdf<link rel='stylesheet' href='...'>'."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "The 'data-last' attribute of the '#note-text-area' element, containing the victim's saved note, can be exfiltrated using CSS attribute selectors.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Identified the 'data-last' attribute of the '#note-text-area' element."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Realized that the 'data-last' attribute contains the victim's saved note."
                    },
                    {
                        "SubstepNumber": 10.3,
                        "SubstepString": "Discovered that CSS attribute selectors can be used for exfiltration."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "The URL specified in the 'background' of the appropriate CSS rule is only fetched if the 'data-last' attribute starts with the correct string.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Identified the CSS rule with 'background' property."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Confirmed that the URL specified in the 'background' property is fetched conditionally."
                    },
                    {
                        "SubstepNumber": 11.3,
                        "SubstepString": "Realized that the 'data-last' attribute should start with the correct string for it to be fetched."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "This then allows the flag to be brute-forced by guessing all possible characters in each position of the flag, each character having a background URL corresponding to the guessed flag.",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Understood the process of flag brute-forcing."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Noted that each character of the flag has a background URL corresponding to it."
                    },
                    {
                        "SubstepNumber": 12.3,
                        "SubstepString": "Realized that all possible characters are guessed for each position of the flag."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "For the attack, a Python script is used to generate the corresponding CSS, and the result is saved in 'exploit.css'.",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Examined the Python script used for the attack."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Noted the usage of the Python script to generate CSS."
                    },
                    {
                        "SubstepNumber": 13.3,
                        "SubstepString": "Saved the generated CSS in 'exploit.css'."
                    }
                ]
            },
            {
                "StepNumber": 14,
                "StepString": "The exploit page loads the challenge page as an 'iframe', waits for the API to be loaded, and then sends a 'postMessage' linking the generated CSS to the target page. This is added to a GitHub repository together with the CSS and deployed to GitHub pages under a '.jsapi.tech' subdomain.",
                "Substeps": [
                    {
                        "SubstepNumber": 14.1,
                        "SubstepString": "Loaded the challenge page as an 'iframe' in the exploit page."
                    },
                    {
                        "SubstepNumber": 14.2,
                        "SubstepString": "Waited for the API to be loaded in the challenge page."
                    },
                    {
                        "SubstepNumber": 14.3,
                        "SubstepString": "Sent a 'postMessage' linking the generated CSS to the target page."
                    },
                    {
                        "SubstepNumber": 14.4,
                        "SubstepString": "Added the CSS and generated CSS to a GitHub repository."
                    },
                    {
                        "SubstepNumber": 14.5,
                        "SubstepString": "Deployed the GitHub repository to GitHub pages under a '.jsapi.tech' subdomain."
                    }
                ]
            },
            {
                "StepNumber": 15,
                "StepString": "Each character was exfiltrated by redeploying the exploit GitHub page with the updated CSS.",
                "Substeps": [
                    {
                        "SubstepNumber": 15.1,
                        "SubstepString": "Redeployed the exploit GitHub page."
                    },
                    {
                        "SubstepNumber": 15.2,
                        "SubstepString": "Updated the CSS in the redeployed page."
                    },
                    {
                        "SubstepNumber": 15.3,
                        "SubstepString": "Exfiltrated each character using the updated CSS."
                    }
                ]
            }
        ]
    }
}