{
    "Looping & Character Manipulation": [
        "If it is not, continue loop with next character"
    ],
    "Website Alerts & Messages": [
        "Receive an alert from the website."
    ],
    "GET Requests & Manipulation": [
        "Place a zero between the two GET requests."
    ],
    "Website Navigation": [
        "Navigate to the website"
    ],
    "String Manipulation": [
        "Combine all password parts into a single string"
    ],
    "Knowledge & Error Handling": [
        "Lacked the knowledge on how to trigger the aforementioned error."
    ],
    "Bypassing Restrictions": [
        "Successfully bypassed restrictions."
    ],
    "Server & Connection Handling": [
        "Use Apache httpd 2.4.49 to handle the connection."
    ],
    "Bypassing Access Denied Error": [
        "Manipulate the 'accessGranted' attribute to bypass Access Denied error."
    ],
    "Payload Decoding": [
        "Decoded the base64 encoded payload"
    ],
    "Cookie Manipulation": [
        "Assign the value 'true' to the cookie.",
        "Revisited the page with the newly acquired 'admin' cookie.",
        "Capture admin's cookie"
    ],
    "Image Analysis & Security Questions": [
        "Discover the security question answer from one of the images."
    ],
    "Token & Signature Analysis": [
        "Understand how the token is signed using 'store.key'."
    ],
    "Object Crafting & Parameter Manipulation": [
        "Planned to craft an object with desired parameters."
    ],
    "Private Key & Payload Manipulation": [
        "Force the debugging private key in the payload."
    ],
    "DOM Manipulation & File Loading": [
        "Polluted 'data' in '__proto__.data' to load the JavaScript file."
    ],
    "POST Request & File Access": [
        "Use a POST request to request 'file:///code/app.py'."
    ],
    "Window Control & Script Execution": [
        "Understand that 'window.name' can be controlled when a new window is opened.",
        "Identify that the <script>alert('pwned')</script> won't be executed."
    ],
    "Flag Discovery": [
        "Discover the flag.",
        "Confirm the successful exposure of the /etc/passwd file.",
        "Identify that the reason for the script not being executed is the DOMValidator.js script.",
        "Obtained the flag from 'private.php'."
    ],
    "File Hosting & Resource Insertion": [
        "Host the 'inner.html' file",
        "Observe that the fetched resources are inserted into the 'ajax-load' element."
    ],
    "JWT Token Usage": [
        "Passed the earlier jwt token as parameter"
    ],
    "HTML Element Location": [
        "Locate an image tag",
        "Find the code in 'view.php'."
    ],
    "Injection Techniques": [
        "Recognize that blind NoSQL injection is required."
    ],
    "Quiz & Flag Search": [
        "Search or browse through the quiz section to find the flag."
    ],
    "Server-Side Request Forgery (SSRF)": [
        "Performed an SSRF."
    ]
}