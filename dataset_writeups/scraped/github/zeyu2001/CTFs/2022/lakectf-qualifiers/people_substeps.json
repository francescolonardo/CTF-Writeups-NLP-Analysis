{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified the possibility of XSS in a user's profile.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identified the possibility of XSS in a user's profile."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Found potential injection points in the feature allowing us to edit our bio in Markdown.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Found potential injection points in the feature allowing us to edit our bio in Markdown."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Saw that the Markdown was parsed using 'marked' and 'DOMPurify'.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Saw that the Markdown was parsed using 'marked' and 'DOMPurify'."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Checked the version numbers of these libraries and searched for security vulnerabilities without any results.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Checked the version numbers of these libraries and searched for security vulnerabilities without any results."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Ruled out mutation XSS attacks on these libraries as 'marked' does not sanitize output HTML.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Ruled out mutation XSS attacks on these libraries as 'marked' does not sanitize output HTML."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Looked more into Jinja2 and found the 'safe' filter that renders unescaped HTML.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Looked more into Jinja2 and found the 'safe' filter that renders unescaped HTML."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Identified the HTML injection vector via 'profile.html' template.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Identified the HTML injection vector via 'profile.html' template."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Realized a '<script>' payload wouldn't work due to Content Security Policy blocking arbitrary scripts without a randomly-generated nonce.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Realized a '<script>' payload wouldn't work due to Content Security Policy blocking arbitrary scripts without a randomly-generated nonce."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Leveraged the '<base>' HTML tag to set the base URL for all relative URLs in the document, helping bypass the Content Security Policy.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Leveraged the '<base>' HTML tag to set the base URL for all relative URLs in the document, helping bypass the Content Security Policy."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Intended to load the '/static/js/marked.min.js' files from a different URL to exploit the script tags being part of the original template.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Intended to load the '/static/js/marked.min.js' files from a different URL to exploit the script tags being part of the original template."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Started a HTTP server, created the '/static/js' directory structure, and placed XSS payload in 'marked.min.js'.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Started a HTTP server, created the '/static/js' directory structure, and placed XSS payload in 'marked.min.js'."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Injected '<base href=\"http://HOST:PORT\">' into the profile via 'user['title']' or 'user['lab']'.",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Injected '<base href=\"http://HOST:PORT\">' into the profile via 'user['title']' or 'user['lab']'."
                    }
                ]
            }
        ]
    }
}