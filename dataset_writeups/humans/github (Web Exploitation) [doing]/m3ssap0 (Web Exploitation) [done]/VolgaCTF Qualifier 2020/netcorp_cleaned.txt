After doing some recon, you can discover that the application server is an old Apache Tomcat installation. In particular, trying to reach a URL will spawn an error containing the version: `Apache Tomcat/9.0.24`.

This version is affected of Ghostcat vulnerability (CVE-2020-1938)].

For this vulnerability, several public exploits exist. One of them is Ajp Shooter.

You can checkout and use it to read `web.xml` file.

At this point, you can discover that two servlets exist.

You can easily get both `.class` files using the exploit.

I wrote a Python script to recover the files, but the tool has a parameter to save read file.

Now files can be decompiled to analyze them.

The `ServeScreenshotServlet` contains a file upload functionality via HTTP POST request. The file is stored under `/uploads/` subdirectory with an hashed `fileName`.

You can use a pure Java backdoor.jsp file to execute commands on the remote host.

The name of the page will be the MD5 hash of the original name.

A listening server can be set up with `nc -lvkp 1337`.

The execution can be triggered with the exploit.

Launching the attack with into the backdoor file will give you the flag.