The website is a game where you have to click on the circle and don't click on the squares, both located on random positions each round. You have to click more than 20 times in 10 seconds.

[HTML code defining the structure and content of a web page, including links to external CSS and JavaScript files, and a canvas element.]

The [frontend source](main.js) is heavily obfuscated, but the challenge gives you the [backend source](index.js).

[Node.js server-side JavaScript code that creates an HTTP server using the Express.js library, which serves an HTML page containing a game. The game involves clicking on shapes that are randomly generated on the page, with the objective of earning a score greater than 20 within a 10-second time limit. If the player's score is high enough, the server will emit a message containing the flag.]

From this source code you can discover that positions are sent to the client into a JSON array and that the winning position is the first one sent.

Analyzing the HTTP traffic you can discover the format of each request/response packet and you can use this information to develop [your own client](solver-woooosh.py) able to win each round of the game.

[Python script that plays a game through a website's API. The game is identified by a URL stored in the "target_site" variable. The script communicates with the API through HTTP requests, sending and receiving data in JSON format. The script uses the "requests" library to send HTTP requests and the "time" and "math" libraries to generate timestamps and perform arithmetic operations, respectively.]

The flag is the following.