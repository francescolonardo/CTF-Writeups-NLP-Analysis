[
    "Tested rendering of the reflected input in the browser.",
    "Perform a bruteforce attack.",
    "Locate the style.css file within the website files",
    "Use an extractor tool.",
    "Find the endpoint '/dogooo/runcmd' enabling remote shell functionality.",
    "Use the manipulated cookies to gain access.",
    "Confirm that both files are sqlite3 databases.",
    "Attribute the challenges to the `basedir` restriction.",
    "The flag is `csictf{5h0uld_5tr1ng1fy_th3_p4r4ms}`",
    "Use backticks to confirm remote code execution (RCE).",
    "Data is POST-ed to the /api/filter endpoint",
    "Indicated the attack has worked.",
    "Found that an error was thrown.",
    "Recreate GZip archive",
    "Ran '/readflag' by passing it as an argument to the defined 'pwn' function.",
    "Spot an interesting behavior with 'RegExp.prototype.test()' used with regex containing the global flag.",
    "Read the challenge's description.",
    "Constructed a payload.",
    "Identify a meta tag with the name attribute 'redpwnctf2020' in the HTML source code.",
    "Noted that exception messages are displayed in alert pop-ups",
    "Enter an empty username and arbitrary password.",
    "Observe the response from the web application.",
    "Examine the registration fields",
    "Confirm presence of characters in the password.",
    "Visit the provided URL.",
    "Determine that the website is an online calculator",
    "Construct a parameter that meets the conditions and requests the flag file",
    "Code a web page that uses a Promise.",
    "Logged in with a random value.",
    "Accessed the meme generator web application.",
    "Identified a known vulnerability (CVE-2019-17221)",
    "Bruteforce the value of 'x' by submitting RCE payload with different 'x' values until a shell is received.",
    "Open the source.zip file.",
    "Combine the hashed string with the text 'SharifCTF{' and '}' to form the flag.",
    "Realize that the filtering of sha512.js will cause the DOMValidator.js to crash."
]