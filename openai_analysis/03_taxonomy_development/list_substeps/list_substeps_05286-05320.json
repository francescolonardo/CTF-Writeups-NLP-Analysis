[
    "Retrieve the flag using the customized request.",
    "Observe a page that accepts another URL and submits it.",
    "Noticed that user cookie is double base64 encoded",
    "Looked into database.py.",
    "Constructed a base to perform SQL injection.",
    "Received 404 Not Found error upon a failed enumeration.",
    "Constructed a JavaScript payload to be run on the victim's browser.",
    "Conduct an investigation.",
    "Investigate changes made in the 'Fix auth!!!' commit",
    "Identified an Insecure Direct Object Reference (IDOR) vulnerability due to the absence of ownership verification during file requests.",
    "Received a response for the second consequent request.",
    "Allowed access to the `/flag` endpoint.",
    "Deployed the GitHub repository to GitHub pages under a '.jsapi.tech' subdomain.",
    "Open the website in a web browser",
    "Confirm vulnerability using the uploaded LaTeX document",
    "Observed the attack working even with Chrome's cache partitioning policy.",
    "Notice the usage of a vulnerable version of the Python Pillow library.",
    "Work on bypassing '{{' by using an if-else statement.",
    "Understood that the variable part contained the previous char of the flag.",
    "Analyze the HTML source of the page.",
    "Download the .DS_Store file.",
    "Entered ?source=1 as an HTTP parameter.",
    "Understand Wildcard Injection.",
    "Identify the received flag as a cookie in the HTTP GET request",
    "Leverage dual hexing technique to transform the flag.",
    "Understand that the goal is to exfiltrate the session cookies",
    "Retrieved the text content.",
    "Locate the login function in the web application.",
    "Notice the requests being made to the API endpoint.",
    "Notice that the application is a 'screenshotter' service.",
    "Explore the create post button.",
    "Access 'globals' objects using the format string.",
    "Estimated the SQL query structure in the website's backend, taking into consideration the potential manipulation of the 'moneys=' parameter.",
    "Exploit LFI vulnerability to execute the PHP command",
    "Leak source code."
]