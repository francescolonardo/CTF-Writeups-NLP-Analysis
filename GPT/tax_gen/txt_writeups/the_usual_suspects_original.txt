The Usual Suspects
Author: SrishtiGohain
Description
This is a simple Server Side Template Injection challenge.
Requirements

Python
tornado

Sources

You may think I walk with no 'name' because it can be changed whenever I want. I am a 'person' whose 'secret' can never be found. Can you find this 'person's 'secret'?
(I love you 8000.)

Exploit
```python
SOURCE CODE: server.py
import tornado.template
import tornado.ioloop
import tornado.web
import os, pwd, grp
def dropprivileges(uidname='ctf', gidname='ctf'):
    runninguid = pwd.getpwnam(uidname).pwuid
    runninggid = grp.getgrnam(gidname).gr_gid
os.setgroups([])

os.setgid(running_gid)
os.setuid(running_uid)

old_umask = os.umask(0o077)

flag = open('rf.txt').read()
secret = open('cs.txt').read()
TEMPLATE = '''

 üê±‚Äçüë§Hello Hacker

 üê±‚Äçüë§ The Usual Suspects üê±‚Äçüë§ 

 You Have Arrived! 


Hey, wanna know how I rate some ice-cream flavours?


chocolate
vanilla
butterscotch



FOO

 

 Oh I heard you're looking for my secret. 
{{secret}}



'''
class MainHandler(tornado.web.RequestHandler):
def get(self):

    chocolate = "My fav!! 10/10, would eat again"
    vanilla = 'Vanilla is good too, but could be better, i give it a 7/10'
    butterscotch = 'Yuck, who even likes that. 1/10'

    template_data = TEMPLATE.replace("FOO",self.get_argument('icecream',''))
    t = tornado.template.Template(template_data)
    secret = "Unfortunately, you aren't worthy"
    if self.get_secure_cookie("admin")==b"true":
        secret = flag
    else:
        self.set_secure_cookie("admin", "false")
    self.write(t.generate(chocolate=chocolate,vanilla=vanilla, butterscotch=butterscotch, application=application, secret=secret))

application = tornado.web.Application([
    (r"/", MainHandler)
], debug=True, staticpath=None, templatepath=None, cookie_secret=secret)
if name == 'main':
    drop_privileges()
    application.listen(9999)
    print("Listening :)")
    tornado.ioloop.IOLoop.instance().start()
```


The server script runs on http://chall.csivit.com:30279/. Input is taken as the "icecream" value. 
A secure cookie is being set and compared to print a flag value. In tornado, signed cookies contain the encoded value of the cookie
alongwith a timestamp and an HMAC signature. Such cookies are supported by the setsecurecookie and getsecurecookie methods which require a specific secret key: cookie_secret.
Upon visiting http://chall.csivit.com:30279/?icecream={{globals()}}, you see something useful:


'application': <tornado.web.Application object at 0x7f2976579750>,


You now know that the name of the variable tornado.web.Application(...) is application.
Run the server script with the exploit payload http://chall.csivit.com:30279/?icecream={{application.settings["cookie_secret"]}} to get the cookie_secret value MangoDB displayed on the website.
Replace the value of the secure cookie admin to the required comparison value true to obtain a signed cookie on the browser. Now, replace the signed cookie generated upon running the server script with the one obtained after the secure cookie value was set to true. This results in a cookie which looks like the following. Note dHJ1ZQ== is base64 for true.


"2|1:0|10:1594808471|5:admin|8:dHJ1ZQ==|5da7d1e446451e825e42001e7f07360e2e2e77c9c68b14fca1a517259712cdac"


Upon reloading the server script, the text on the website would change from Unfortunately, you aren't worthy to the flag value:


csictf{h3r3_i_4m}

The flag is:

csictf{h3r3_i_4m}

