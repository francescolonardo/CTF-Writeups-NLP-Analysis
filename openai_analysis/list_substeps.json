[
    "Visit the target website.",
    "Observe the presence of a redirection URL: /?file=wc.php.",
    "Recognize that the redirection suggests a potential file inclusion vulnerability.",
    "Access the URL ?file=/etc/passwd.",
    "Identify the presence of the 'ctf' user in the /etc/passwd file.",
    "Access the URL ?file=robots.txt.",
    "Discover that /?file=checkpass.php is disallowed in robots.txt.",
    "Utilize the 'php://filter' wrapper to access the source code of checkpass.php.",
    "Locate the hardcoded password within the source code.",
    "Inspect the source code of wc.php.",
    "Set a cookie containing the discovered password.",
    "Observe evidence of remote code execution.",
    "Craft and deploy a reverse shell payload.",
    "Establish a connection to the target server using the reverse shell.",
    "Explore the file system to locate the 'flag.txt' file.",
    "Search for the 'ctf' user's password hash within the README file.",
    "Attempt to crack the password hash.",
    "Execute the 'su' command with the cracked password to switch to the 'ctf' user.",
    "Retrieve the contents of the 'flag.txt' file using the 'cat' command.",
    "Inspect the HTML source code of the website.",
    "Identify the /login and /adminNames routes within the source code.",
    "Access the /login route of the website.",
    "Complete the login form with appropriate credentials.",
    "Open the Network Tab in your browser's developer tools.",
    "Locate and examine the HTTP request made to the server.",
    "Find and extract the token header containing a JWT.",
    "Use a JWT decoding tool to decode the JWT.",
    "Retrieve the payload from the decoded JWT.",
    "Apply the rot13 cipher to the admin value in the payload.",
    "Access the /adminNames route of the website.",
    "Download the file from the /adminNames route.",
    "Extract the GitHub URL from the downloaded file.",
    "Access the GitHub repository using the extracted URL.",
    "Identify and retrieve the list of admin usernames from the repository.",
    "Update the JWT payload with the rot13 encrypted admin username.",
    "Change the admin value in the payload to the rot13 encrypted string for 'true'.",
    "Access the /getFile?file=../.env route of the website.",
    "Attempt to download the .env file from the specified route.",
    "Craft a GET request targeting the /admin route.",
    "Include the JWT in the Authorization header of the request.",
    "Apply the rot13 decryption algorithm to the received flag.",
    "Retrieve the real flag from the decrypted text.",
    "Examine the JavaScript code of the Express app.",
    "Identify the restrictions placed on the `file` parameter.",
    "Open and review the contents of the `a.cpp` file.",
    "Observe the presence of the `system(\"cat flag.txt\")` command in the code.",
    "Infer the existence of the `flag.txt` file in the same directory.",
    "Create a payload to circumvent the `file` parameter restrictions.",
    "Incorporate the use of `path.resolve()` in the payload.",
    "Specify the crafted payload: `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js`",
    "Transmit the crafted payload to the target application.",
    "Execute the payload to fetch the contents of `flag.txt`.",
    "Navigate to the website’s URL.",
    "Create a new account by filling out the required information.",
    "Log in using the newly created account credentials.",
    "Navigate to the profile editing section.",
    "Read and interpret the displayed message about requiring admin approval.",
    "Open browser’s developer tools to inspect the HTML of the webpage.",
    "Scan the HTML elements and locate the hidden JavaScript code snippet.",
    "Retrieve the 'PHPSESSID' cookie from the browser’s cookie storage.",
    "Decode the cookie to inspect its contents.",
    "Identify the 'approved' field within the decoded cookie.",
    "Modify the 'approved' field’s value to 'true'.",
    "Re-encode the modified cookie.",
    "Replace the existing 'PHPSESSID' cookie with the modified one in the browser’s cookie storage.",
    "Navigate to the profile picture upload section.",
    "Choose a PNG file and attempt to upload it as a profile picture.",
    "Observe the filename control mechanisms and any validation messages received during the upload attempt.",
    "Prepare various files with different formats and extensions.",
    "Attempt to upload each prepared file.",
    "Analyze responses to deduce the method used for file type checking.",
    "Construct a file containing PNG magic bytes to mimic a PNG file format.",
    "Embed a 'phpInfo' call within the constructed file to create a combined image/PHP exploit.",
    "Modify the previously created exploit file.",
    "Replace the 'phpInfo' call with a payload for shell command execution.",
    "Use the modified exploit to run commands through the 'cmd' parameter.",
    "Search the system directories to locate the flag file.",
    "Execute a print command to reveal the contents of the flag file.",
    "Review the website's source code.",
    "Identify the algorithms allowed for decryption, specifically 'RS256' and 'HS256'.",
    "Study the HS256 algorithm, focusing on its mechanics and vulnerabilities.",
    "Study the RS256 algorithm, focusing on its mechanics and vulnerabilities.",
    "Compare the identified characteristics of the HS256 and RS256 algorithms.",
    "Register a new account on the website.",
    "Log into the newly created account.",
    "Capture the JWT token assigned to the account.",
    "Retrieve the public key associated with the account.",
    "Decode the JWT token to expose its payload.",
    "Modify the 'username' field in the token's payload to 'admin'.",
    "Re-encode the modified payload using the RS256-to-HS256 exploit.",
    "Open the browser's developer tools and locate the stored JWT token.",
    "Replace the stored JWT token with the tampered token.",
    "Navigate to the admin dashboard using the altered token to gain unauthorized access.",
    "Review the website’s source code a second time.",
    "Search for instances of 'nunjucks' usage in the code.",
    "Assess the identified 'nunjucks' usage for potential SSTI vulnerabilities.",
    "Craft a payload capable of breaking out of the 'nunjucks' templating engine.",
    "Inject the crafted payload to attempt to read the flag file.",
    "Navigate to the admin dashboard.",
    "Locate an elf's name field.",
    "Insert the crafted payload into the located name field.",
    "Navigate to the homepage to execute the payload and reveal the flag."
]