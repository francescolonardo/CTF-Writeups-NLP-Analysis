<h1>Hack into Skynet</h1>

<p>Category: Web</p>

<p>Solves: 81</p>

<p>Points: 73</p>

<p>Main solvers: myrdyr, ammaraskar, sampriti, L3o</p>

<hr />

<h2>Challenge Description</h2>

<blockquote>
  <p>Hack into skynet to save the world, which way do you prefer?</p>
  
  <p>Note: Skynet is a blackbox detection engine which is not provided. But you don't have to guess.</p>
  
  <p>Note2: Scanner or sqlmap NOT REQUIRED to solve this challenge, please do not use scanners.</p>
</blockquote>

<h2>Write-up</h2>

<p>We are given <code>server.py</code>, which is running a Flask web server.</p>

<p>There is a potential vulnerable service in <code>query_kill_time</code>, but we have to login first.</p>

<p>```python
def query<em>login</em>attempt():
    username = flask.request.form.get('username', '')
    password = flask.request.form.get('password', '')
    if not username and not password:
        return False</p>

<pre><code>sql = ("SELECT id, account"
       "  FROM target_credentials"
       "  WHERE password = '{}'").format(hashlib.md5(password.encode()).hexdigest())
user = sql_exec(sql)
name = user[0][1] if user and user[0] and user[0][1] else ''
return name == username
</code></pre>

<p>```</p>

<p>When we provide an empty string as username with arbitrary password, we can make <code>name == username</code> to true, and login successfully.</p>

<p>The second part is SQL Injection. However, there is a WAF <code>Skynet</code> filtering our requests.</p>

<p>```python
def query<em>kill</em>time():
    name = flask.request.form.get('name', '')
    if not name:
        return None</p>

<pre><code>sql = ("SELECT name, born"
       "  FROM target"
       "  WHERE age &gt; 0"
       "    AND name = '{}'").format(name)
nb = sql_exec(sql)
if not nb:
    return None
return '{}: {}'.format(*nb[0])
</code></pre>

<p>```</p>

<p>We encode our payload into <code>multipart/form-data</code>, and get SQLi executed.</p>

<p>We can simply use <code>union</code> to fetch data.</p>

<p>The rest is to find the flag in database <code>target_credentials</code> column <code>secret_key</code>, which is <code>rwctf{t0-h4ck-$kynet-0r-f1ask_that-Is-th3-questi0n}</code>.</p>
