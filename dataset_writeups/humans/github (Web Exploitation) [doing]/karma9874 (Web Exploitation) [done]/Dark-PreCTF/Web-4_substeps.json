{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Log in with junk value",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Enter junk value to log in."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Check cookies",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Inspect browser cookies."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Use jwt.io on token value",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Open jwt.io website."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Enter token value."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Check token with jwt.io, discover it's using HS256 algorithm",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Verify token using jwt.io."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Identify the algorithm used as HS256."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Because of the weak encryption, infer that it should be related to brute-forcing for secret_key",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Analyze the weak encryption."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Deduce the need for brute-forcing the secret key."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Use jwt_tool with 'rockyou.txt' to brute force the token",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Open jwt_tool."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Specify 'rockyou.txt' as the dictionary file."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Initiate brute force attack on the token."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Find the secret_key 'redraider'",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Retrieve the found secret_key 'redraider'."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Build a token of HS256 with secret_key 'redraider' and value of user as admin",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Create a new token using HS256 algorithm."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Set secret_key as 'redraider'."
                    },
                    {
                        "SubstepNumber": 8.3,
                        "SubstepString": "Assign user value as 'admin'."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Access the /flag using the token as a cookie to get the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Navigate to the /flag URL."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Set the token as a cookie."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Retrieve the flag."
                    }
                ]
            }
        ]
    }
}