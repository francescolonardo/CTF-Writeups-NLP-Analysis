[
    "Specify 'changelog.js' script in the path of the JSON payload.",
    "Post each successful guess to the exploit server.",
    "Use the URL 'http://35.207.189.79/api/login'",
    "Using the constructed base, tried to enumerate DB tables.",
    "Prepared an XML payload.",
    "Retrieve the cookie_secret value 'MangoDB'.",
    "Committed the change to the repository.",
    "Identify the first function that sets specific server response headers if the request is 127.0.0.1.",
    "Identified the challenge as an XPATH injection challenge.",
    "Accessed files such as '.git/HEAD'",
    "Reveal the structure of the site",
    "Connect to source code link",
    "Suspect possible SQL Injection.",
    "Refer to the PHP manual to obtain the bcrypt hash and identify the password as 'rasmuslerdorf'.",
    "Use Burp Suite.",
    "Confirmed server-side file inclusion.",
    "Discover a 'primary' segment in Angular.",
    "Follow the redirection.",
    "Realized a '<script>' payload wouldn't work due to Content Security Policy blocking arbitrary scripts without a randomly-generated nonce.",
    "Recognize correct rearrangement as 'sRPd45w_0'.",
    "Acquired the file from the provided link",
    "Access the target website.",
    "Fetch the flag using 'innerHTML'.",
    "Included the final payload as part of form data.",
    "Include 'Transfer-Encoding: chunked' header in the request.",
    "Find the `login` cookie with base64 content",
    "Used the 'view XML' tab on the web interface.",
    "Change the base URI of the page.",
    "Realized that the setting name is user-controlled",
    "Find the feedback form on the website.",
    "The absence of 'nc' and any exfiltration method restricts the options",
    "Finally, found the flag 'ACSC{it_is_hard_to_name_a_flag...isn't_it?}'.",
    "Modified the requests after reaching the backend server.",
    "Duplicate the server environment.",
    "Start the Flask python server with 'python xss-cookie-stealer.py' and then run '/ngrok http 16361'."
]