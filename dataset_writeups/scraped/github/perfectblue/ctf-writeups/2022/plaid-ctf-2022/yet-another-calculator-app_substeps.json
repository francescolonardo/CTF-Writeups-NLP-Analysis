{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Recognize the calculator app filters out potential XSS attacks",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Recognize the calculator app filters out potential XSS attacks"
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Analyze 'calc.js' and identify controllable variables",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Analyze 'calc.js'"
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identify controllable variables in 'calc.js'"
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identify ability to control 'astProgram.type' variable which sets the type attribute for the script element",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identify ability to control 'astProgram.type' variable"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Understand the variable sets the type attribute for the script element"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Decide to provide code JSON, which 'JSON.parse()' will then parse",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Decide to provide code in the form of JSON object"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Realize 'JSON.parse()' will parse the provided code JSON"
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Switch 'astToJs' to 'evalCode' in order to execute custom code within the app",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Decide to switch 'astToJs' to 'evalCode'"
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Understand this switch allows the execution of custom code within the app"
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Decide to use Import Maps to switch 'astToJs' to 'evalCode'",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Decide to use Import Maps"
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Understand using Import Maps will help in switching 'astToJs' to 'evalCode'"
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Create a new HTML script element with id 'program', language 'json', and type 'importmap'",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Decide to create a new HTML script element"
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Set 'program' as the id for the new HTML script element"
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Set 'json' as the language attribute for the new HTML script element"
                    },
                    {
                        "SubstepNumber": 7.4,
                        "SubstepString": "Set 'importmap' as the type attribute for the new HTML script element"
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Inside the new HTML script element, add an 'imports' key to map '/js/ast-to-js.mjs' to '/js/eval-code.mjs'",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Inside the new HTML script element, decide to add an 'imports' key"
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Set the 'imports' key to map '/js/ast-to-js.mjs' to '/js/eval-code.mjs'"
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Add custom JavaScript code to the 'code' key in order to leak the cookie, and provide an empty array for 'variables'",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Decide to add custom JavaScript code to the 'code' key"
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Understand this custom JavaScript code will leak the cookie"
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Provide an empty array for 'variables'"
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Execute a Python script (solve.py), eventually obtaining the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Decide to execute a Python script (solve.py)"
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Obtain the flag through the execution of solve.py"
                    }
                ]
            }
        ]
    }
}