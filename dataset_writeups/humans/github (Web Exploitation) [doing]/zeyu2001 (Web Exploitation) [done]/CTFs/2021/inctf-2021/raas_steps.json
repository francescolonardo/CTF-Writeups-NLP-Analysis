{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified a URL for the server to request, leveraging a Local File Inclusion (LFI) vulnerability for Server Side Request Forgery (SSRF) and viewing files using the 'file://' protocol"
            },
            {
                "StepNumber": 2,
                "StepString": "Verified the server code location from the provided Dockerfile as '/code/app.py'"
            },
            {
                "StepNumber": 3,
                "StepString": "Used a POST request to request 'file:///code/app.py' and review the server code"
            },
            {
                "StepNumber": 4,
                "StepString": "Recognized that a Redis database was being utilized with the hostname as 'redis' and port 6379"
            },
            {
                "StepNumber": 5,
                "StepString": "Understood that for a POST request, a 'Requests_On_Steroids' function is used to fetch the URL and if the value of <userID>_isAdmin key in Redis database is 'yes', the flag was shown in the response"
            },
            {
                "StepNumber": 6,
                "StepString": "Identified the need to overwrite the <userID>_isAdmin value and the possibility to leverage the SSRF vulnerability to communicate with the Redis instance"
            },
            {
                "StepNumber": 7,
                "StepString": "Observed that 'Requests_On_Steroids' function in 'main.py' supported Gopher protocol to communicate with any TCP server"
            },
            {
                "StepNumber": 8,
                "StepString": "Discovered that instead of 'gopher://' protocol, 'inctf://' had to be used"
            },
            {
                "StepNumber": 9,
                "StepString": "Identified the 'GopherAdapter' code in 'modules/Gophers.py'"
            },
            {
                "StepNumber": 10,
                "StepString": "Found that the Gopher adapter used was modified from a GitHub gist to remove '/_' in the URL's path"
            },
            {
                "StepNumber": 11,
                "StepString": "Realized the inability to send multi-line input using RESP protocol as 'urllib.parse' was updated to strip newline characters"
            },
            {
                "StepNumber": 12,
                "StepString": "Used inline commands of Redis to send commands directly with the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'"
            },
            {
                "StepNumber": 13,
                "StepString": "Sent the command 'SET <userID>_isAdmin \"yes\"' to set the <userID>_isAdmin value to 'yes'"
            },
            {
                "StepNumber": 14,
                "StepString": "Received the flag 'inctfi{IDK_WHY_I_EVEN_USED_REDIS_HERE!!!}'"
            }
        ]
    }
}