{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified the problem requires generating two PDFs with the same MD5 hash, but different content."
            },
            {
                "StepNumber": 2,
                "StepString": "Chose two small-sized PDFs due to size restrictions."
            },
            {
                "StepNumber": 3,
                "StepString": "Used Python scripting and the 'mutool' command to manipulate the PDF files."
            },
            {
                "StepNumber": 4,
                "StepString": "Created 'first.pdf' and 'second.pdf' using the chosen input PDFs."
            },
            {
                "StepNumber": 5,
                "StepString": "Created 'merged.pdf' containing a dummy PDF and the chosen input PDFs."
            },
            {
                "StepNumber": 6,
                "StepString": "Read and stored the content of the merged and initial PDF files in separate variables."
            },
            {
                "StepNumber": 7,
                "StepString": "Extracted the count of PDF pages from each PDF file."
            },
            {
                "StepNumber": 8,
                "StepString": "Identified the list of references to the PDF pages in the merged PDF file."
            },
            {
                "StepNumber": 9,
                "StepString": "Excluded the reference to the dummy page and created separate PDF page lists for both input PDFs."
            },
            {
                "StepNumber": 10,
                "StepString": "Defined a template for the final PDF files which will hold identical initial content and MD5 hashes, but will diverge at a certain point to become two different PDFs."
            },
            {
                "StepNumber": 11,
                "StepString": "Used the page count and PDFs list to write a manipulated 'hacked.pdf' file."
            },
            {
                "StepNumber": 12,
                "StepString": "Adjusted the offsets in the PDF with the 'mutool clean' command to correct any discrepancies."
            },
            {
                "StepNumber": 13,
                "StepString": "Replaced a specific string in the cleaned PDF data to ensure compatibility with different versions of 'mutool'."
            },
            {
                "StepNumber": 14,
                "StepString": "Read the 'pdf1.bin' and 'pdf2.bin' files which contain the prefix of the PDF content, which will be the same for both PDFs to ensure the same MD5 hash."
            },
            {
                "StepNumber": 15,
                "StepString": "Created the new PDF files 'collision1.pdf' and 'collision2.pdf' with the predetermined prefix and the cleaned, manipulated PDF data."
            },
            {
                "StepNumber": 16,
                "StepString": "Checked the MD5 hashes of both the PDFs using the hashlib library to confirm they are the same."
            },
            {
                "StepNumber": 17,
                "StepString": "Removed intermediate files created during the process."
            },
            {
                "StepNumber": 18,
                "StepString": "Verified the final PDFs using the 'mutool info -X' command."
            },
            {
                "StepNumber": 19,
                "StepString": "Uploaded the two colliding PDFs to the challenge page to unlock the flag and source code."
            }
        ]
    }
}