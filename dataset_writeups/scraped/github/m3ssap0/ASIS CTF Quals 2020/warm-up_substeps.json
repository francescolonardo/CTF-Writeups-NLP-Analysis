{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Connect to the given URL to view the source code.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Connect to the given URL."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "View the source code."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Examine the source code to find an 'eval' syntax used on 'warmup' GET parameter, which is strictly checked for.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Examine the source code."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Search for 'eval' syntax."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Identify 'eval' syntax on 'warmup' GET parameter."
                    },
                    {
                        "SubstepNumber": 2.4,
                        "SubstepString": "Note that 'warmup' GET parameter is strictly checked for."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Research methods of bypassing this kind of checks due to restrictive checks.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Research methods of bypassing strict checks."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Focus on bypassing checks applied to 'warmup' GET parameter."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Strategy to attack endpoint determined: read another HTTP GET parameter (non-alphanumeric).",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Determine attacking strategy."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Choose reading another HTTP GET parameter."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Ensure the chosen parameter is non-alphanumeric."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Implement knowledge from research to craft a payload that will bypass the checks using bitwise XOR operation in PHP.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Implement research knowledge."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Craft a payload."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Implement bitwise XOR operation in PHP to bypass checks."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Construct payload so that it will command execution of the content of another GET parameter.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Construct a payload."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Ensure the payload commands execution of another GET parameter."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Test if the payload using 'phpinfo' page is operational.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Test the payload."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Use 'phpinfo' page to check if the payload is operational."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Complete the payload to visualize and read contents of 'flag.php'.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Complete the payload."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Ensure the payload visualizes and reads contents of 'flag.php'."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Break down the payload: First part constructs a string representation; second part is used to perform 'file_get_contents('flag.php'); final part is used to perform variable dump (var_dump($_0)).",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Break down the payload."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "First part constructs a string representation."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Second part performs 'file_get_contents('flag.php')."
                    },
                    {
                        "SubstepNumber": 9.4,
                        "SubstepString": "Final part performs variable dump (var_dump($_0))."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "The flag was output as a result of executing the attack.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Flag is output after successful execution of the attack."
                    }
                ]
            }
        ]
    }
}