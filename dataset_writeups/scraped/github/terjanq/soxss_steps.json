{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the challenge which includes a text input for HTML notes and a rendered HTML page from textarea inside an iframe"
            },
            {
                "StepNumber": 2,
                "StepString": "Take note of the embedded iframe within the same origin where the data is sanitized by DOMPurify"
            },
            {
                "StepNumber": 3,
                "StepString": "Understand that the challenge is to bypass the script inside the iframe which validates the origin and ID of the message before rendering the body content"
            },
            {
                "StepNumber": 4,
                "StepString": "Identify the need to steal the identifier and the saved note from the main page using a valid identifier"
            },
            {
                "StepNumber": 5,
                "StepString": "Understand that the challenge is referring to Same-Origin XSS attack"
            },
            {
                "StepNumber": 6,
                "StepString": "Observe from user session that the identifier is stored and the session cookie was set to Lax"
            },
            {
                "StepNumber": 7,
                "StepString": "Acknowledge that the challenge is to bypass origin check by embedding the iframe and forcing a 'null' origin"
            },
            {
                "StepNumber": 8,
                "StepString": "Recognize that pop-ups from a sandboxed page inherit sandbox attributes, unless 'allow-popups-to-escape-sandbox' is set"
            },
            {
                "StepNumber": 9,
                "StepString": "Open a pop-up to the target URL from a sandboxed page, thus causing the pop-up to inherit the sandboxed attributes"
            },
            {
                "StepNumber": 10,
                "StepString": "From another 'null' origin, send an XSS to the pop-up and steal the identifier"
            },
            {
                "StepNumber": 11,
                "StepString": "Open the target URL and send an XSS with the stolen identifier so that the origin is the target URL"
            },
            {
                "StepNumber": 12,
                "StepString": "Implement the series of steps in a Proof of Concept script"
            }
        ]
    }
}