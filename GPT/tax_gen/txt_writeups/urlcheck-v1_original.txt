Urlcheck v1 (98 points, 160 solves)
The goal was to bypass WAF protection to access local resources.
```py
app.re_ip = re.compile('\A(\d+).(\d+).(\d+).(\d+)\Z')
def validip(ip):
    matches = app.reip.match(ip)
    if matches == None:
        return False
ip = list(map(int, matches.groups()))
if any(i > 255 for i in ip) == True:
    return False
# Stay out of my private!
if ip[0] in [0, 10, 127] \
    or (ip[0] == 172 and (ip[1] > 15 or ip[1] < 32)) \
    or (ip[0] == 169 and ip[1] == 254) \
    or (ip[0] == 192 and ip[1] == 168):
    return False
return True

... 
@app.route('/admin-status')
def adminstatus():
    if flask.request.remoteaddr != '127.0.0.1':
        return 'ðŸ¥º'
    return app.flag
```
It can be done with octal IP notation http://0177.0.0.1/admin-status, which yields 
TWCTF{4r3y0ur34dy?n3x75746315r34l55rf!}
