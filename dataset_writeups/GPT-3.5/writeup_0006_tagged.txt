Title: Insecure Direct Object Reference (IDOR) Attack to Access Sensitive Data
Primary topic: Web Exploitation
Secondary topic: Insecure Direct Object Reference (IDOR)
Tools used: None
Keywords: access control, object references, input validation, sanitization

#context
During a CTF competition, I encountered a web application that displayed sensitive data without proper access control, making it vulnerable to Insecure Direct Object Reference (IDOR), a type of vulnerability that allows attackers to manipulate object references to access unauthorized data.

#discovery
To test for IDOR, I browsed the application's pages and observed the data displayed for each user. Upon noticing a pattern in the data's structure and IDs, I crafted a URL containing the ID of another user, such as http://example.com/user?id=2, and submitted it to the application. If the application displayed the sensitive data of the target user, it would confirm the presence of an IDOR vulnerability.

#exploitation
Upon submitting the crafted URL to the application, it indeed displayed the sensitive data of the target user, confirming the vulnerability. To obtain the flag for the Web Exploitation challenge, I needed to use the IDOR vulnerability to access the sensitive data of a privileged user. After browsing the application and identifying a privileged user, I crafted a suitable URL containing their ID and submitted it to the application, which displayed their sensitive data, including the flag for the Web Exploitation challenge.

#countermeasures
This CTF writeup highlights the importance of properly securing web applications against IDOR vulnerabilities by enforcing proper access control, using randomized and unpredictable object references, and performing input validation and sanitization. By exploiting the IDOR vulnerability, I was able to manipulate object references, access unauthorized data, and obtain the flag needed to complete the challenge.
