{
    "Command Execution and Remote Shell": [
        "Successfully obtain a reverse shell."
    ],
    "Web Application Vulnerabilities": [
        "Bypass double URL decoding by server.",
        "Identified possibility to use 'Parameter Pollution' by having two 'amount' arguments.",
        "Added a special character (') to the end of the username.",
        "Appended a payload to the back of the signup date.",
        "Ran SQLMap with the script.",
        "Experimented with `1' ORDER BY` commands.",
        "Determined that SELECT and UNION keywords were being filtered by regex.",
        "Recognized the need to manipulate the PATH variable to execute arbitrary code when 'id' is called",
        "Understood the goal to read the 'flag.txt' file that requires root access",
        "Created an 'id' file with the malicious payload",
        "Identify '/cmd.php' endpoint.",
        "Observe the existence of a blacklist filter.",
        "Identify the use of base64-encoded payloads.",
        "Include the base64-encoded payload in the command.",
        "Identify a web application vulnerability, specifically XS Leaks.",
        "Objective is to dump the database and retrieve the flag",
        "User's cookies are sent along with the POST request",
        "Payload catches and sends the response, containing the admin's hash, to an exploit server",
        "When the admin's hash is used, the /api/create handler does not sanitize data",
        "Inject a Set-Cookie header to set the admin's ID cookie to your own session.",
        "Ensure the XSS payload fits within the 75 character limit.",
        "Use JavaScript code using `document.cookie` to control variables in the payload.",
        "Set malicious cookies.",
        "The malicious JavaScript code is executed on the client's side.",
        "Identify the need to overwrite the <userID>_isAdmin value.",
        "Recognize the presence of a Local File Inclusion vulnerability on '/post.php'.",
        "Identify the capability of setting the 'theme' value in the session using the 'theme' GET query parameter.",
        "Identified a line of code where user input is passed unfiltered.",
        "Injected a UNION query.",
        "Extracted the flag from the identified table.",
        "Inserted a series of directory traversal characters (/%2e%2e/%2e%2e) in the request to access server root directories",
        "Recognized vulnerability as a request smuggling vulnerability.",
        "Identified the usage of 'Content-Length' header with 'Transfer-Encoding' header as a request smuggling vulnerability.",
        "Included the 'Content-Length' header in the payload.",
        "Included the 'Transfer-Encoding' header in the payload.",
        "Assume that the input fields are not properly sanitizing special characters.",
        "Bypass the login function successfully due to successful SQL injection.",
        "Name the cookie 'authenticated-user'.",
        "Assign the value 'true' to the cookie.",
        "Choose to make an internal request.",
        "Include the '/gallery?galleryUrl=' query parameter.",
        "Specify 'http://localhost:20011/admin' as the value for the 'galleryUrl' parameter.",
        "Discover that the app uses curl for certain inputs.",
        "Spaces aren't allowed.",
        "' AND password=' is treated as a string and hence, ignored",
        "Executed SQL statement: SELECT username, password FROM users WHERE username='adm' || trim('in',' AND password=') || ''",
        "The XML part substitutes an entity 'myExternalEntity' with '/etc/passwd', hinting at XXE exploitation.",
        "Received a list of users as a response.",
        "Confirmed the XXE vulnerability."
    ]
}