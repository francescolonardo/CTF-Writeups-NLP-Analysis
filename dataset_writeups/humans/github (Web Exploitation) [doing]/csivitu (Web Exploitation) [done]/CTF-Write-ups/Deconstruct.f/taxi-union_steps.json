{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Step 1: The author identifies it as a SQL Injection challenge and sets up the environment to exploit it."
            },
            {
                "StepNumber": 2,
                "StepString": "Step 2: Para meters and values such as 'domain', 'check', 'key', and 'column' are initialized to be manipulated later."
            },
            {
                "StepNumber": 3,
                "StepString": "Step 3: The author sets a condition to set these parameters based on the specific challenge, as this solution also works for the 'Gate Keeper' challenge."
            },
            {
                "StepNumber": 4,
                "StepString": "Step 4: While the condition to receive the CTF password (flag) not met, the script will continue iterating."
            },
            {
                "StepNumber": 5,
                "StepString": "Step 5: In each iteration, the author forms SQL Injection payload with progressively appended characters from the 'domain'."
            },
            {
                "StepNumber": 6,
                "StepString": "Step 6: The payload is sent to the target URL via POST request. The data content for the request is constructed dynamically with the key-value pair where the key is retrieved from the 'key' variable and the value is the payload."
            },
            {
                "StepNumber": 7,
                "StepString": "Step 7: A check is performed to see if the response text contains 'check', a predefined string that is expected in the response of the successful login."
            },
            {
                "StepNumber": 8,
                "StepString": "Step 8: If the check is successful, it indicates that the payload was able to pass through SQL Injection leading to valid login and the iterated character is added to 'flag'."
            },
            {
                "StepNumber": 9,
                "StepString": "Step 9: The 'flag' value updates with the successful character, and it repeats the process until the end of the flag is found."
            }
        ]
    }
}