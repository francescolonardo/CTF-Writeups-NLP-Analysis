[
    "Inspect the source code and discover that all other endpoints are protected by authenticationMiddleware",
    "Understand that the mysqljs/mysql package is used without the option stringifyObjects: true",
    "Recognize that the express.json() allows Object and Array types to be given as req.body.email and req.body.password",
    "Use this behaviour when constructing SQL queries to bypass the login",
    "Authenticate successfully and gain access to the application",
    "Discover that the Express application is put behind a reverse proxy (Apache Traffic Server)",
    "Realize that the /do-report endpoint is mapped to /forbidden, preventing access unless not going through the proxy",
    "Research about the versions of Node.js and ATS used",
    "Find a HTTP request smuggling issue with incorrect parsing of chunk extensions",
    "Modify the available PoC to suit the given context",
    "Smuggle a request to the backend application, bypassing the access control implemented on ATS",
    "Understand that the verify.pug template has a unescaped username allowing HTML markup injection",
    "Learn about the Scroll-To-Text-Fragment (STTF) which is a Chromium feature allowing to scroll to a specific portion of the page using a text snippet in the URL",
    "Use the lazy-loaded image to detect if a scroll occurred when a text fragment is parsed in the URL",
    "Automate the submission of different text fragments and for each text fragment, detect if a callback is received",
    "Use this method to bruteforce the admin token one character at a time",
    "Automate the full exploit chain in solve.py",
    "Adjust necessary parameters in the python script"
]