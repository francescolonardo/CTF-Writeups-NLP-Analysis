{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the JavaScript code of the Express app and understand the restrictions on the `file` parameter.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Examine the JavaScript code of the Express app."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identify the restrictions placed on the `file` parameter."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Inspect the `a.cpp` file and notice the `system(\"cat flag.txt\")` command, indicating the presence of `flag.txt` in the same directory.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Open and review the contents of the `a.cpp` file."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Observe the presence of the `system(\"cat flag.txt\")` command in the code."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Infer the existence of the `flag.txt` file in the same directory."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Craft a payload to bypass the restrictions and use `path.resolve()` to access `flag.txt`. Payload: `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js`",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Create a payload to circumvent the `file` parameter restrictions."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Incorporate the use of `path.resolve()` in the payload."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Specify the crafted payload: `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js`"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Send the payload to retrieve the flag.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Transmit the crafted payload to the target application."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Execute the payload to fetch the contents of `flag.txt`."
                    }
                ]
            }
        ]
    }
}
