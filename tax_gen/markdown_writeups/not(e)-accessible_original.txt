<h1>35C3 Junior CTF â€“ Not(e) accessible</h1>

<ul>
<li><strong>Category:</strong> Web</li>
<li><strong>Points:</strong> 55 (variable)</li>
</ul>

<h2>Challenge</h2>

<blockquote>
  <p>We love notes. They make our lifes more structured and easier to manage! In 2018 everything has to be digital, and that's why we built our very own note-taking system using micro services: Not(e) accessible! For security reasons, we generate a random note ID and password for each note.</p>
  
  <p>Recently, we received a report through our responsible disclosure program which claimed that our access control is bypassable...</p>
  
  <p>http://35.207.120.163</p>
  
  <p>Difficulty estimate: Easy-Medium</p>
</blockquote>

<h2>Solution</h2>

<p>If you try to submit a note (with spaces) an error will appear.</p>

<blockquote>
  <p>ERROR! - Text does not match /^[a-zA-Z]+$/</p>
</blockquote>

<p>If the text follows the shown regex, the note is inserted showing some info.</p>

<blockquote>
  <p>Your note ID is 5779715767432985082</p>
  
  <p>Your note PW is 44a0cbcab0cdb0326be3b76b21bb25c9</p>
  
  <p>And the link to the note:
  http://35.207.120.163/view.php?id=5779715767432985082&amp;pw=44a0cbcab0cdb0326be3b76b21bb25c9</p>
</blockquote>

<p>Analyzing the HTML, you can find the following comment.</p>

<p><code>HTML
&lt;!-- My source is at /src.tgz --&gt;
</code></p>

<p>The archive contains both the frontend and the backend code.</p>

<p>Into the backend file <code>app.rb</code> you can discover the backend endpoint that must be called to retrieve the flag.</p>

<p><code>Ruby
get '/admin' do
    File.read("flag.txt")
end
</code></p>

<p>The code that can be abused is into frontend <code>view.php</code> file.</p>

<p><code>PHP
if(file_exists("./pws/" . (int) $id . ".pw")) {
    if(file_get_contents("./pws/" . (int) $id . ".pw") == $_GET['pw']) {
        echo file_get_contents($BACKEND . "get/" . $id);
</code></p>

<p>The <code>int</code> cast is not present everywhere, so the <code>id</code> parameter can be crafted like the following.</p>

<p><code>
5779715767432985082/../../admin
</code></p>

<p>With this parameter, the first two <code>if</code> statements will be true, because the result of the expression is the following, due to the fact that PHP will consider only the integer part for the cast.</p>

<p><code>
./pws/5779715767432985082.pw
</code></p>

<p>That result is a valid password file, the one created previously during the note submission.</p>

<p>The <code>file_get_contents</code> instruction will perform a HTTP GET call to the following backend endpoint.</p>

<p><code>
$BACKEND/get/5779715767432985082/../../admin
</code></p>

<p>That will be interpreted like <code>$BACKEND/admin</code></p>

<p>Hence, the flag will be returned.</p>

<p><code>
35C3_M1Cr0_S3rvices_4R3_FUN!
</code></p>
