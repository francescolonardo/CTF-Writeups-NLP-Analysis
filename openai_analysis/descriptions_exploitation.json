[
    "Perform a information disclosure attack to obtain the source code of the checkpass.php file.",
    "Exploit the code injection vulnerability to execute commands on the server.",
    "Obtain user credentials and escalate privileges.",
    "Manipulate the JWT payload to gain admin privileges.",
    "Craft a new JWT token with the modified payload.",
    "Access the '/admin' route with the new token.",
    "Decrypt the flag using rot13.",
    "Craft a payload that abuses the Express query parsing vulnerability.",
    "Bypass filename checks.",
    "Exploit path resolution and filename manipulation.",
    "Submit the crafted payload to retrieve the flag.",
    "Access the disallowed route.",
    "Execute the attack.",
    "Verify the success of the attack.",
    "Determine the password required to pass the validation process.",
    "Access the secure portal using the correct password.",
    "Craft a CSS injection payload to leak the password character by character.",
    "Continue the CSS injection payload to leak the next character of the password.",
    "Repeat step 2 until the entire password is leaked.",
    "Craft a final CSS injection payload to obtain the admin cookie containing the flag.",
    "Exploit Template Injection vulnerability to reveal the cookie secret value",
    "Set the secure cookie value to `true`",
    "Replace the signed cookie with the modified cookie",
    "Reload the server script to obtain the flag",
    "Exploit type juggling vulnerability in PHP",
    "Exploit the python pickle vulnerability in the caching module to achieve remote code execution (RCE).",
    "Retrieve the output from the executed command or perform further actions on the target.",
    "Exploit the RCE vulnerability to extract the flag",
    "Upload the malicious GIF to trigger the RCE and retrieve the flag",
    "Manually add 5 captchas and interact with them.",
    "Click on 'GET FLAG' and copy the flag from the screen.",
    "Modify the language headers to Swedish.",
    "Change User-Agent header to Linux Xbox",
    "Add 'PSG' to the JSON request",
    "Perform SQL injection to bypass authentication",
    "Iterate through different characters to extract the password or flag",
    "Craft a cURL request setting the cookie to the given string.",
    "Send a new request with the updated flag value from the previous step.",
    "Repeat step 3 until the flag value is 'EOF'.",
    "Perform SQL Injection",
    "Craft payload with guessed character",
    "Send payload to target URL",
    "Exploit the `bodyParser.urlencoded` middleware that allows arrays and objects in the request body.",
    "Exploit the type-casting behavior of the `mysql` library to generate a valid SQL query.",
    "Access the `/flag` endpoint using the obtained session cookie.",
    "Bruteforce the JWT secret using a wordlist.",
    "Craft a JWT with the `username` field set to `admin`.",
    "Exploit template injection in the 404 page to execute arbitrary commands.",
    "Spawn a reverse shell using the `subprocess.Popen` class.",
    "Retrieve the flag from the target system.",
    "Change the User Agent to Windows 95.",
    "Retrieve the flag from local storage or convert the stored value to ASCII.",
    "Perform SQL Injection to bypass login.",
    "Trigger an alert to obtain the flag.",
    "Exploit the vulnerability to modify the token",
    "Trigger the vulnerability to retrieve the flag",
    "Manipulate the contents of the pastebin to execute arbitrary JavaScript code.",
    "Exploit the XSS vulnerability to steal the admin bot's cookies.",
    "Set up a netcat listener on the server to receive the stolen cookies.",
    "Exploit XSS vulnerability to steal the admin's cookie.",
    "Perform local file inclusion by creating a payload.php file and executing system commands.",
    "Search for the flag format within the retrieved file contents.",
    "Identify a valid user and obtain their JWT token.",
    "Decode the JWT token to extract the user ID.",
    "Modify the JWT token to have the 'Admin' role.",
    "Send requests with the modified JWT token to update user role and read the flag.",
    "Exploit the SQL injection vulnerability to gain unauthorized access.",
    "Craft and send the POST request with the XXE payload.",
    "Exploit accessible template files to leak source code",
    "Alternative solution: Exploit environment variables",
    "Exploit log4j for the flag",
    "Craft and test a basic payload",
    "Develop a more sophisticated payload",
    "Exploit the vulnerability on the target",
    "Craft a malicious request to exploit the vulnerability.",
    "Send the malicious request to the application.",
    "Set the `host` parameter to a command injection payload",
    "Attempt to open a reverse shell",
    "Perform a basic command to check directory contents",
    "Retrieve the current directory path",
    "Retrieve environment variables",
    "Check root directory contents",
    "Continued attempts to open a reverse shell",
    "Search for the flag",
    "Access the `g00d_old_mus1c.php` file.",
    "Attempt to bypass the regular expression blacklist and execute arbitrary code.",
    "Retrieve the flag by accessing sensitive information through code injection.",
    "Attempt brute force attack",
    "Upload a new profile picture to test file upload functionality.",
    "Attempt to bypass file type validation and upload a PHP file.",
    "Exploit the file type check by crafting a PNG image with embedded PHP code.",
    "Replace PHP code with code to pop a shell.",
    "Use command injection to find and retrieve the flag.",
    "Attempt command injection by injecting a command into the URL parameter.",
    "Execute the final payload to obtain the flag.",
    "Attempt to bypass the regular expression blacklist and execute arbitrary code.",
    "Retrieve the flag by accessing sensitive information through code injection.",
    "Attempt to login using the obtained credentials.",
    "Attempt SQL injection on the login page.",
    "Craft the malicious payload",
    "Set up the server",
    "Expose the server to the internet",
    "Inject the payload",
    "Monitor the server",
    "Retrieve the flag",
    "Generate a barcode with a SQL injection that returns all rows.",
    "Upload the barcode to the website.",
    "Exploit the dangerous use of Python's eval() function",
    "Execute a command to read the flag file",
    "Perform a cURL request using the obtained information.",
    "The attacker finds a way to isolate the '/' character from the 'index.html' file using the '\\StrMid' function.",
    "The attacker constructs the LaTeX code to build the path and read the flag file.",
    "Exploit PHP loose comparison.",
    "Upload the created key.",
    "Input `{{ state.flag }}` (you could also do `{{ state }}` and get the flag)",
    "Use Dirb to scan for hidden directories and files.",
    "Combine all parts of the flag for submission.",
    "Reload the page with the new User-Agent.",
    "Extract the secret key from the message.",
    "Change the 'admin' field in the session data to 'true'.",
    "Craft a new session cookie using the updated session data and the secret key.",
    "Send the new session cookie in an HTTP request to authenticate as an admin.",
    "Access the protected flag or resource and retrieve it.",
    "Attempt to login and generate a cookie",
    "Manipulate the admin cookie value",
    "Reload the page and the flag will stay on the screen",
    "Brute-force the prefix of the data parameter using a script.",
    "Craft a payload to exploit the vulnerability.",
    "Execute the payload on the server.",
    "Exploit SQL injection vulnerability",
    "Retrieve column names",
    "Extract flag",
    "Exploiting SQL injection vulnerability",
    "Discovering sensitive information through LFI",
    "Send a POST request to the specified URL with the given JSON payload.",
    "Access the \"/robots.txt\" file on the target website.",
    "Send a POST request to the \"/flag\" page.",
    "Send the modified JWT token as a POST request to the \"/flag\" page.",
    "Create a token with the private key and use it to gain access to the flag.",
    "Perform JWT confusion attack",
    "Access /flag with the new token as a cookie",
    "Brute force the secret_key using a tool and a dictionary file",
    "Craft a new token with the discovered secret_key and user=admin",
    "Access /flag using the newly crafted token as a cookie",
    "Read the content of the 'hint.txt' file.",
    "Exploit node-deserialization vulnerability.",
    "Craft a SQL injection payload and send it to the server.",
    "Exploit path traversal vulnerability in the language parameter.",
    "Exploit the `proxyimage` method to generate a request from the same server.",
    "Login and obtain the flag",
    "Download and extract hidden data from .DS_Store file.",
    "Exploit the PHP code in the frontend to access the /admin endpoint",
    "Find the specific value for '$_[0]' that will return the flag.",
    "Combine the partial flag information to obtain the complete flag.",
    "Modify the value of the 'admin_id' cookie.",
    "Refresh the website and observe the outcome.",
    "Investigate the error location in the JavaScript file",
    "Decoding Base64",
    "Develop a custom client to win each round of the game by sending the correct positions to the server.",
    "Craft an XSS payload",
    "Post the XSS payload",
    "Use the administrator's cookies",
    "Access the secret.html page",
    "Exfiltrate the original secret.html content",
    "Access the secret.html page",
    "Exfiltrate the original secret.html content",
    "Craft a malicious XML payload to exploit the application via a XXE attack.",
    "Use PHP filters to read the source code of the flag.",
    "Craft the payload to read the 'flag.php' file using non-alphanumeric characters.",
    "Craft the payload to read the 'flag.php' file using non-alphanumeric characters.",
    "Decode the obfuscated JavaScript code",
    "Make a GET request to the hidden endpoint",
    "Decrypt the ROT13 encrypted message",
    "Make a POST request to the specified endpoint",
    "Set the 'flag' variable in the POST request",
    "Exploit the vulnerability in the 'scriptlet' script to execute arbitrary commands on the server.",
    "Submit the correct answer to the trivia question.",
    "Send a POST request to the target website with a command to execute.",
    "Send a POST request to the target website to list the directory contents.",
    "Send a POST request to the target website to print the contents of a specific file.",
    "Send a POST request to the target website with a command to execute.",
    "Send a POST request to the target website to list the directory contents.",
    "Send a POST request to the target website to print the contents of a specific file.",
    "Retrieve all characters of the flag by iterating over the 'transmissions' cookies.",
    "Retrieve all characters of the flag by iterating over the 'transmissions' cookies.",
    "Retrieve all characters of the flag by iterating over the 'transmissions' cookies.",
    "Check the crafted cookie value against the website to test authentication bypass.",
    "Craft a payload to perform an arbitrary file read on the server.",
    "Submit the crafted payload to the web application.",
    "Craft a payload to perform an arbitrary file read on the server.",
    "Submit the crafted payload to the web application.",
    "Craft a payload to perform an arbitrary file read on the server.",
    "Submit the crafted payload to the web application.",
    "Craft a payload using preg_replace to execute arbitrary PHP code.",
    "Attempt to execute system() command to execute arbitrary shell commands.",
    "Craft a payload using fread and fopen to read the 'config.php' file.",
    "Read the contents of the discovered file.",
    "Attempt to bypass file size restriction.",
    "Craft a PHP shell and upload it.",
    "Test PHP shell for remote code execution (RCE).",
    "Use phpinfo() to gather information about the server configuration.",
    "Exploit file and directory manipulation functions to search for the flag.",
    "Attempt to authenticate using the default credentials and analyze the response.",
    "Modify the User-Agent header to introduce SQL injection and analyze the response.",
    "Craft a SQL injection payload to leak the database name.",
    "Extract the flag by combining the leaked database name with the expected format.",
    "Generate URL-encoded versions of two colliding MD5 strings.",
    "Craft a complete request with all the necessary parameters.",
    "Accessing the 'staff.html' web page.",
    "Craft a valid JWT with '31337' identity and signed with 'dawgCTF?heckin#bamboozle' secret using [JWT.io website](https://jwt.io/).",
    "Make a request to the JWT-related endpoint with the JWT in the 'Authorization' header.",
    "Exploit the forgot password functionality",
    "Use the derived 'passcode' value to perform a request.",
    "Extract the flag from the retrieved image URL.",
    "Execute the JavaScript code in the browser console.",
    "Submit a common password, such as 'password'.",
    "Submit a common password, such as 'password'.",
    "Craft a malicious HTTP request to perform the HTTP Desync Attack.",
    "Exploit the manipulated behavior of the application to access sensitive data.",
    "Craft a POST request to the target server.",
    "Craft a payload to include the flag file.",
    "Exploit the lack of escaping countermeasures for the ':' character.",
    "Log in with the created admin account to retrieve the flag.",
    "Serialize an object of class SHITS with the desired attributes.",
    "Include the encoded payload in the GET request.",
    "Serialize an object of class SHITS with the desired attributes.",
    "Include the encoded payload in the GET request.",
    "Authentication: Attempt to bypass the authentication by manipulating the login form.",
    "SQL Injection: Attempt to exploit SQL injection vulnerabilities in the post retrieval mechanism.",
    "Data Extraction: Retrieve the flag from the data obtained using SQL injection.",
    "Check if there are any other documents besides 'data'.",
    "Extract the flag from the retrieved document.",
    "Exploit the SQL injection vulnerability to bypass the password check.",
    "Craft a UNION SQL injection payload to retrieve the flag.",
    "The attacker confirms the presence of a Remote Command Execution (RCE) vulnerability by exploiting the identified bug.",
    "The attacker interacts with the server by executing remote commands.",
    "GET request generated with 'with' parameter set to 'foo'",
    "GET request generated with 'with' parameter set to 'flag'",
    "GET request to flag page",
    "Bypass the first check by referencing the secret field.",
    "Bypass the second check by executing the content of the 'caption' parameter.",
    "Exploit the URL manipulation vulnerability",
    "Bypass the alphanumeric check",
    "Exploit the Shellshock vulnerability.",
    "Find sensitive files or information on the server.",
    "Inject a command in the IP address input field.",
    "Access a specific URL on the server.",
    "Exploit the XSS vulnerability in the website's LaTeX input field.",
    "Craft a cookie with the false flag value and the stolen session ID.",
    "Access the 'list' functionality to trigger the if statement and obtain the real flag value.",
    "Replace the original 'login' cookie with the malicious payload",
    "Access the private section of the website",
    "Obtain the flag",
    "Craft a payload that can be injected into the cowfile via the custom_cow parameter.",
    "Send a POST request to the cow_designer functionality with the crafted payload.",
    "Send a POST request to the cow_designer functionality to print the flag file.",
    "Analyze the obfuscated JavaScript code",
    "Exploit the SQL injection vulnerability to manipulate the SQL query.",
    "Perform a UNION SQL operation to gather information about the database structure.",
    "Enumerate the columns of the user table to extract useful information.",
    "Enumerate the columns of the sessions table to extract useful information.",
    "Retrieve the ID of the user 'Maria' from the user table.",
    "Retrieve the session ID associated with the user 'Maria' from the sessions table.",
    "Impersonate 'Maria' by changing the PHPSESSID cookie to the obtained session ID.",
    "Inspect the dumped content for any relevant information.",
    "Exploit the vulnerability in the upload functionality.",
    "Execute commands on the server via the uploaded image file.",
    "Craft a payload to exploit the SQL injection vulnerability.",
    "Test the payload and exfiltrate data from the database.",
    "Iterate through the exfiltration process to obtain all necessary data.",
    "Change the IP address to circumvent attempt limit restrictions.",
    "Continue the exfiltration process and retrieve the necessary data.",
    "Use the obtained data to access a protected page or resource.",
    "Analyze Symfony error pages to gain access to the Symfony profiler interface.",
    "Retrieve the content of the environment file to find the database credentials.",
    "Exploit the XXE vulnerability to retrieve sensitive information.",
    "Retrieve the flag from the flag file.",
    "Exploit the SQL injection vulnerability to retrieve user details with the desired 'role' value.",
    "Perform authentication and trigger the SQL injection vulnerability.",
    "Logout and re-login to display the details of the searched user.",
    "Access 'flags.php' using the user with the desired 'role' value to obtain the flag.",
    "Write a bash script to interact with the version control system and analyze revisions.",
    "Extract the Bitcoin wallet password from the first revision.",
    "Extract the AES ECB key from the second revision.",
    "Use OpenSSL to decrypt the Bitcoin wallet password.",
    "Revert the Bazaar repository to recreate the missing file.",
    "Connect to the host specified in the SSL certificate.",
    "Submit the correct answers to the security questions.",
    "Reset the account password.",
    "Submit the correct answers to the security questions.",
    "Reset the account password.",
    "Exploit SQL injection vulnerability.",
    "Exfiltrate password through blind SQL injection.",
    "Manipulate the cookie value",
    "Attempting command injection via the cookies.",
    "Printing the contents of the 'flag' file.",
    "Use the discovered password to gain access to the system.",
    "Exploit vulnerability",
    "Attempt SQL injection to bypass the login form.",
    "Use SQL 'LIKE' clause to discover each character of the password/flag.",
    "Send the XML payload",
    "Send the XML payload",
    "Exploit the SQL injection vulnerability to enumerate database tables.",
    "Enumerate the columns of the 'flag' table.",
    "Retrieve the content of the 'flag' table.",
    "Exploit the SQL injection vulnerability to enumerate database tables.",
    "Enumerate the columns of the 'flag' table.",
    "Retrieve the content of the 'flag' table.",
    "Generate random strings and compute their MD5 hashes until a match with the challenge is found.",
    "Repeat steps 1-3 until the desired number of votes is reached.",
    "Bypass CAPTCHA by manipulating the request",
    "Exploit the debugging private key",
    "Craft a payload using code injection to dump the source code.",
    "Craft a payload to exfiltrate the function source code.",
    "Bypass the output content check.",
    "Attempt to trigger a custom error on the target platform.",
    "Exploit the identified vulnerability to execute arbitrary JavaScript code.",
    "Craft the final exploit URL and send it to the bot.",
    "Exploit the directory traversal vulnerability to write a file with malicious content.",
    "Craft a payload to overwrite the target file and execute a command of the attacker's choice.",
    "Retrieve the flag from a sensitive file on the target system.",
    "Exploit DNS forwarding behavior",
    "Utilize wildcard DNS service",
    "Bypass non-ASCII character restriction",
    "Exploit X-Accel-Redirect vulnerability",
    "Exploit Off-by-Slash bug",
    "Exploit the XSS vulnerability to execute arbitrary code",
    "Exploit inadequate input validation in the URL query parameter.",
    "Exploit the vulnerability in DOMPurify to achieve XSS.",
    "Attempt to inject malicious code using the discovered technique.",
    "Exploit the injected code to trigger an alert and potentially gain further access.",
    "Exploiting XXE vulnerability",
    "Exploiting deserialization vulnerability",
    "Executing the `flag_dispenser` command",
    "SSRF in the /api/image to ftp server",
    "CRLF injection in the username to inject ftp commands",
    "Upload file into the ftp server using profile picture upload",
    "Use PORT ftp command to SSRF to rabbitmq http API (use REST to discard the png header from the uploaded file)",
    "Inject in rabbitmq email queue with an 'attachment' parameter to get it to email us the flag",
    "Perform SQL injection to leak data.",
    "Brute force the password on the 7777 site to determine the leaked byte.",
    "Dump tables and columns to retrieve the flag.",
    "Define a setter on converters",
    "Set flagConverted on the manipulated object",
    "Resolve the promise and trigger an error",
    "Generate a payload to bypass the regex check and access the source code.",
    "Generate a payload to guess the secret and obtain the flag.",
    "Exploit the PHP bug to bypass strip_tags and inject an `a` tag.",
    "Inject an `a` tag with the id `like` to trick the bot into clicking it.",
    "Perform SQLite injection",
    "Bypass regex validation",
    "Brute force the unknown octets of the IP address.",
    "Exploiting a normal SSRF vulnerability in curl.",
    "Exploiting SSRF to NFS filesystem and creating a symlink to overwrite index.html.",
    "Exploit a vulnerability in the WordPress installation",
    "Manipulate the comparison check in user.php to bypass login authentication",
    "Login as admin",
    "Upload PHP shell and read flag",
    "Exploit the vulnerability to bypass escapeshellargs.",
    "Perform command injection and exploit the system.",
    "Exploit the capability of the server to read arbitrary files using the `@import` functionality of `lesscss`.",
    "Exploit the ability to execute arbitrary Go code at runtime from a cookie using the `interp` package.",
    "Identify and bypass the blocking of `os.exec` function to achieve code execution.",
    "Exploit the ability to execute arbitrary commands on the server to read sensitive files.",
    "Exploit CVE-2022-26377 to perform Request Smuggling",
    "Craft a request to get the flag",
    "Accessing the flag file",
    "Execute arbitrary javascript code through the outputFunctionName option.",
    "Inject arbitrary characters into the email field.",
    "Use a negative rate value to bypass duration check while updating status.",
    "Inject arbitrary HTML code to be rendered by pdfkit/wkhtmltopdf.",
    "Inject iframe with local file as src to leak secret key from config.py.",
    "Use the leaked secret key to fake an 'is_admin' session.",
    "Read the flag by leveraging the fake 'is_admin' session.",
    "Inject malicious code into the application by exploiting the XPATH injection vulnerability.",
    "Exploit XSS vulnerability",
    "Override the function used for code conversion",
    "Exploit the imported execution function",
    "Retrieve the flag",
    "SSRF to localhost only admin endpoint with hardcoded key",
    "CRLF injection in Lua's HTTP library to bypass X-Real-IP protection",
    "Login with an empty string as the username and an arbitrary password.",
    "Exploit SQL Injection through the `query_kill_time` function.",
    "Exploit the flawed file upload handling",
    "Upload an .htaccess file",
    "Read arbitrary files on the server",
    "Achieve code execution through 'SetEnv LD_PRELOAD' and the gzip filter",
    "Execute the final solution",
    "Exploit the vulnerability by generating two PDF files with the same SHA1 hash.",
    "Upload pdf1 and obtain a signature.",
    "Apply the signature obtained for pdf1 to pdf2.",
    "Exploit the vulnerability",
    "Log into the website with the provided credentials and see it says our browser is unsupported.",
    "Bruteforce user agent strings in Burp Suite based on the scoped style attribute and the browser compatibility information.",
    "Develop a shellcode to exploit the vulnerabilities and achieve the desired outcome.",
    "Submit random answers",
    "Retrieve the flag",
    "Bypass the check 'e.origin !== window.origin'",
    "Steal the identifier",
    "Steal the saved note with a valid identifier",
    "Modify the cookie to bypass checks",
    "Visit the '/cookies' endpoint to retrieve cookie information.",
    "Include a script from an external source to leverage the variable obtained.",
    "Extract the admin's cookie using JavaScript code.",
    "Retrieve the flag using the admin's cookie.",
    "Exploit the lack of input validation on the upload page.",
    "Exploit the vulnerability by crafting a malicious query parameter.",
    "Exploit the successful execution of the malicious script tag.",
    "Exploit the lack of CSRF tokens and the 'SameSite=Lax' cookie restriction.",
    "Gain unauthorized access to the admin account.",
    "Retrieve the flag by accessing restricted content or functionality.",
    "Retrieve and verify the flag using the obtained secret key.",
    "Create a paste with script tags and nonces",
    "Retrieve the admin's cookie",
    "Retrieve the flag",
    "Perform blind NoSQL injection",
    "Retrieve the flag",
    "Perform NoSQL injection to bypass login authentication.",
    "Access the site to obtain the flag.",
    "Exploit the SSTI vulnerability to gain access to the store key.",
    "Forge a token with a manipulated key to gain access to the flag.",
    "Exploit the identified vulnerabilities to gain unauthorized access or privileges.",
    "Retrieve the desired information or achieve the intended outcome of the attack.",
    "Exploit the identified vulnerabilities to gain unauthorized access or privileges.",
    "Retrieve the desired information or achieve the intended outcome of the attack.",
    "Exploit the identified vulnerabilities to gain unauthorized access or privileges.",
    "Retrieve the desired information or achieve the intended outcome of the attack.",
    "Craft an SQL Injection payload within the constraints of the UUID input validation",
    "Perform the SQL Injection attack by uploading the payload along with the encrypted image",
    "Retrieve the flag from the generated image",
    "Perform SQL injection to retrieve the length of the flag",
    "Double hex the flag",
    "Craft a payload that, when executed in the context, will return the value 1337.",
    "Optimize the payload to reduce its size.",
    "Further refine the payload to minimize its length.",
    "Attempt to find a payload without relying on factorization.",
    "Consider alternative approaches and solutions.",
    "Further optimize the payload for size.",
    "Craft a CSRF page to steal the admin's CSRF cookie.",
    "Obtain the admin's OAuth tokens.",
    "Bypass countermeasures to gain control of the $whoareyou variable.",
    "Pass if conditions and get redirected to another stage.",
    "Abuse the type attribute in the form to send a request to super_secret_shell.php.",
    "Access the /debug/answer endpoint.",
    "Solve the challenge for Flag #2 using insane Path Traveral.",
    "Make an HTTP request to the `/api/true-answer` endpoint",
    "Exploit the behavior of the Angular application when making HTTP requests",
    "Craft a payload to steal the admin's cookie.",
    "Attempt to execute the payload and steal the admin's cookie.",
    "Exploit the identified vulnerability to bypass protections and execute arbitrary code.",
    "Inject and execute the payload to rewrite the document and redirect it.",
    "Craft an HTTP request using octal IP notation.",
    "Exploit the manipulated DNS resolution",
    "Exploit the identified vulnerability to gain access to the target system.",
    "Craft the custom phar file and execute the RCE exploit.",
    "Assembling all the flag parts to obtain the complete flag.",
    "Exploit the language parameter to perform Local File Inclusion (LFI) attack.",
    "Extract sensitive information by including the path to the password file.",
    "Retrieve the flag by accessing a specific file.",
    "Perform NoSQL injection",
    "Use wildcard to check if specific characters are present in the password",
    "Exploit SSRF by manipulating the background RGB values.",
    "Adapt the payload to work with the specific application.",
    "Execute the payload to exploit the vulnerability.",
    "Send payload to steal cookies",
    "Change password using API endpoint",
    "Escalate to admin",
    "Exploit SQL Injection vulnerability to bypass login.",
    "Access the system and uncover the flag.",
    "Exploit the 'shell_exec' function by escaping it and running shell commands.",
    "Read the flag by running a command to display the contents of the flag file.",
    "Use SQL injection to obtain user credentials",
    "Log in as admin",
    "Perform path traversal to access sensitive files",
    "Locate and retrieve the flag",
    "Modify and send the introspection query to the GraphQL endpoint",
    "Craft a GraphQL query to exploit the UpdatePassword mutation",
    "Execute the crafted GraphQL query to update the admin password",
    "Gain access using the new admin password",
    "Submit the correct pin",
    "Read the contents of the flag.txt file.",
    "Authorize using the admin:admin credentials",
    "Execute a request to get the flag",
    "The attacker discovers the login page on the Admin section.",
    "The attacker attempts to access the '/server-status' path.",
    "Bruteforce the flag character by character.",
    "Automate the brute force process to retrieve the full flag.",
    "Call the range from the hidden sheet using the accessibility tools.",
    "Login as the admin using the default password",
    "Exploit the vulnerability to gain admin access.",
    "Perform a response-based search for the flag.",
    "Confirm the flag on the website by modifying the cookie values.",
    "Submit a single comma as input.",
    "Submit three commas as input.",
    "Remove the 'name' key from the request body.",
    "Remove the 'password' key from the request body.",
    "Craft a malicious request with custom values for 'username', 'password', 'salt', and 'hash'.",
    "Upload a malicious file with HTML and JS code.",
    "Find the profile of the admin and make them follow the attacker's account.",
    "Send a friend request to the admin's profile.",
    "Exploit the server using a Path Traversal Remote Code Execution vulnerability.",
    "Access the subdirectory containing the .env file.",
    "Retrieve the .env file.",
    "Obtain the flag from the .env file.",
    "Attempt to exploit the target system using HTTP request smuggling.",
    "Craft or find the right cookie to access restricted resources.",
    "Intercept the register request",
    "Exploit SQL injection vulnerability to gain unauthorized access to the system.",
    "Bypass authentication using the extracted password.",
    "Locate and retrieve the flag file.",
    "Modify the admin cookie to gain administrative privileges.",
    "Submit the modified request to gain access and retrieve the flag.",
    "Attempt to access the admin panel.",
    "Modify John's gallery settings.",
    "Find the flag within John's gallery.",
    "Craft a payload to manipulate the user cookie and access the flag.",
    "Inject command into input box using backticks.",
    "List files in the current directory.",
    "View the code of the `index.php` file.",
    "List files in the parent directory.",
    "Attempt to read the contents of the `flag.txt` file.",
    "Exploit the `<` character to read the contents of the `flag.txt` file.",
    "Spoof the client IP address.",
    "Upload malicious XML payload.",
    "Access the XML file to trigger the XXE attack.",
    "Access the restricted /ingen/ directory.",
    "Locate and retrieve the flag file within the /ingen/ directory.",
    "Craft a modified regex pattern to match the desired flag format.",
    "Attempt a GET request to the /rocketLaunch endpoint",
    "Craft a JSON body with the 'launch' keyword",
    "Send the token to the /rocketLaunch endpoint",
    "Exploit the missing required parameter check.",
    "Exploit the maximum length check for the 'n' parameter.",
    "Exploit the lack of duplicate parameter check.",
    "Crack MD5 hashes",
    "Login using the obtained credentials",
    "Use a fuzzing tool (ffuf) to discover additional log files.",
    "Attempt to bypass authentication via SQL injection",
    "Access the admin panel",
    "Modify the JSON file to add desired grades",
    "Upload the modified JSON file",
    "Use the provided email addresses to perform a brute force attack on the student login.",
    "Perform SQL injection in the username field.",
    "Iterate through possible characters for the password.",
    "Calculate the MD5 hash of 'Hello_Rules' in lowercase.",
    "Construct the flag using the MD5 hash.",
    "Attempt to brute-force the password using the known username and password mask.",
    "Login as the user 'jack' and explore the website.",
    "Attempt to bypass the access restriction on usernames other than 'jack'.",
    "Crack the 'session_id' cookie to gain access as the 'admin' user.",
    "Use the discovered information to successfully access the website as the 'admin' user.",
    "Exploit the Prototype Pollution vulnerability in 'fast-json-patch'",
    "Exploit XSS vulnerability by injecting malicious script.",
    "Split and send the image data to the bot.",
    "Decode and display the image data to obtain the flag.",
    "Exploit the unserialized user requests to bypass the MFA verification.",
    "Exploiting the vulnerability",
    "Exploiting the SSTI vulnerability in the password field",
    "Exploiting the SQL injection vulnerability in the 'data-server' project",
    "Utilizing SSTI to execute commands",
    "Sending requests with SQL payloads to internal address",
    "Crafting a payload",
    "Executing the payload",
    "Obtaining the flag",
    "Perform a series of HTTP requests with different 'likeCookie' values.",
    "Exploit the logic error in user authentication.",
    "Exploit the lack of termination after redirect.",
    "Perform admin functions with path traversal.",
    "Exploit a directory traversal vulnerability in the Vitepress development server.",
    "Exploit Cross-Site Request Forgery (CSRF) and Cross-Origin Resource Sharing (CORS) vulnerabilities in the Vitepress development server.",
    "Use the obtained SSH private key to gain unauthorized access to the target server.",
    "Perform prototype pollution",
    "Perform command injection",
    "Exploit the dynamic rendering feature by setting the User-Agent header to a web crawler.",
    "Craft a redirection chain to control the renderer's navigation.",
    "Perform cross-site scripting (XSS) within the renderer.",
    "Exploit the authentication bypass vulnerability in `jsonwebtoken` 3.2.2",
    "Sign and send the forged JWT token to the server",
    "Access and read the `flag.txt` file",
    "Craft request with manipulated `SCRIPT_NAME` header",
    "Obtain decryption key",
    "Decrypt the file",
    "Bypass Jinja2 SSTI filters",
    "Exploit RCE",
    "Attempt to bypass authentication by exploiting a reflected SQL injection vulnerability.",
    "Craft a payload to exploit the identified SQL injection vulnerability.",
    "Obtain the flag or achieve the attacker's end goal.",
    "Exploit the unauthenticated `notes.count` method.",
    "Brute force each character of the flag.",
    "Craft and upload malicious files to trigger the wildcard injection vulnerability.",
    "Access the shell obtained through the payload execution.",
    "Exploit a path traversal vulnerability on the `cdn.lukas-app.de` subdomain.",
    "Manipulate the session to gain privileged access.",
    "Exploit parameter pollution vulnerability to add coins to a user's account",
    "Modify username with a single quote",
    "Execute SQLMap with the custom tamper script",
    "Perform stacked queries",
    "Execute Immediate",
    "Exploiting SUID flag and PATH variable manipulation",
    "Send calculated hash",
    "Modify cookie value",
    "Execute system commands",
    "Exploiting SQL Injection in login pages",
    "Exploiting Image Upload Vulnerability",
    "Establishing Remote Shell",
    "Escalating Privileges Using SUID Binary",
    "Bypass the blacklist using base64-encoded payload",
    "Change the window's location back to the exploit server",
    "Perform an action based on the success of the XS Search",
    "Attempt to extract account credentials using union-based SQL injection.",
    "Set session cookie with the obtained exploit payload and MAC.",
    "Craft XSS payload to obtain admin's hash",
    "Craft CSRF payload to access /api/flag",
    "Craft XSS payload to obtain admin's hash",
    "Craft CSRF payload to access /api/flag",
    "Exploit SSRF vulnerability to perform Local File Inclusion and view server code.",
    "Leverage Gopher protocol to communicate with Redis instance.",
    "Exploit Local File Inclusion (LFI) vulnerability in /post.php",
    "Set arbitrary session theme value to control included PHP code",
    "Craft PHP payload to achieve remote code execution (RCE)",
    "Exploit the vulnerability in the MFA implementation using batched queries.",
    "Perform CAPTCHA verification for each batched query.",
    "Repeat the batched queries with different MFA tokens.",
    "Exploit SQL injection to enumerate table names",
    "Retrieve the flag using UNION SELECT",
    "Exploit the Remote Code Execution (RCE) vulnerability to obtain the flag.",
    "Exploiting the CVE-2018-8004 vulnerability in Apache Traffic Server",
    "Crafting a CL-TE request smuggling attack",
    "Manipulating the admin's request to access sensitive information",
    "Accessing the flag by leveraging the stolen credentials",
    "Exploit Insecure Direct Object Reference (IDOR) vulnerability to access files belonging to other users.",
    "Manipulate the account object to change the role attribute to 'admin'.",
    "Exploit SQL injection vulnerability in the login form.",
    "Upload a malicious `.htaccess` file.",
    "Upload a PHP file with a newly allowed extension.",
    "Trigger Remote Code Execution (RCE).",
    "Exploit the SSRF vulnerability in the `galleryUrl` parameter.",
    "Craft the exploit script",
    "Inject and test the exploit",
    "Run a Burp intruder scan to identify other accessible hosts through the app.",
    "Exploit the SQL injection vulnerability in the API.",
    "Replace spaces with comments in the SQL injection payload.",
    "Login with stolen admin credentials to access the first webpage.",
    "Access the Admin page using the obtained credentials.",
    "Craft a request to exploit the vulnerability and achieve RCE.",
    "Exploit the RCE to access sensitive files.",
    "Upload the generated PDF files to the challenge website.",
    "Bruteforce the secret key",
    "Craft a new session cookie",
    "Manipulate the 'moneys=' parameter to retrieve some information.",
    "Extract the table names from the database.",
    "Retrieve the column names from a specific table.",
    "Extract data from a specific table.",
    "Develop an exploit using a custom access_log object",
    "Encode the serialized access_log object and set it as the login cookie",
    "Access the authentication.php page to trigger the exploit and retrieve the flag",
    "Craft a SQL injection payload",
    "Manipulate input to evade the filter",
    "Access restricted content",
    "Exploit the injection vulnerability through blind XPath injection.",
    "Exploit the prototype pollution vulnerability to achieve Remote Code Execution (RCE).",
    "Attempt to obtain sensitive information or escalate privileges.",
    "Evade restrictions or limitations to gain greater control.",
    "Modify the attack strategy to bypass restrictions or limitations.",
    "Exploit the reverse shell connection to gain access to the target environment.",
    "Exploit XXE vulnerability to achieve local file inclusion (LFI).",
    "Craft payload to achieve PHP code injection and obtain remote code execution (RCE).",
    "Bypass the `disable_functions` configuration to execute restricted functions.",
    "Exploit the path traversal vulnerability in the Apache server to access the flag file.",
    "Exploit the LFI vulnerability",
    "Attempt to access the admin console",
    "Exploit the spoofable client IP vulnerability",
    "Perform a Burp Suite Intruder scan",
    "Exploit the SQL injection vulnerability",
    "Exploit the PHP object injection vulnerability to bypass authentication.",
    "Perform the authentication bypass and obtain the flag.",
    "Authenticating as the Admin",
    "Getting the Flag",
    "Identify an SQL injection vulnerability in the username parameter of the login form.",
    "Exploit a second SQL injection endpoint in the `/users.php?id=1` page.",
    "Retrieve data from the `users_data` and `login_users` tables using SQLMap.",
    "Exploit a blind SQL injection vulnerability in the `login.php` page to dump specific table and column data.",
    "Exploit the vulnerability by constructing a payload that bypasses the input filtering.",
    "Modify the payload to retrieve and display the output of the executed code.",
    "Exploit the truncation vulnerability to bypass the JSON parsing and achieve arbitrary code execution.",
    "Exploit the truncation vulnerability to bypass the JSON parsing and achieve arbitrary code execution.",
    "Exploit the exposure of the .git directory and source code on the webserver to obtain sensitive information.",
    "Exploit the vulnerability in the 'new chat' feature to perform Server-Side Template Injection (SSTI).",
    "Utilize the compromised 'add_money_to_login' function to add money to another account.",
    "Use the added money to buy the flag.",
    "Attempt to upload and execute PHP code.",
    "Test alternative file extensions for PHP code execution.",
    "Exploit the webshell to access sensitive information.",
    "Finding the flag through redirection",
    "Submit arbitrary HTML that will be rendered by the admin's browser",
    "Access the previously inaccessible '/flag' endpoint",
    "Craft a serialized object payload to achieve RCE.",
    "Gain an initial foothold by using a reverse shell payload.",
    "Encode the payload and send it through the 'guest' cookie header.",
    "Exploit the RCE to read the flag or perform further actions.",
    "Exploit the prototype pollution vulnerability to gain control over the '__proto__' key.",
    "Leverage the prototype pollution to manipulate 'pkg' and 'pkgPath' variables.",
    "Exploit the manipulated 'pkg' and 'pkgPath' to achieve remote code execution.",
    "Upload a zip file containing a `run` bash script that gives a reverse shell.",
    "Exploit the vulnerability to run arbitrary commands in a Docker container.",
    "Exploit the vulnerability to run the `run` script as the `nobody` user outside a Docker container.",
    "Compile and use a binary with SUID and SGID permissions to set the effective user and group IDs.",
    "Exploit a vulnerability in the Traefik configuration to smuggle a PUT request to the Go microservice.",
    "Exploit HTTP request smuggling in the Beego and Flask built-in server.",
    "Execute arbitrary commands on the Python microservice.",
    "Use octal IP address notation to provide the desired URL in the 'fqdn' input.",
    "Leak the remote debugging port",
    "Open the second-stage payload",
    "Execute JavaScript code on the target page to read the flag file",
    "Attempt basic SQL injection payloads.",
    "Exploit the default rule allowing SQL injection payloads longer than 8kB.",
    "Automate the SQL injection attack using SQLMap tamper script.",
    "Exploiting the urljoin vulnerability to make a request to the attacker's server.",
    "Sending a request to the backend server with the obtained secret cookie.",
    "Make a request to the `/rin` endpoint with SSRF payload",
    "Retrieve the cached JWT key from the `/sakura` endpoint",
    "Craft a new JWT token with admin role",
    "Make a request to the `/flag` endpoint with the new JWT token",
    "Bypass OTP verification",
    "Bypass SQL injection protection",
    "Bruteforce OTP character",
    "Bypass SSRF protection",
    "Redirect to flag",
    "Exploit loose comparison of MD5 hashes",
    "Exploit the vulnerability in the WebSocket message parameters to load a malicious remote Flutter widget.",
    "Exploit the `onLoaded` event in the `poll.dart` widget to exfiltrate data and perform zero-click attacks.",
    "Retrieve the flag from the `/api/flag` endpoint using the stolen admin token.",
    "Dump the entire router's RAM by retrieving the base64-encoded result of each ping request.",
    "Decode the collected base64-encoded results and save the content to a file.",
    "The attacker modifies the payload to execute the desired XSS payload.",
    "Exploit the vulnerability to generate the desired token.",
    "Perform a GET-based CSRF to set the authentication cookie for the victim.",
    "Bypass the Origin check by using a domain starting with 'localhost' that is not actually hosted on the localhost.",
    "Exfiltrate the flag using 'cross-site WebSocket hijacking'.",
    "Exploit the HTML injection vector.",
    "Perform cross-site scripting (XSS) attack using the injected payload.",
    "Write a linker script to link `libflag.so`.",
    "Exploiting the RFC5322 validation on the 'email' parameter",
    "Exploiting SSTI vulnerability",
    "Exploit vulnerability in SQLAlchemy's order_by() function",
    "Exploit SSRF vulnerability in 'wkhtmltoimage' and 'wkhtmltopdf' to exfiltrate data.",
    "Host the payload and load it through an iframe.",
    "Exploit XSS vulnerability to perform CSRF on the admin",
    "Use stolen 2FA token to bypass 2FA authentication",
    "Perform CSRF to steal admin's secrets",
    "Exploit the 'preview' operation to perform DOM clobbering.",
    "Exploit the 'search' operation to trigger unintended behavior.",
    "Bypassing \"{{\" and \"}}\"",
    "Bypassing \".\", \"[\", \"]\"",
    "Bypassing \"_\", \"\\\", \"class\", \"subclasses\", \"getitem\"",
    "Gaining RCE",
    "Final Payload",
    "Exploit the identified vulnerability to perform a successful attack.",
    "Trigger the desired behavior or extract sensitive information from the target system.",
    "Inject HTML through the src parameter.",
    "Include a script tag with a nonce attribute that is permitted by the CSP.",
    "Use the base tag to set the base URL of the document to the attacker-controlled site.",
    "Load a script from the attacker-controlled site.",
    "Upload arbitrary HTML file",
    "Create malicious LibreOffice document",
    "Upload the malicious LibreOffice document",
    "Exploit the server-side 302 redirect",
    "Exploit the Fetch API maximum redirect count",
    "Bruteforce the flag",
    "Craft an XSLT stylesheet payload to execute arbitrary JavaScript code.",
    "Craft an XSLT stylesheet payload to execute arbitrary JavaScript code.",
    "Exploit unauthenticated index page to gain access to the API.",
    "Register a new user to obtain a customer ID.",
    "Exploit a bug in the buy_item endpoint to modify the point history.",
    "Purchase the flagsword item to obtain the flag.",
    "Craft an XML payload to exploit the XInclude directive.",
    "Override the parsing behavior to allow the inclusion of non-XML content.",
    "Read the flag from the environment variable.",
    "Exploit prototype pollution vulnerability in /api/tet/list",
    "Exploit local file inclusion (LFI) vulnerability",
    "Exploit command injection in changelog.js",
    "Exploit prototype pollution vulnerability in /api/tet/list",
    "Exploit local file inclusion (LFI) vulnerability",
    "Exploit command injection in changelog.js",
    "Bypass the login by exploiting the SQL injection vulnerability.",
    "Exploit the HTTP request smuggling vulnerability to bypass the access control implemented on ATS.",
    "Perform an XS-Leak attack using Scroll-To-Text-Fragment (STTF) to bruteforce the admin token one character at a time.",
    "Buy the flag from a second account",
    "Perform a simple IDOR to get the flag with flag_id=3",
    "Exploit the nonce usage in the script tags to execute arbitrary JS from an attacker-controlled server.",
    "Bypass the CSP once again to exfiltrate data.",
    "Automate API requests to press Boop 1500 times.",
    "Exploit the knowledge of the public key to generate a valid token.",
    "Generate a token with the desired number of Boops to reach the flag.",
    "Bypassing HTML sanitization through parser differential between BeautifulSoup and browsers",
    "Bypassing strict CSP through unsupported www.youtube.com JSONP endpoint",
    "Attempt to break out of the string and execute arbitrary code.",
    "Find an injection vector and exploit it to achieve XSS.",
    "Craft a payload to steal cookies and achieve the desired outcome.",
    "Craft a URL with a search query and a redirect to a different subdomain.",
    "Craft a URL with a search query that does not exist.",
    "Craft a URL that exceeds the maximum length to trigger an `about:blank#blocked` page.",
    "Craft a URL that fits within the 2MB limit to test the `origin` accessibility.",
    "Brute-force a character of the flag using the URL length constraint.",
    "Implement a backend server to eliminate unsuccessful queries and find the flag.",
    "Use CSP violations as an oracle to detect redirects.",
    "Craft a URL with a search query and a redirect to a different subdomain.",
    "Craft a URL with a search query that does not exist.",
    "Craft a URL that exceeds the maximum length to trigger an `about:blank#blocked` page.",
    "Craft a URL that fits within the 2MB limit to test the `origin` accessibility.",
    "Brute-force a character of the flag using the URL length constraint.",
    "Implement a backend server to eliminate unsuccessful queries and find the flag.",
    "Use CSP violations as an oracle to detect redirects.",
    "Exploit prototype pollution in `utils.merge()`",
    "Exploit off-by-one error in font validation",
    "Pollute `credentials: include` option in `fetch()` call",
    "Exploit ATS interpreting \"chunked\" as `chunked` and Puma ignoring invalid/unsupported TE values.",
    "Exploit ATS processing LF as line endings and Waitress allowing LF in chunked extensions.",
    "Exploit an HTTP request smuggling vulnerability between ATS and Puma.",
    "Exploit another HTTP request smuggling vulnerability between ATS and Waitress.",
    "Authentication",
    "Log Poisoning and SSTI",
    "Exploit LFI to view /etc/passwd",
    "Achieve Remote Code Execution (RCE) using pearcmd.php",
    "Exploit LFI to include pwn.php",
    "Exploit the unsafe use of dynamic renderers.",
    "Bypass the URL validation mechanism.",
    "Bypass the script remover mechanism.",
    "Achieve XSS within the Chromium renderer.",
    "Exploit flawed URL validation mechanism.",
    "Exploit the client-side prototype pollution vulnerability in the `mootools` JavaScript library.",
    "Exploit the undefined `request.accessGranted` attribute to bypass access denied error.",
    "Perform an XS leak attack by exploiting the note search functionality combined with the navigation behavior.",
    "Exploit the insecure usage of the 'name' variable",
    "Exploit the XSS vulnerability to exfiltrate the flag",
    "Exploit Use After Free (UAF) vulnerability",
    "Overwrite HEAD->name by manipulating insertSorted() function",
    "Exploit randomized index in deleteNameAtIndex()",
    "Exploit the Local File Inclusion (LFI) vulnerability.",
    "Exploit the file:// protocol to access sensitive files.",
    "Exploit SQL injection to retrieve the flag.",
    "Perform object injection to bypass the MFA token check.",
    "Perform SQL injection to bypass the user authentication check.",
    "Exploit the vulnerabilities to gain access and obtain the flag."
]