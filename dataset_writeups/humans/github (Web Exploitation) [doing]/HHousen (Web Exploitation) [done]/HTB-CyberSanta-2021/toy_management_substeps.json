{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Examine the website and find the `database.sql` file containing password hashes.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Navigate to the target website and start exploring its structure and contents."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identify and locate the `database.sql` file on the website."
                    },
                    {
                        "SubstepNumber": 1.3,
                        "SubstepString": "Inspect the contents of `database.sql` and note the presence of password hashes."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Use CrackStation to crack the hashes, obtaining credentials for the manager and admin users.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Extract the password hashes from the `database.sql` file."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Utilize the CrackStation online tool to attempt to decrypt the extracted password hashes."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Record any successfully cracked credentials, specifically those associated with manager and admin users."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Log in with the manager credentials, viewing a list of toys and properties.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Navigate to the login page of the website."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Input the obtained manager credentials to gain access to the system."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Explore the system and view the available list of toys and their associated properties."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Identify the flag in the database with an 'approved' value set to 0.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Inspect the database entries focusing on the 'approved' values of the records."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Locate the specific record where the 'approved' value is set to 0 and identify it as the potential location of the flag."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Find the `/api/toylist` endpoint in the `challenge/routes/index.js` file, and note that the 'approved' value must be 1 for the admin user.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Navigate to and analyze the `challenge/routes/index.js` file to understand its functionality and endpoints."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Identify the `/api/toylist` endpoint within the file and investigate its implementation and conditions, particularly focusing on the 'approved' value for the admin user."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Notice the potential SQL injection vulnerability in the `database.js` file.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Locate and examine the `database.js` file for any code handling user inputs or interacting with the database."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Assess the discovered code for any potential SQL injection vulnerabilities, paying attention to how user inputs are sanitized and utilized in SQL queries."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Attempt various SQL injection payloads on the main login page, ultimately using the payload `admin' --` to bypass authentication and reveal the flag.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Craft various SQL injection payloads aimed at exploiting potential vulnerabilities in the login page."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Inject the created payloads into the appropriate fields on the login page and observe the system's response."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Refine and adjust the payloads based on the observed responses, ultimately creating and using the payload `admin' --` to bypass authentication."
                    },
                    {
                        "SubstepNumber": 7.4,
                        "SubstepString": "Once authentication is bypassed, explore the secured sections of the system to locate and retrieve the flag."
                    }
                ]
            }
        ]
    }
}
