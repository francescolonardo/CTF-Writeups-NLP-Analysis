The web application allows you to create a meme specifying the URL of an image, the top text and the bottom text. The image can be exported in PDF format clicking on the "Export!" button.

Clicking on the button, a POST request is created.

Creating a listener, you can discover that two requests are performed to retrieve the image.

PhantomJS/2.1.1* is vulnerable to *CVE-2019-17221* and it is a deprecated package.

After some analysis, you can discover that top and bottom texts parse the HTML, interpreting it.

So it is sufficient to craft a payload like the following for one of the two texts.

[HTML script that performs an XMLHttpRequest to fetch the contents of the file "/etc/flag.txt" and writes it to the document. This could be an example of a cross-site scripting (XSS) attack or an attempt to access sensitive information.]

Putting the payload in a POST request.

A pdf with the flag will be returned.