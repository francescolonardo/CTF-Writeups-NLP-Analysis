This site allows you to write HTML, so it's basically shouting at you to perform an XSS attack. The URL of the webpage created actually consists a base64 encoded form of the content of the page. We can see the `js` in the source.

The main thing we notice is that it prevents `script` tags and it allows only the following attributes for an element: `'src', 'width', 'height', 'alt', 'class'`. So we have to perform an XSS with these attributes. So, here's the payload:
[Payload for XSS attack using an iframe and the 'src' attribute]

Note that here, the site is supposed to be `https`, otherwise there will be a Content Security Policy Bypass (CSP Bypass) error, and the request won't be sent. We can get the URL of the resulting webpage:
[URL with base64 encoded payload]

On the server, we can create a simple Node.js backend which accepts the cookie as a query param and logs it. Here's an example of the backend code:
[Node.js code for a simple backend to log the stolen cookie]

When the link for the website is sent to the `admin bot`, which is basically a headless chrome browser, it visits the page and it's cookie is stolen and sent to the server at `myserver.tld`. The cookie stores the `flag`.
