{
    "Profile Exploration": [
        "Look for potential flags in each profile"
    ],
    "SQL Injection": [
        "Begin SQL Injection attack",
        "Inject a further cookie.",
        "Identify a SQL Injection vulnerability within the function.",
        "Modify the SQL injection query",
        "Enter blank input enclosed in two apostrophes in the username field."
    ],
    "Repository Check": [
        "Verify that the flag file is present in the checkout version of the repository."
    ],
    "Information Disclosure": [
        "Observe that the response contains data from the /etc/passwd file."
    ],
    "URL Manipulation": [
        "The response corresponded to '/flag' instead of '/'.",
        "Access the website",
        "Craft another request and set the remote_addr to the required fake address.",
        "Change the window's location back to the exploit server."
    ],
    "Serialization": [
        "Recognize Java Serialization notation at the start of the base64 decoded string"
    ],
    "Hashing": [
        "Note that it is an MD5 hash."
    ],
    "Cross-Site Scripting (XSS)": [
        "XSS payload is generated by sending a POST request to /api/create",
        "Used DOM Clobbering to bypass the `CONFIG.unsafeRender` check."
    ],
    "Web Navigation & Interaction": [
        "Arrive at page with the flag.",
        "Visited the webpage.",
        "Intercept the login request with 'Burpsuite'.",
        "Access the website",
        "Submit the login form.",
        "Get the response."
    ],
    "Remote Code Execution (RCE)": [
        "Leverage `subprocess.Popen` for Remote Code Execution (RCE)"
    ],
    "Endpoint Analysis": [
        "Examine the /add endpoint."
    ],
    "Port Scanning": [
        "Identify the application listening on port 11111."
    ],
    "File Manipulation": [
        "Uncover the checkpoint creation by tar utility.",
        "Set the script source to the data wanted to exfiltrate.",
        "Extract the main execution function from the Python script."
    ],
    "Privilege Escalation": [
        "Note that the JWT token needs to have the role attribute changed to admin.",
        "Discovered that the value 'false' is forced into the admin field during the normal registration process."
    ],
    "Package Research": [
        "Conducted research on 'md-to-pdf'."
    ],
    "Microservice Communication": [
        "Make a request to the Go microservice using a POST method",
        "Get the response."
    ],
    "Permission Control": [
        "Received permission denied error."
    ]
}