Description: "This is my file library. I don't have a lot of files, but I hope you like the ones I have!"

This exploit is owing to the `qs` package used by `express` to parse `req.query`. You can send an array instead of a string through the GET params in the following manner:
[GET request with an array as a parameter]

This makes the `req.names` in the backend an array: `['hello', 'world']`.
[JavaScript code of a simple Express app with a /getFile route and other routes]

The `/getFile` route is meant to get you a file from the server. But there are certain restrictions. First, you can't have ` `s or `/`s in your file. This prevents path traversal to an extent. 

Then, it checks that the `file` parameter has a length of less than 5 characters. If not, it takes just the first 5 characters. Then, it checks if the file extension is `js`, `ts`, `cpp`, or `c`, if yes, it allows you to read that file. If all these are satisfied, the path is resolved using `path.resolve()`.

In the `a.cpp` file, it says `system("cat flag.txt")`, indicating that the flag is present in the same directory in the `flag.txt`. We can pass in an array which passes the first 2 checks. Then it has to check if the `.slice(file.indexOf('.') + 1)`, so the last 2 elements have to be `['.', 'js']`. So, we can try passing `['flag.txt', '.', 'js']`, which makes the path `/home/user/flag.txt,.,js`, which is invalid. However, we can make use of the `path.resolve()`, and the fact that only the first 5 elements are used. If the array becomes `['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js']` (`js` because `txt` is not allowed). So, this passed the file check, because `.slice()` returns `['js']` and `['js'] == 'js'` is true (not used `===`). Now, to get rid of this, we add 4 random elements before the element having `flag.txt`.

Now, the string upon concatenation will give `${pwd}/a,b,c,d,/../flag.txt` (now you see why we added `/../`), so that it resolves to `${pwd}/flag.txt` because of `flag.txt`. The payload, therefore, is:
`/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js`

And you can get the flag.
