[
    "Identified a URL for the server to request, leveraging a Local File Inclusion (LFI) vulnerability for Server Side Request Forgery (SSRF) and viewing files using the 'file://' protocol",
    "Verified the server code location from the provided Dockerfile as '/code/app.py'",
    "Used a POST request to request 'file:///code/app.py' and review the server code",
    "Recognized that a Redis database was being utilized with the hostname as 'redis' and port 6379",
    "Understood that for a POST request, a 'Requests_On_Steroids' function is used to fetch the URL and if the value of <userID>_isAdmin key in Redis database is 'yes', the flag was shown in the response",
    "Identified the need to overwrite the <userID>_isAdmin value and the possibility to leverage the SSRF vulnerability to communicate with the Redis instance",
    "Observed that 'Requests_On_Steroids' function in 'main.py' supported Gopher protocol to communicate with any TCP server",
    "Discovered that instead of 'gopher://' protocol, 'inctf://' had to be used",
    "Identified the 'GopherAdapter' code in 'modules/Gophers.py'",
    "Found that the Gopher adapter used was modified from a GitHub gist to remove '/_' in the URL's path",
    "Realized the inability to send multi-line input using RESP protocol as 'urllib.parse' was updated to strip newline characters",
    "Used inline commands of Redis to send commands directly with the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'",
    "Sent the command 'SET <userID>_isAdmin \"yes\"' to set the <userID>_isAdmin value to 'yes'",
    "Received the flag 'inctfi{IDK_WHY_I_EVEN_USED_REDIS_HERE!!!}'"
]