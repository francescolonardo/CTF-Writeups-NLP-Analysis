[
    "Visited '/?file=/etc/passwd'.",
    "Used 'php://filter' to view the source of 'checkpass.php'.",
    "Decoded base64 strings to view the source code of 'wc.php'.",
    "Decoded the password hash.",
    "Observe that it leads to a list of admin usernames.",
    "Pass ['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js'] as an array via the GET parameter",
    "Identify the cookie related to flavor",
    "Replace the existing flavor value in the cookie with 'chocolate'",
    "Replace the original cookie with the new base64 encoded 'chocolate' cookie on the website",
    "Analyze the secure portal page source",
    "Understand that the password was split into various parts",
    "Identify the hidden field 'password'",
    "Extract the first character of the password",
    "Extract the admin cookie 'password'",
    "Select any one of the identified hashes.",
    "Discovered that the python pickle can be prepended with '!'",
    "Understand that the interaction with the filename being uploaded is the potential vulnerability for RCE.",
    "Intend to inject a 'grep' command to look for the flag in the main.py file.",
    "Verify if all 5 captchas are collected",
    "Found a response header",
    "Set the new flag value as the cookie",
    "The key for the key-value pair is retrieved from the 'key' variable.",
    "Submitted the payload 'csrf&username=michelle&password[username]=michelle'",
    "Search for a string formatted as 'flag{...}' in the HTML source code.",
    "Retrieve the flag from the response received after visiting the '/api/flag' endpoint.",
    "Bypass the bracket-based sanitization by adding an extra '>' in the start.",
    "Notice the website allows HTML input.",
    "Receive and log the cookie transferred as a query parameter.",
    "Modify the SQL command using the pattern 'SELECT id FROM users WHERE password = '' or 1=1;--' and username set as '123'.",
    "Execute the query '123' UNION SELECT flag, null, null from more_table;--'.",
    "Observe the information revealed about the file structure.",
    "Found a snippet of JavaScript code containing database credentials and a 'JSESSIONID' cookie.",
    "Understood that the function decodes a user's cookie",
    "Identify the presence of a 'username' attribute in the requests.",
    "Observe that the path '/' lists information including server source code.",
    "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
    "Noticed the 'sanitize' function removes spaces from input.",
    "Inspect 'challenge/routes/index.js' file for SSTI vulnerability.",
    "Inspect 'challenge/helpers/CardHelper.js' file for SSTI vulnerability.",
    "Verify that the `database.sql` file contains password hashes for a manager and admin user.",
    "Review the source code in `database.sql` file again.",
    "Identify the `/api/toylist` endpoint and its behaviour.",
    "Examine the 'challenge/routes/index.js' file. We find an '/api/submit' endpoint which the frontend sends user data.",
    "Inject a SQL query into the barcode generation process.",
    "Access the website's file upload functionality.",
    "Inspect the returned results after uploading the barcode.",
    "Craft a payload to return the content of /flag/flag.txt.",
    "Analyze the process in the script: making a cURL request, hashing the results with MD5, and setting the 'auth' cookie to the value of 'FLAG_AUTH' from secrets",
    "Inspect the source HTML.",
    "Use the LaTeX function \\StrMid to isolate the '/' symbol.",
    "Examined the website's '.git' folder",
    "Make the decision to use a UNION SELECT based query",
    "Execute a SQL query via URL manipulation",
    "Execute a SQL query via URL manipulation",
    "Execute a SQL query via URL manipulation",
    "Discover that the site is also vulnerable to Local File Inclusion (LFI)",
    "Use LFI to access the code of the 'flag' resource in the 'deleted' folder",
    "Identified the need for a valid jwt token",
    "Analyze the JWT",
    "Note that the password length is less than 30 characters",
    "Identify that the valid signature can be obtained from the .env file",
    "Identify that the code is reading an HTTP header.",
    "Identify that the 'magic code' is present in the payload returned by the server",
    "Create a crafted 'id' parameter.",
    "Realize the endpoint changes to '$BACKEND/admin'.",
    "Analyze the browser cookies",
    "Analyze the browser cookies.",
    "Identify the transmission of positions to the client.",
    "Inspect the format of request packets.",
    "Analyze the format of response packets.",
    "Download the file named configs.zip.",
    "Make a GET request with a 'Range' HTTP header to exfiltrate the original /secret.html page.",
    "Input the URL 'https://poems.asisctf.com/books.php?type=excerpt&id=0%27%20union%20select%201%20%23' to further test for vulnerabilities.",
    "Recognized that SQLmap only displays one entry for 'id' of 1.",
    "Executed the URL.",
    "Ensure the chosen parameter is non-alphanumeric.",
    "Identify server directories",
    "Enumerate root directory",
    "Determine it is a hexadecimal representation",
    "Use hexadecimal content",
    "Use an editor",
    "Discovered two strange cookies: 'frequency' and 'transmissions'.",
    "Script retrieves cookies from the target page.",
    "Used the 'flag' value on the '/com/seaerch/' endpoint.",
    "View PHP source code",
    "Find the correct value for the cookie 'otadmin' (\"hash\": 389)",
    "Display the content of 'flag.txt' remotely using the identified class",
    "Download all the contents of the Git repository from the website.",
    "Checked and confirmed both strings had the same md5 hash.",
    "Retrieve the flag from the response page.",
    "Identify the ASCII representation within the encoded string",
    "Injected the crafted record to usurp the 'false' value in admin field.",
    "URL-encoded the payload.",
    "Perform SQL Injection to read all posts from 'posts'",
    "Identified an additional control which blocks SQL injection if password contains the number '1'.",
    "Use the newly crafted URL for the website response check.",
    "Look for any hidden or obscured data.",
    "Download the 'print-flag' file by accessing 'http://lowdeep.insomnihack.ch/print-flag'.",
    "Determined the user table and the number of columns that need to be unioned.",
    "Identified the 'user_id' column as requiring a foreign key from the user table.",
    "Combine the altered header, payload, and the generated signature.",
    "Exploit the vulnerability to display file content",
    "Connect to 'https://web0.ctfsecurinets.com/_profiler/open?file=config/bootstrap.php'.",
    "Replaced the current 'pack-names' file with the downloaded 'pack-names' file.",
    "Enter 'Stoney' for Mother's Maiden Name",
    "Enter 'St. Michael's' for First School Attended",
    "Enter 'Science' for Favorite Primary School Subject",
    "Enter 'Marathon' for Favorite Olympic Event",
    "Determine vulnerability to LFI",
    "Encode the compressed object to Base64",
    "Analyze the cookies.",
    "Obtain the text 'cat index.txt'.",
    "Analyze the JavaScript file.",
    "Find a 'secret' cookie.",
    "Construct a payload that uses the SQL LIKE clause.",
    "Craft a payload for XXE exploitation",
    "Executed an HTTP request using the constructed base.",
    "Decoded the base64 encoded flag from the cookies",
    "The encoded XMLHttpRequest sends the cookie to a specified server.",
    "Identify that it uses proxy_pass to forward requests.",
    "Use the personal domain for blind exfiltration of files.",
    "Utilized REST to discard png header from uploaded file",
    "Access unauthorized data or perform unauthorized actions.",
    "Use lesscss to evaluate CSS on the backend.",
    "Read arbitrary files with @import (inline) \"/etc/passwd\".",
    "Use 'JsonCookies' to create a json object",
    "Manipulated 'app.post('/upload' to process with invalid 'req.files[req.query.formid]'.",
    "Used 'Redirect 307' to read arbitrary files.",
    "Noted that the SQL query was sent to FD 4.",
    "Read the response from FD 4.",
    "The message hinted that the flag was already visible.",
    "Identify the need to steal the identifier",
    "Identify the need to use a valid identifier to steal the data",
    "Identify and retrieve the CTF flag from the page contents.",
    "Consider if manipulating this token structure could allow for unauthorized purchases from the 'flag store'.",
    "Note that 'name' is a short form of 'window.name' property",
    "Understand that the 'decrypt.php' file suggests the potential for an SQL injection via the UUID POST data.",
    "Obtained index.php source code from source code.",
    "Created a payload to leak cookies to the server.",
    "Explore the file /static/js/main.",
    "Received a JWT session token.",
    "Find hint suggesting input was not sanitized.",
    "Used sqlmap to brute force the password and obtain the token.",
    "Notice a graphql endpoint.",
    "Identify JavaScript variable storing user details.",
    "Untick the box to make the private gallery public.",
    "The XML payload was uploaded to the 'trial' tab of the web interface.",
    "Add a random timestamp to the POST request body to understand the format.",
    "Scour the page source and Javascript files to locate the token.",
    "Encode the script into base64.",
    "Examine the cookies in the HTTP request.",
    "Identified admin credentials and passcode from the accessed user database and passcode files.",
    "Realize that the input 'language' in the JWT token is used for reading the arbitrary files.",
    "Username and signup date were passed into the SQL query.",
    "No sanitization was applied.",
    "Base64-encoded the entire input.",
    "Identify the replacement of blacklisted characters.",
    "Identify the replacement of blacklisted commands.",
    "Design the payload to read the desired file.",
    "Sanitized HTML is added to document.body.innerHTML",
    "Understand the relationship between the endpoints and the user's ID cookie in the Notes map.",
    "The malicious code fetches an exploitative script.",
    "Identify the hostname as 'redis' and port as 6379.",
    "Remove '/_' in the URL's path.",
    "Send the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'.",
    "Exploited the directory traversal vulnerability to execute commands and retrieve the contents of the flagged file located at /secret/safe/flag.png",
    "Identify the input fields for the login function.",
    "Determine that the input fields for the login function are 'username' and 'password'.",
    "Decide to attempt SQL injection on the input fields.",
    "Assign the value 'true' to the cookie.",
    "Realize that the secret key is selected randomly from an array of cookie names.",
    "Obtain a new session cookie as output.",
    "Create and serialize an 'access_log' object",
    "Set the log_file of the 'access_log' object to '../flag'",
    "Base64 encoded the output of the PHP 'phpinfo()' function.",
    "Set the header value to the internal IP address observed from gallery.php.",
    "Determine that the source code is exposed",
    "Identify USER_ID.",
    "Identify FILENAME.",
    "Payload 3: Obtained readable cookies.",
    "Polluted 'data' in '__proto__.data' to load the JavaScript file.",
    "Polluted 'exports' in '__proto__.path' to load the JavaScript file.",
    "Write the port number used to a file to keep track.",
    "Identified that a 'secret' token is added to cookies in the request to the backend server.",
    "Performed zero-click exfiltration.",
    "Retrieved the flag from the `/api/flag` endpoint.",
    "Observe that the enumerated IDs correspond to the router's RAM.",
    "Make the JavaScript payload fetch localStorage.getItem('flag') and send it to the attacker's URL.",
    "Identify 'cat' command execution in GET request parameter 'f'.",
    "Craft attack payload using permitted characters.",
    "The response text contains the new 2FA token.",
    "Use the 'fetch' function to send the response text to an external URL.",
    "Utilize 'first' to get the first item of a list.",
    "Utilize 'last' to get the last item of a list.",
    "Included a dummy value as the request body.",
    "Observed reflection of the input into an XSL document.",
    "Realized the Content-Type was 'text/xsl'.",
    "Encoded the fetched cookies in base64.",
    "Sent the encoded cookies to a pre-defined URL controlled by the attacker.",
    "Identify attribute that can be polluted to spawn a new process or execute a command.",
    "Found API endpoint details in the downloaded files",
    "Identified the BeautifulSoup module being used to sanitize HTML.",
    "Identify the presence of 'news' string in the JavaScript code."
]