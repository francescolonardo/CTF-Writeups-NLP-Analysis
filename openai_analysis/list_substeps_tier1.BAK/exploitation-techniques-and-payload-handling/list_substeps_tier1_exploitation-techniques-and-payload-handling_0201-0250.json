[
    "Identified an additional control which blocks SQL injection if password contains the number '1'.",
    "Attempted to bypass password check using SQL injection.",
    "Crafted the SQL injection to directly pass 'flagman69' as the value for the username column using the 'UNION' clause.",
    "Implemented the newly crafted SQL injection on the authentication form.",
    "Pass payload as parameter",
    "Execute contents of another HTTP GET parameter",
    "Perfect payload",
    "Successful bypass of all server checks",
    "Find a way to bypass the remaining check.",
    "Try to exploit Shellshock.",
    "Inject commands via 'User-Agent' HTTP header using curl command.",
    "Confirm remote command execution vulnerability.",
    "Notice that the form allows execution of a ping command.",
    "Identify a vulnerability in the form.",
    "Realize the vulnerability allows command execution via shell.",
    "Inject the command '127.0.0.1; ls -al' into the IP address field.",
    "Identify the flag as 'INS{Wh1le_ld_k1nd_0f_forg0t_ab0ut_th3_x_fl4g}'.",
    "Include a script for a basic alert in the uploaded LaTeX document",
    "Use this as a proof-of-concept for XSS vulnerability",
    "Confirm vulnerability using the uploaded LaTeX document",
    "Inject the snippet (`EOC\n$eyes=`cat flag`;print '$eyes';`) through another HTTP POST request to /cow_designer.",
    "Identified a possible SQL injection vulnerability.",
    "Passed an arbitrary character(',') into the X-FORWARDED-FOR HTTP header.",
    "Passed a SQL command into the X-FORWARDED-FOR header.",
    "Realize possibility of shell insertion",
    "Exploit the remote command execution vulnerability",
    "Exploit the vulnerability to search for files",
    "Exploit the vulnerability to display file content",
    "Identify the SQL Injection vulnerability",
    "Craft a payload with a special SQL statement",
    "Test the vulnerability using the crafted payload",
    "Realize that the crafted payload successfully runs a SQL query",
    "Generate payloads with the SQL query to extract each character of the token",
    "Generate and test the payload",
    "Confirm the successful exposure of the /etc/passwd file.",
    "Identify code vulnerable to SQL injection in 'index.php'",
    "Create a malicious input for the username",
    "Determine vulnerability to LFI",
    "Exploit LFI vulnerability",
    "Exploit LFI vulnerability to execute the PHP command",
    "Notice the website contains only a login form that might be vulnerable to SQL injection",
    "Perform an SQL injection attack on the login form",
    "Note that the initial SQL injection tactic yielded access but not the password",
    "Exfiltrate all password characters via blind SQL injection",
    "Craft a malicious Java serialized object with a large 'value' to speed up the process",
    "Attempt a command injection via the cookie.",
    "Discover that the chat functionality was vulnerable to HTML tag injection.",
    "Craft an HTTP request.",
    "Target the chat endpoint.",
    "Insert an image reference with an 'onerror' attribute."
]