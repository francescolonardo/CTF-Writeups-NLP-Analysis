<h2>Angular of the Universe</h2>

<p>The challenge was about bypassing the Angular application that was set up behind Nginx reverse proxy. The challenge contained two flags:
- first was hidden in the angular endpoint <code>/debug/answer</code> restricted by the Nginx and the application
- second hidden in the express endpoint <code>/api/true-answer</code> which yielded results only for <code>127.0.0.1</code> IP addresses.</p>

<h3>Flag#1 /debug/answer (139 points, 39 solves)</h3>

<p>The goal was to access <code>/debug/answer</code> endpoint which was restricted in two ways:
* the nginx restricted access to <code>/debug*</code> via:
<code>conf
  location /debug {
    # IP address restriction.
    # TODO: add allowed IP addresses here
    allow 127.0.0.1;
    deny all;
  }
</code>
* the application was rejecting requests containg a <code>debug</code> word via:</p>

<p><code>js
    if (process.env.FLAG &amp;&amp; req.path.includes('debug')) {
      return res.status(500).send('debug page is disabled in production env')
    }
</code></p>

<p>I managed to score the first blood on this challenge via a simple request to <code>/\%64ebug/answer</code>. </p>

<p><code>sh
curl --path-as-is 'http://universe.chal.ctf.westerns.tokyo/\%64ebug/answer'
</code></p>

<p>This works because angular recognizes <code>\</code> as <code>/</code>, and %-decodes strings. Therefore it matched to <code>debug/answer</code>. </p>

<h4>TWCTF{ky0-wa-dare-n0-donna-yume-ni?kurukuru-mewkledreamy!}</h4>

<h3>Bonus - insane Path Traveral</h3>

<p>When playing with the challenge, I also found a super fancy way of solving the challenge for the second flag. </p>

<p><code>sh
curl 'http://universe.chal.ctf.westerns.tokyo' -H 'Host: \debug\answer'
</code></p>

<p>When Angular tries to match up the path, it parses the URL created from <code>PROTOCOL + HOST + PATH</code>. Because we injected <code>\debug\answer</code> as the host, the Angular parses <code>http://\debug\answer\</code> and retrieves the <code>path</code> as <code>/debug/answer</code>. This is an ultimately odd behavior! </p>

<p>The code responsible for this odd behavior can be found <a href="https://github.com/angular/universal/blob/v10.1.0/modules/express-engine/src/main.ts#L56-L57">here</a>.</p>

<p><code>js
 renderOptions.url =
      renderOptions.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`;
</code></p>
