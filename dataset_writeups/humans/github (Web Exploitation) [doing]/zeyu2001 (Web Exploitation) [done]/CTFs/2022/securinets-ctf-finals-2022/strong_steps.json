{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified that it was a Jinja2 Template Injection challenge"
            },
            {
                "StepNumber": 2,
                "StepString": "Understood the extensive filter used for the challenge"
            },
            {
                "StepNumber": 3,
                "StepString": "Worked on bypassing '{{' and '}}' by using an if-else statement"
            },
            {
                "StepNumber": 4,
                "StepString": "Found a workaround for using '.' by employing the 'attr' filter"
            },
            {
                "StepNumber": 5,
                "StepString": "Utilized 'first' and 'last' to get the first and last items of a list; Converted items in a dictionary to a list using 'list'"
            },
            {
                "StepNumber": 6,
                "StepString": "Bypassed '_', '\\', 'class', 'subclasses', 'getitem' by constructing a string"
            },
            {
                "StepNumber": 7,
                "StepString": "Used 'request.args' to bypass banned characters"
            },
            {
                "StepNumber": 8,
                "StepString": "Leveraged 'lower' filter to bypass 'class', 'subclasses', and 'getitem' strings"
            },
            {
                "StepNumber": 9,
                "StepString": "Joined the 'class' string with preceding and ending '__' characters using 'join' filter"
            },
            {
                "StepNumber": 10,
                "StepString": "Built Remote Code Execution (RCE) payload using '().__class__.__subclasses__.__getitem__(x)' method, with 'x' corresponding to the index of 'subprocess.Popen'"
            },
            {
                "StepNumber": 11,
                "StepString": "Bruteforced the value of 'x' by submitting RCE payload with different 'x' values until a shell was received"
            },
            {
                "StepNumber": 12,
                "StepString": "Used similar approach to bypass '.' character for callback domain and '\"' character for bash command"
            },
            {
                "StepNumber": 13,
                "StepString": "Created final payload using all the methods of bypassing and injecting discovered"
            },
            {
                "StepNumber": 14,
                "StepString": "Submitted the final payload to complete the challenge"
            }
        ]
    }
}