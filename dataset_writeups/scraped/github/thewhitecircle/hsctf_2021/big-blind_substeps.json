{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Given a login page that does not contain any JavaScript code",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Visit the login page."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Confirm that the login page does not contain any JavaScript code."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Found that a status 500 is received when an apostrophe is used in either the username or password field",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Enter an apostrophe in the username field."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Enter an apostrophe in the password field."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Observe that a status 500 is received."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Further observed that an error does not occur if an apostrophe is used in both fields",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Enter an apostrophe in both the username and password fields."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Confirm that no error occurs."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Tested an approach where the username field contained blank input enclosed in two apostrophes, and the password field contained a single apostrophe",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Enter blank input enclosed in two apostrophes in the username field."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Enter a single apostrophe in the password field."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Noticed an error in the above case, indicating the presence of an unclosed apostrophe",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Observe the occurrence of an error."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Determine that the error indicates the presence of an unclosed apostrophe."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Used the same approach as above, but filled both the username and password fields with blank input enclosed by two apostrophes, and found that there was no error",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Enter blank input enclosed in two apostrophes in both the username and password fields."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Confirm that no error occurs."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Confirmed the presence of blind SQL injection by using a payload of ' or sleep(2) and 1=1#",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Inject the payload ' or sleep(2) and 1=1#."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Confirm the presence of blind SQL injection."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Deducing it was MySQL due to the difference in syntax for other database systems",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Compare the syntax differences between the observed behavior and other database systems."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Deduce that it is MySQL."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Bruteforced the flag one character at a time using the SUBSTRING and SLEEP functions",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Bruteforce the flag character by character."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Use the SUBSTRING and SLEEP functions for each character."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Explained the function syntax. SUBSTRING requires three arguments: the string to check, the position to check, and the length to check. Used the IF function which also needs three arguments: the condition, the action if true, and the action if false",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Explain the syntax and usage of the SUBSTRING function."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Explain the syntax and usage of the IF function."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Automated the process using a Python script that sends a post request with the payload for every possible character in the flag. Whenever a correct character is found (indicated by a read timeout due to the 5 seconds delay), the character is appended to the flag and the script moves to the next character",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Create a Python script to automate the process."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Send a post request with the payload for every possible character in the flag."
                    },
                    {
                        "SubstepNumber": 11.3,
                        "SubstepString": "If a correct character is found (indicated by a read timeout), append the character to the flag and move to the next character."
                    }
                ]
            }
        ]
    }
}