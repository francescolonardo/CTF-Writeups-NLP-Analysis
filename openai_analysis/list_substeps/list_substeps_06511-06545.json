[
    "Consider setting up a personal DNS server for a more reliable solution.",
    "Identify the specific JavaScript file",
    "Determine that the website is running on a MySQL database.",
    "Executed the cURL command",
    "Created a base64 encoded string.",
    "Pass the malicious note_id from the previous step",
    "Learn about special characters usable in regex from the documentation.",
    "Identify the need to overwrite the <userID>_isAdmin value.",
    "Study the registration and login process.",
    "Access the obfuscated code at http://challenges.auctf.com:30022/authentication.js.",
    "Signed up on the website.",
    "Saw that the Markdown was parsed using 'marked' and 'DOMPurify'.",
    "Use curl command",
    "Run commands and increase the command output slice index until the result was empty.",
    "Inspect 'challenge/helpers/CardHelper.js' file for SSTI vulnerability.",
    "Narrow down the solutions by progressing through succeeding elements of 'prev_encoded_arr[]'.",
    "Set the <userID>_isAdmin value to 'yes'.",
    "Find the blog post page '?p=1'.",
    "Determine the required fake address.",
    "Modify the previous code",
    "Manipulate the intercepted data using burpsuite.",
    "Add comments to comment out the rest of the query",
    "Observe availability of admin button.",
    "Create another Perl code snippet.",
    "Recognize the existence of a `$query` attribute in the `SQL` class utilized for creating a prepared statement.",
    "Unserialize the phar file.",
    "Identify the hardcoded username.",
    "Analyze the provided PCAP file",
    "Discover that the guest sign in portal is not implemented",
    "Formulated a strategy to provide a custom host.",
    "Hypothesized that the login page might be filtering requests by the user's IP address.",
    "Configure the SQL injection to return all rows in the database.",
    "Use the Python script to discover the token",
    "Accessed '/q' endpoint.",
    "Extracted the flag from the identified table."
]