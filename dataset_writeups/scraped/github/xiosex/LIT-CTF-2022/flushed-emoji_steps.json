{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identifies a Server-Side Template Injection (SSTI) vulnerability in the password field within the code."
            },
            {
                "StepNumber": 2,
                "StepString": "Tests the SSTI vulnerability by inputting a mathematical operation as the payload into the password field making the server return the result of the operation."
            },
            {
                "StepNumber": 3,
                "StepString": "Identifies a SQL injection vulnerability in the 'data-server' project."
            },
            {
                "StepNumber": 4,
                "StepString": "Executes commands using the SSTI vulnerability to read directory contents."
            },
            {
                "StepNumber": 5,
                "StepString": "Takes note of the directory contents returned by the server."
            },
            {
                "StepNumber": 6,
                "StepString": "Identifies an inaccessible server that is hosting data-server."
            },
            {
                "StepNumber": 7,
                "StepString": "Plans to send requests containing SQL to the server."
            },
            {
                "StepNumber": 8,
                "StepString": "Writes a python script in which an SQL payload is sent to the inaccessible server by using SSTI to force the execution of the payload."
            },
            {
                "StepNumber": 9,
                "StepString": "Loops through a list of characters, appending each character to an initial flag string. In each loop, a script is created and encoded into base64. This script is sent as an SSTI payload."
            },
            {
                "StepNumber": 10,
                "StepString": "Sends the payload via POST request and check if 'True' is in the response. If 'True' is present, the flag string character is an actual flag character; that character is then appended to the flag."
            },
            {
                "StepNumber": 11,
                "StepString": "Notes that due to the server filtering the character '.', the script is encoded into base64 to bypass this filtering."
            },
            {
                "StepNumber": 12,
                "StepString": "Notes that because the server does not have CURL, a python script is used to send requests."
            }
        ]
    }
}