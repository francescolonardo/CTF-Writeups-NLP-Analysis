{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the given server.py file to understand the workflow of the Flask web server.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Analyze the contents of the 'server.py' file."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Understand the workflow of the Flask web server."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Identify a potential vulnerability in the 'query_login_attempt' function.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Review the code of the 'query_login_attempt' function."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identify a potential vulnerability within the function."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Use an empty username and arbitrary password to exploit the vulnerability and log in to the system.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Enter an empty username and arbitrary password."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Exploit the vulnerability in the 'query_login_attempt' function."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Successfully log in to the system."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Identify a second vulnerability in 'query_kill_time', which is a SQL Injection. However, there is a WAF 'Skynet' filtering the requests.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Inspect the code of the 'query_kill_time' function."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Identify a SQL Injection vulnerability within the function."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Observe the presence of a WAF named 'Skynet' that filters requests."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Encode the SQL injection payload into 'multipart/form-data', thereby bypassing WAF 'Skynet'.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Create an SQL injection payload."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Encode the payload into 'multipart/form-data'."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Use the encoded payload to bypass the WAF 'Skynet'."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Execute SQL injection to manipulate the query and fetch data using union operation.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Execute the SQL injection payload created in the previous step."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Manipulate the query using the union operation."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Fetch data using the manipulated query."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Discover the flag in the 'target_credentials' database, under the 'secret_key' column, which is 'rwctf{t0-h4ck-$kynet-0r-f1ask_that-Is-th3-questi0n}'.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Access the 'target_credentials' database."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Identify the 'secret_key' column within the database."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Discover the flag 'rwctf{t0-h4ck-$kynet-0r-f1ask_that-Is-th3-questi0n}' in the 'secret_key' column of the database."
                    }
                ]
            }
        ]
    }
}