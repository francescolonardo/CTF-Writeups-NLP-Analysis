{
    "Exploits and Payloads": [
        "Used a recent exploit.",
        "Wrote the final payload.",
        "Incorporated the PHP 'disable_functions' bypass exploit.",
        "Confirmed successful RCE exploited to get the flag.",
        "Executed a GET request `GET /cgi-bin/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/flag.txt HTTP/1.1` to exploit this vulnerability.",
        "Crafted an XSS payload to get the cookies of the admins",
        "Sent this XSS payload through the data endpoint",
        "Crafted an SQL injection payload bypassing the filter limit",
        "Used the SQL injection payload to retrieve the flag",
        "Utilized SQLMap.",
        "Utilized SQLMap targeting 'login.php' page.",
        "Exploited the secondary SQL injection vector.",
        "Construct a JavaScript payload to be run on the victim's browser.",
        "Realized that this allows the cache probing attack to succeed.",
        "Launched the attack script on the new GitHub Pages site.",
        "Attempt to upload a file.",
        "Choose a .php file for upload.",
        "Intend to run arbitrary PHP code.",
        "Upload a PHP webshell.",
        "Acquire the flag.",
        "Used a redirection through a PHP server, which revealed the flag in one of the headers.",
        "Plan to execute a reverse shell payload.",
        "Craft a reverse shell payload using 'nodejsshell.py'.",
        "Read the flag using the established reverse shell.",
        "Identified the prototype pollution vulnerability.",
        "Identified how to leverage the prototype pollution.",
        "Defined final payload using 'wget' and command substitution.",
        "Exfiltrated the '/readflag' output using the defined payload.",
        "Sent the payload to the HTTP server.",
        "Use the gained reverse shell.",
        "Understand that gaining a shell inside the docker container could provide more privileges."
    ],
    "SQL Injection": [
        "Attempted various inputs.",
        "Encountered a blacklist filter preventing certain inputs.",
        "Found out the intended solution involves bypassing the cache partitioning."
    ],
    "Web Application Analysis": [
        "Used Burp Suite Intruder scan.",
        "Attempted to use ' in the username parameter.",
        "Searched for additional SQL injection endpoints.",
        "Fuzzed the input values.",
        "Identified a second SQL injection endpoint."
    ],
    "Server-side Request Forgery (SSRF)": [
        "Identified behavior: if SSRF is detected, a specific message is returned.",
        "Found a way to bypass the localhost blacklist by using an alternative representation of '127.0.0.1', like '0177.0.0.1'.",
        "Initial attempts to supply URLs were futile.",
        "Verified this by submitting HTML enclosed in script tags to catch the HTTP request.",
        "Understand that this vulnerability could lead to Remote Code Execution (RCE)."
    ]
}