{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Connected to the website and observed it has directory listing active"
            },
            {
                "StepNumber": 2,
                "StepString": "Identified two files 'login.php' and 'login.php.bak' listed"
            },
            {
                "StepNumber": 3,
                "StepString": "Observed that the first page displayed the message 'Not authenticated'"
            },
            {
                "StepNumber": 4,
                "StepString": "Used 'login.php.bak' to view PHP source code"
            },
            {
                "StepNumber": 5,
                "StepString": "Discovered that a cookie named 'otadmin' must be passed, which must follow the regex format /^{\"hash\": [0-9A-Z\"]+}$/"
            },
            {
                "StepNumber": 6,
                "StepString": "Crafted a correct value for the cookie: {\"hash\": \"T35T\"}"
            },
            {
                "StepNumber": 7,
                "StepString": "Examined the script and found that a hint was given if cookie value did not match MD5 hash of '$cfg_pass' variable"
            },
            {
                "StepNumber": 8,
                "StepString": "Used crafted cookie value to print the hint, and then analysed the hint"
            },
            {
                "StepNumber": 9,
                "StepString": "Realised that the issue may lie in a type juggling scenario in the comparison: $session_data['hash'] != strtoupper(MD5($cfg_pass))"
            },
            {
                "StepNumber": 10,
                "StepString": "Decided to exploit this point by making an educated guess on the numbers at the beginning of the MD5 string"
            },
            {
                "StepNumber": 11,
                "StepString": "Created a Python script to automate the trial and error process to exploit this type juggling loophole"
            },
            {
                "StepNumber": 12,
                "StepString": "Executed the Python script and found the correct value for the cookie 'otadmin' to be {\"hash\": 389}"
            },
            {
                "StepNumber": 13,
                "StepString": "Used the discovered cookie to reveal the flag: p4{wtf_php_comparisons_how_do_they_work}"
            }
        ]
    }
}