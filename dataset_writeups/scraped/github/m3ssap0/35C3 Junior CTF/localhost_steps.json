{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyzing the provided Python server script 'http://35.207.189.79/pyserver/server.py'."
            },
            {
                "StepNumber": 2,
                "StepString": "Identifying two significant functions: The first function sets specific server response headers if the request comes from '127.0.0.1', and the second function is used to proxy images."
            },
            {
                "StepNumber": 3,
                "StepString": "Identifying the server's functioning port and host from the Python script's main execution function."
            },
            {
                "StepNumber": 4,
                "StepString": "Noting that an image is necessary to exploit the service because the 'Content-Type' is strictly checked and some extensions, namely, '.jpg', '.png', and '.gif', are blacklisted in the header-setting function."
            },
            {
                "StepNumber": 5,
                "StepString": "Selecting an image: 'img/paperbots.svg' provided by the server that can be used for exploiting the service."
            },
            {
                "StepNumber": 6,
                "StepString": "Making a GET request to 'http://35.207.189.79/api/proxyimage?url=http://127.0.0.1:8075/img/paperbots.svg' to trick the server into thinking that the request is coming from the same host."
            },
            {
                "StepNumber": 7,
                "StepString": "Receiving the server's response which includes the flag in the 'X-Localhost-Token' header."
            }
        ]
    }
}