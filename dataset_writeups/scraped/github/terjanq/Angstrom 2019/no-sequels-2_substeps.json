{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify that the task is similar to the previous one but requires blind NoSQL injection",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify that the task is similar to the previous one."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Recognize that blind NoSQL injection is required."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Understand that the goal is to fetch all of the password's characters",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Understand that the goal is to fetch all of the password's characters."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Begin by using the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"a\"}} which returns 'true'",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Begin using the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"a\"}}"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Observe that the payload returns 'true'."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Then try the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"z\"}}, which returns 'false'",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Try the payload: {\"username\": \"admin\", \"password\": {\"$gt\": \"z\"}}"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Observe that the payload returns 'false'."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "From this, infer that fetching passwords is possible by comparing password characters to the alphabet in the payload",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Infer that fetching passwords is possible by comparing password characters to the alphabet in the payload."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Perform a bruteforce attack by comparing all characters in a possible range",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Perform a bruteforce attack."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Compare all characters in a possible range."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Find that the password is 'congratsyouwin' via the bruteforcing method",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Find that the password is 'congratsyouwin' via the bruteforcing method."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Use the retrieved password to get the flag: actf{still_no_sql_in_the_sequel}",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Use the retrieved password to get the flag: actf{still_no_sql_in_the_sequel}."
                    }
                ]
            }
        ]
    }
}