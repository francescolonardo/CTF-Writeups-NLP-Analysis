{
    "Geolocation and Proximity": [
        "Counted the number of cameras within the specified distance using the haversine formula"
    ],
    "Webpage Navigation and URLs": [
        "The iframe source is /demo",
        "Navigate to the '/example' route."
    ],
    "API Requests and Endpoints": [
        "Data is POST-ed to the /api/filter endpoint",
        "Sensitive, user-specific data could be read if /api/filter endpoint returns based on these cookies",
        "Received the /api/flag contents",
        "Identify the request parameters of the /find endpoint: condition, startsWith, endsWith, and debug."
    ],
    "Flag Handling and Extraction": [
        "Retrieve the flag.",
        "Extract the flag from the response received on the callback URL.",
        "Explore the file system to find the flag 'MetaCTF{wh4t??lfi_1s_ev0lv1ng??}'.",
        "Identified the additional table holding the flag.",
        "Extracted the flag from the identified table.",
        "Obtained the flag from 'private.php'.",
        "Located the flag at `/users/employee/files/fileadmin`.",
        "Downloaded the flag.",
        "Send a request to read the content of the `flag.txt` file."
    ],
    "Cryptography and Encoding": [
        "Serialize the created object and encode it in base64 format.",
        "Reconstruct the user data from the encoded string."
    ],
    "File System Manipulation": [
        "View files using the 'file://' protocol.",
        "Use a POST request to request 'file:///code/app.py'.",
        "Recognized the requirement of having write access to a file on the server.",
        "Noted the appending of an entry to a log file.",
        "Noticed the presence of file upload capability.",
        "Noticed the absence of legitimate ownership verification during file retrieval.",
        "Scanned each discovered username for potential files associated with them.",
        "Extract the count of PDF pages from the merged PDF file.",
        "Extract the count of PDF pages from the initial PDF files.",
        "Identify the list of references to the PDF pages in the merged PDF file."
    ],
    "Web Application Security": [
        "Recognize that a Redis database was being utilized.",
        "Check if the value of <userID>_isAdmin key in Redis database is 'yes'.",
        "Set the <userID>_isAdmin value to 'yes'.",
        "Identify the predictable storage location of PHP sessions as '/tmp/sess_<PHPSESSID>'.",
        "Recognized the platform as SQLite database.",
        "Retrieved table names.",
        "Confirmed the existence of an additional table.",
        "Noticed the entry in the log file containing the cookies and value of 'X-Access' header.",
        "Assume that the input fields are not properly sanitizing special characters.",
        "Assign the value 'true' to the cookie."
    ],
    "User Account Manipulation": [
        "Examine the registration fields",
        "Identify the 'account' object",
        "Identify the 'username' and 'password' attributes",
        "Change the 'account[role]' attribute to 'admin'"
    ],
    "Web Vulnerabilities and Exploits": [
        "Specify 'http://localhost:20011/admin' as the value for the 'galleryUrl' parameter.",
        "Uploaded the .php16 file."
    ],
    "Data Retrieval and Analysis": [
        "Analyze the data being displayed",
        "Identified the platform as SQLite database.",
        "Read and store the content of the merged PDF file.",
        "Read and store the content of the initial PDF files.",
        "Look for a value for 'confidential_documents'.",
        "Search for `flag.txt` in the root directory.",
        "Create 'first.pdf' using the chosen input PDF.",
        "Create 'second.pdf' using the chosen input PDF."
    ]
}