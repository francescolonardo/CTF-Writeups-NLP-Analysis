[
    "Investigate the HTML code of the website and identify fields that need to be extracted",
    "Write a Python script to automate the extraction of hidden fields from the website's HTML",
    "Create a function 'get_hidden' in the Python script that takes a URL as an argument, sends a GET request, extracts the response text (HTML), and uses regular expressions to find specific fields",
    "Create a function 'get_passwords' that generates all possible combinations of YYYYMM from the years 1900 to 2019 and months from 1 to 13",
    "Use the functions 'get_hidden' and 'get_passwords' in a brute-force attack to find the correct password for the username 'jack'",
    "Log in to the website using the username 'jack' and the discovered password",
    "Inspect the functionality of the website, noting that it includes the ability to upload photos and the showcasing of uploaded photos",
    "Examine the URLs associated with different users and photos",
    "Notice a 'session_id' stored in a cookie, which is an MD5 hash that can be cracked",
    "Experiment with the session_id by changing the hashed value to correspond to different usernames",
    "Change the hashed value in the session_id cookie to correspond to the username 'admin'",
    "Try to load a webpage associated with the 'admin' user",
    "When faced with a security check, attempt to bypass it by loading image URLs directly",
    "Discover the security question answer from one of the images",
    "Use the discovered security question answer to bypass the security check and log in as the 'admin' user"
]