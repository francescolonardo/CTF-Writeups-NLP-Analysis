{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "First, trying to inject a random '<h1>Hello</h1>' tag to check for HTML input acceptance"
            },
            {
                "StepNumber": 2,
                "StepString": "Looking at the JavaScript file in the webpage found that the content is retrieved from the URL in base64 format and HTML tags are not allowed"
            },
            {
                "StepNumber": 3,
                "StepString": "Devising a payload that can bypass the bracket-based sanitization by adding an extra '>' in the start. This exploits the arbitrary JavaScript execution via a broken image tag's onerror handler"
            },
            {
                "StepNumber": 4,
                "StepString": "Encoding the payload in base64 and adding it to the URL"
            },
            {
                "StepNumber": 5,
                "StepString": "Setting up a netcat listener on a local server to capture incoming connections"
            },
            {
                "StepNumber": 6,
                "StepString": "Submitting the crafted URL to the Admin Bot, which visits the URL causing the XSS payload to execute"
            },
            {
                "StepNumber": 7,
                "StepString": "Capturing the Admin Bot's cookies sent by the executed payload to the netcat listener"
            },
            {
                "StepNumber": 8,
                "StepString": "Extracting the flag from the Admin Bot's cookies"
            }
        ]
    }
}