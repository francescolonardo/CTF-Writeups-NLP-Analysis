[
    "Investigate the source code provided to understand how the application works and what you need to exploit. Find that the '/display' page checks the session cookie which has a `very_auth` session variable which needs to be set to `admin`.",
    "Discover that the Flask session secret key is hardcoded into the source code, selected randomly from an array of cookie names.",
    "Decode the Flask session cookie by extracting the text before the period (.), adding padding, and applying Base64 decoding.",
    "Notice that the remainder of the session cookie is a signature that will be checked server-side to prevent tampering.",
    "Realize that the secret key needs to be cracked. To do this, write a script that bruteforces each of the hardcoded cookie names to find the one that matches the signature.",
    "After running the script, find the secret key is 'butter'.",
    "With the secret key, craft a new session cookie with the `very_auth` variable set to 'admin'. Use hashlib, URLSafeTimedSerializer and TimestampSigner in Python to achieve this.",
    "After encoding the session, obtain a new session cookie as output.",
    "Place this newly crafted cookie back into the application using Burpsuite and observe that you now get the flag in the response."
]