{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify that the first obstacle is HTTP request smuggling between ATS and Puma",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify HTTP request smuggling as the first obstacle."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identify ATS and Puma as the systems involved in the smuggling."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Recognize that ATS interprets \\\"chunked\\\" as chunked and Puma ignores invalid / unsupported Transfer-Encoding (TE) values",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Recognize ATS interpreting \\\"chunked\\\" as chunked."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Recognize Puma ignoring invalid / unsupported TE values."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Craft a request to smuggle a request to /admin in flagportal to perform an Server Side Request Forgery (SSRF)",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Craft a request to smuggle a request to /admin in flagportal."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Perform a Server Side Request Forgery (SSRF) with the smuggled request."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Host own server to capture the request, including the Admin-Key",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Host a server to capture the request."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Capture the request, including the Admin-Key."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Decode the field First-Flag to extract the first flag",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Decode the field First-Flag."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Extract the first flag from the decoded field."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Understand that the above request smuggling method won't allow capturing the second response from Puma",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Understand that the previous request smuggling method will not capture the second response from Puma."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Find out that the second obstacle is HTTP request smuggling between ATS and Waitress",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Find out that the second obstacle is HTTP request smuggling."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Identify ATS and Waitress as the systems involved in the smuggling."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Understand that ATS processes LF as line endings (instead of CRLF), while Waitress allows LF in chunked extensions",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Understand that ATS processes LF as line endings."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Understand that Waitress allows LF in chunked extensions."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Craft a request with LF in chunk extension",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Craft a request with LF in chunk extension."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Note how ATS processes the LF as the end-of-line, leading to the second request be encapsulated in the chunked content of the first request",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Note how ATS processes the LF as the end-of-line."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Note how the second request is encapsulated in the chunked content of the first request."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Waitress sees both received requests",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Confirm that Waitress sees both received requests."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Run 'python3 payload.py | nc localhost 8000' to capture the request",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Run the command 'python3 payload.py | nc localhost 8000'."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Capture the request."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "From receiving server, decode the field flag to extract the second flag",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Decode the field flag from the receiving server."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Extract the second flag from the decoded field."
                    }
                ]
            },
            {
                "StepNumber": 14,
                "StepString": "Understand that both Request smuggling vulnerabilities were discovered during previous research on ATS, Puma and Waitress by the challenge provider and other researchers",
                "Substeps": [
                    {
                        "SubstepNumber": 14.1,
                        "SubstepString": "Understand that the Request smuggling vulnerabilities were discovered during previous research."
                    }
                ]
            }
        ]
    }
}