{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Access the provided URL"
            },
            {
                "StepNumber": 2,
                "StepString": "Download and review the robots.txt file"
            },
            {
                "StepNumber": 3,
                "StepString": "Attempt to navigate to /admin.phps, gets a 'Not Found' error"
            },
            {
                "StepNumber": 4,
                "StepString": "Instead, navigate to /index.phps to reveal source code for index.php"
            },
            {
                "StepNumber": 5,
                "StepString": "Find a reference to another page, authentication.php, in the index.php code"
            },
            {
                "StepNumber": 6,
                "StepString": "View the source code of authentication.php by navigating to /authentication.phps"
            },
            {
                "StepNumber": 7,
                "StepString": "Reveal a 'require_once()' function call, which includes the cookie.php file"
            },
            {
                "StepNumber": 8,
                "StepString": "View the source code of cookie.php"
            },
            {
                "StepNumber": 9,
                "StepString": "Identify a potential PHP deserialization vulnerability in cookie.php, where $_COOKIE['login'] is deserialized"
            },
            {
                "StepNumber": 10,
                "StepString": "Find the 'access_log' class in authentication.php, which has a '__toString()' function that can return the contents of a file"
            },
            {
                "StepNumber": 11,
                "StepString": "Understand that crafting and serializing a custom 'access_log' object with the log_file set to '../flag' can potentially retrieve the flag due to the deserialization of the 'login' cookie"
            },
            {
                "StepNumber": 12,
                "StepString": "Construct a custom PHP script to create and serialize an 'access_log' object with the log_file set to '../flag', then encode this serialized object with base64"
            },
            {
                "StepNumber": 13,
                "StepString": "Decide to add the base64-encoded serialized object as a 'login' cookie in the browser, and navigate to /authentication.php, as that's where the needed 'access_log' class is defined"
            },
            {
                "StepNumber": 14,
                "StepString": "Understand that the added cookie will be deserialized into an 'access_log' object and assigned to the $perm variable upon a request to 'authentication.php', which will inevitably fail and trigger the catch block where the flag is inadvertently printed due to the '__toString()' method of the 'access_log' class"
            },
            {
                "StepNumber": 15,
                "StepString": "Observe that the flag is revealed on the browser"
            }
        ]
    }
}