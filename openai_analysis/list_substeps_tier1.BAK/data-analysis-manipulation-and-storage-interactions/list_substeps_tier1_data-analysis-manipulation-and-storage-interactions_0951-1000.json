[
    "Verify if 'length' query parameter is a string of length 0.",
    "Fetch the flag using 'innerHTML'.",
    "Visited '/?file=/etc/passwd'.",
    "Used 'php://filter' to view the source of 'checkpass.php'.",
    "Decoded base64 strings to view the source code of 'wc.php'.",
    "Decoded the password hash.",
    "Observe that it leads to a list of admin usernames.",
    "Pass ['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js'] as an array via the GET parameter",
    "Identify the cookie related to flavor",
    "Replace the existing flavor value in the cookie with 'chocolate'",
    "Replace the original cookie with the new base64 encoded 'chocolate' cookie on the website",
    "Analyze the secure portal page source",
    "Understand that the password was split into various parts",
    "Identify the hidden field 'password'",
    "Extract the first character of the password",
    "Extract the admin cookie 'password'",
    "Select any one of the identified hashes.",
    "Discovered that the python pickle can be prepended with '!'",
    "Understand that the interaction with the filename being uploaded is the potential vulnerability for RCE.",
    "Intend to inject a 'grep' command to look for the flag in the main.py file.",
    "Verify if all 5 captchas are collected",
    "Found a response header",
    "Set the new flag value as the cookie",
    "The key for the key-value pair is retrieved from the 'key' variable.",
    "Submitted the payload 'csrf&username=michelle&password[username]=michelle'",
    "Search for a string formatted as 'flag{...}' in the HTML source code.",
    "Retrieve the flag from the response received after visiting the '/api/flag' endpoint.",
    "Bypass the bracket-based sanitization by adding an extra '>' in the start.",
    "Notice the website allows HTML input.",
    "Receive and log the cookie transferred as a query parameter.",
    "Modify the SQL command using the pattern 'SELECT id FROM users WHERE password = '' or 1=1;--' and username set as '123'.",
    "Execute the query '123' UNION SELECT flag, null, null from more_table;--'.",
    "Observe the information revealed about the file structure.",
    "Found a snippet of JavaScript code containing database credentials and a 'JSESSIONID' cookie.",
    "Understood that the function decodes a user's cookie",
    "Identify the presence of a 'username' attribute in the requests.",
    "Observe that the path '/' lists information including server source code.",
    "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
    "Noticed the 'sanitize' function removes spaces from input.",
    "Inspect 'challenge/routes/index.js' file for SSTI vulnerability.",
    "Inspect 'challenge/helpers/CardHelper.js' file for SSTI vulnerability.",
    "Verify that the `database.sql` file contains password hashes for a manager and admin user.",
    "Review the source code in `database.sql` file again.",
    "Identify the `/api/toylist` endpoint and its behaviour.",
    "Examine the 'challenge/routes/index.js' file. We find an '/api/submit' endpoint which the frontend sends user data.",
    "Inject a SQL query into the barcode generation process.",
    "Access the website's file upload functionality.",
    "Inspect the returned results after uploading the barcode.",
    "Craft a payload to return the content of /flag/flag.txt.",
    "Analyze the process in the script: making a cURL request, hashing the results with MD5, and setting the 'auth' cookie to the value of 'FLAG_AUTH' from secrets"
]