{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analysed PHP code and identified it will execute 'cat' command when specified in the GET request parameter 'f'.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Analyse PHP code."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Identify 'cat' command execution in GET request parameter 'f'."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Understood that a regex filter restricts characters that can be included in the 'f' parameter.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Understand regex filter on 'f' parameter."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Listed out permitted characters to craft an effective attack payload.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "List permitted characters."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Craft attack payload using permitted characters."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Bypassed character filter using wildcard '?' to match any single character in command arguments.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Bypass character filter."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Use wildcard '?' to match any single character."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Used wildcard '?' to access '/etc/hosts' file.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Access '/etc/hosts' file."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Read an interesting binary '/readflag' using 'cat' command.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Read binary '/readflag'."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Downloaded and decompiled the found binary.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Download binary."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Decompile binary."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "In the decompiled code, identified a string 'sRPd45w_0' which is a rearrangement of 'P4s5_w0Rd'.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Identify string 'sRPd45w_0' in decompiled code."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Recognize rearrangement as 'P4s5_w0Rd'."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Understood that pipe character '|' is allowed, thus utilizing it to terminate the 'cat' command and run new command.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Understand permission of pipe character '|'."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Terminate 'cat' command with '|'."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Execute new command."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Used character substitution '$()' to get the required strings for password.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Use character substitution '$()'."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Retrieve required strings for password."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Executed '/usr/bin/strings /readflag' to read strings from the binary without actually running it.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Execute '/usr/bin/strings /readflag' command."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Read strings from the binary."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Filtered output to get only the relevant 'P4s5_w0Rd' string using '/etc/alternatives/nawk'.",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Filter output using '/etc/alternatives/nawk'."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Retrieve only 'P4s5_w0Rd' string."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "Constructed a regex pattern to extract only the string 'P4s5_w0Rd'.",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Construct regex pattern."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Extract 'P4s5_w0Rd' string using regex pattern."
                    }
                ]
            },
            {
                "StepNumber": 14,
                "StepString": "Passed the obtained string as an argument to '/readflag' using character substitution, which resulted in 'Wrong Password!' message.",
                "Substeps": [
                    {
                        "SubstepNumber": 14.1,
                        "SubstepString": "Pass obtained string as argument to '/readflag'."
                    },
                    {
                        "SubstepNumber": 14.2,
                        "SubstepString": "Use character substitution to pass argument."
                    },
                    {
                        "SubstepNumber": 14.3,
                        "SubstepString": "Result in 'Wrong Password!' message."
                    }
                ]
            },
            {
                "StepNumber": 15,
                "StepString": "Identified the need to rearrange 'P4s5_w0Rd' into 'sRPd45w_0' to get the correct password.",
                "Substeps": [
                    {
                        "SubstepNumber": 15.1,
                        "SubstepString": "Recognize the need to rearrange password."
                    },
                    {
                        "SubstepNumber": 15.2,
                        "SubstepString": "Recognize correct rearrangement as 'sRPd45w_0'."
                    }
                ]
            },
            {
                "StepNumber": 16,
                "StepString": "Developed a script which aims to index the characters in 'P4s5_w0Rd' string and reconstructs it into 'sRPd45w_0'.",
                "Substeps": [
                    {
                        "SubstepNumber": 16.1,
                        "SubstepString": "Develop script for indexing and reconstucting."
                    },
                    {
                        "SubstepNumber": 16.2,
                        "SubstepString": "Index characters of 'P4s5_w0Rd' string."
                    },
                    {
                        "SubstepNumber": 16.3,
                        "SubstepString": "Reconstruct into 'sRPd45w_0' string."
                    }
                ]
            },
            {
                "StepNumber": 17,
                "StepString": "Ran the script and yielded the payload to rearrange password.",
                "Substeps": [
                    {
                        "SubstepNumber": 17.1,
                        "SubstepString": "Run script."
                    },
                    {
                        "SubstepNumber": 17.2,
                        "SubstepString": "Generate payload for rearranging password."
                    }
                ]
            },
            {
                "StepNumber": 18,
                "StepString": "Appended the obtained payload to '/readflag' command in the 'f' GET parameter to finally get the flag 'grey{r35p3c7_70_b45h_m4573r_0dd14e9bc3172d16}'.",
                "Substeps": [
                    {
                        "SubstepNumber": 18.1,
                        "SubstepString": "Append payload to '/readflag' command in 'f' GET parameter."
                    },
                    {
                        "SubstepNumber": 18.2,
                        "SubstepString": "Obtain flag."
                    }
                ]
            }
        ]
    }
}