{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Connect to the given URL to view the source code."
            },
            {
                "StepNumber": 2,
                "StepString": "Examine the source code to find an 'eval' syntax used on 'warmup' GET parameter, which is strictly checked for."
            },
            {
                "StepNumber": 3,
                "StepString": "Research methods of bypassing this kind of checks due to restrictive checks."
            },
            {
                "StepNumber": 4,
                "StepString": "Strategy to attack endpoint determined: read another HTTP GET parameter (non-alphanumeric)."
            },
            {
                "StepNumber": 5,
                "StepString": "Implement knowledge from research to craft a payload that will bypass the checks using bitwise XOR operation in PHP."
            },
            {
                "StepNumber": 6,
                "StepString": "Construct payload so that it will command execution of the content of another GET parameter."
            },
            {
                "StepNumber": 7,
                "StepString": "Test if the payload using 'phpinfo' page is operational."
            },
            {
                "StepNumber": 8,
                "StepString": "Complete the payload to visualize and read contents of 'flag.php'."
            },
            {
                "StepNumber": 9,
                "StepString": "Break down the payload: First part constructs a string representation; second part is used to perform 'file_get_contents('flag.php'); final part is used to perform variable dump (var_dump($_0))."
            },
            {
                "StepNumber": 10,
                "StepString": "The flag was output as a result of executing the attack."
            }
        ]
    }
}