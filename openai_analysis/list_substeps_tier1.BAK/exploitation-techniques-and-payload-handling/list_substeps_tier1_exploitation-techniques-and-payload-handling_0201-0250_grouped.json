{
    "SQL Injection": [
        "Identified an additional control which blocks SQL injection if password contains the number '1'.",
        "Attempted to bypass password check using SQL injection.",
        "Crafted the SQL injection to directly pass 'flagman69' as the value for the username column using the 'UNION' clause.",
        "Implemented the newly crafted SQL injection on the authentication form.",
        "Find a way to bypass the remaining check.",
        "Identified a possible SQL injection vulnerability.",
        "Passed a SQL command into the X-FORWARDED-FOR header.",
        "Identify the SQL Injection vulnerability",
        "Craft a payload with a special SQL statement",
        "Test the vulnerability using the crafted payload",
        "Realize that the crafted payload successfully runs a SQL query",
        "Generate payloads with the SQL query to extract each character of the token",
        "Generate and test the payload"
    ],
    "Command Injection/Remote Code Execution": [
        "Pass payload as parameter",
        "Execute contents of another HTTP GET parameter",
        "Perfect payload",
        "Successful bypass of all server checks",
        "Try to exploit Shellshock.",
        "Inject commands via 'User-Agent' HTTP header using curl command.",
        "Confirm remote command execution vulnerability.",
        "Exploit the remote command execution vulnerability",
        "Exploit the vulnerability to search for files",
        "Exploit the vulnerability to display file content",
        "Realize possibility of shell insertion",
        "Exploit LFI vulnerability",
        "Exploit LFI vulnerability to execute the PHP command",
        "Attempt a command injection via the cookie."
    ],
    "File System Manipulation": [
        "Discover that the chat functionality was vulnerable to HTML tag injection.",
        "Craft an HTTP request.",
        "Target the chat endpoint.",
        "Insert an image reference with an 'onerror' attribute.",
        "Craft the injection payload to execute the 'cat /etc/passwd' command."
    ],
    "Cross-Site Scripting (XSS)": [
        "Include a script for a basic alert in the uploaded LaTeX document",
        "Use this as a proof-of-concept for XSS vulnerability",
        "Confirm vulnerability using the uploaded LaTeX document",
        "Inject the snippet (`EOC\n$eyes=`cat flag`;print '$eyes';`) through another HTTP POST request to /cow_designer."
    ],
    "LFI (Local File Inclusion)": [
        "Identify code vulnerable to SQL injection in 'index.php'",
        "Create a malicious input for the username",
        "Determine vulnerability to LFI",
        "Notice the website contains only a login form that might be vulnerable to SQL injection",
        "Perform an SQL injection attack on the login form",
        "Note that the initial SQL injection tactic yielded access but not the password",
        "Exfiltrate all password characters via blind SQL injection",
        "Confirm the successful exposure of the /etc/passwd file."
    ]
}