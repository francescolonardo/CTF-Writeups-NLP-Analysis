[
    "Logged in as dennisb@uupeye.edu",
    "Tried to bruteforce the admin portal without success",
    "Attempted SQL login bypass",
    "Successfully bypassed login and accessed the admin portal",
    "Identify that students may have weak passwords",
    "Attempt password brute force for each email",
    "Attempt different passwords",
    "Access all accounts with the obtained credentials",
    "Initialize an empty password string.",
    "Set the loop condition to run until the password is fully determined using the SQL Injection.",
    "Check the response for the text 'No such person'.",
    "If the text is found, the guess was incorrect.",
    "If the text is not found, the guess was correct.",
    "Log in to the website using the username 'jack' and the discovered password.",
    "Notice a 'session_id' stored in a cookie.",
    "Experiment with the session_id.",
    "Change the hashed value to correspond to different usernames.",
    "Change the hashed value in the session_id cookie to correspond to the username 'admin'.",
    "When faced with a security check.",
    "Discover the security question answer from one of the images.",
    "Use the discovered security question answer to bypass the security check and log in as the 'admin' user",
    "Identify that the cookie 'token' has the httpOnly attribute.",
    "Recognize that the httpOnly attribute prevents retrieval of the cookie by XSS.",
    "Refer to the PHP manual to obtain the bcrypt hash and identify the password as 'rasmuslerdorf'.",
    "Add the encoded 'userdata' as a request parameter for the mfa service.",
    "Retrieve the flag as confirmation of successful authentication.",
    "Examine the cookies in the HTTP request.",
    "Observed that 'c' parameter in requests was used to manipulate the user session, either to sign in, sign up, or sign out.",
    "Figured out the need of a passcode to perform admin functions.",
    "Identified admin credentials and passcode from the accessed user database and passcode files.",
    "Identify remote address and user agent checks as the reasons.",
    "Identified that 'ctx.state.user' equals to the 'username' cookie",
    "Used '__proto__' as the username parameter",
    "Identify that the re-writing and forwarding occurs when the `User-Agent` header is of the web crawlers.",
    "Realize that 'jsonwebtoken' 3.2.2 has a known authentication bypass vulnerability.",
    "Notice that the JWT token is checked in the response for '/localisation-file'.",
    "Understand that the JWT token is essentially encoded JSON data.",
    "Understand that the JWT token is signed and verified on the server-side.",
    "Notice that the public key used for the JWT token handling is stored in the '__dirname' directory.",
    "Discover that the server generates a JWT token.",
    "Realize that the input 'language' in the JWT token is used for reading the arbitrary files.",
    "Set the 'language' parameter to 'key' in the JWT token.",
    "Sign the token using the retrieved public key.",
    "Verify that the token is successfully signed.",
    "Use the server's own mechanism against it.",
    "Set the 'lion-token' cookie to the generated token.",
    "Understand that \u2018SCRIPT_NAME\u2019 can be set through an HTTP header, which can bypass the '/admin' denial in Nginx configuration",
    "Obtain the flag",
    "Submit an authentication request with a username.",
    "Fail the authentication."
]