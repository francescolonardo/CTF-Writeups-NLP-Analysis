{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Accessed the website and observed allowed actions: upload and comment on dog pictures"
            },
            {
                "StepNumber": 2,
                "StepString": "Found an interesting endpoint '/dogooo/runcmd' enabling remote shell functionality that was blocked due to 'seccomp' filter preventing 'execve'"
            },
            {
                "StepNumber": 3,
                "StepString": "Identified several functionalities accessed by authenticated users by spotting '@login_required' annotations"
            },
            {
                "StepNumber": 4,
                "StepString": "Found and endpoint for creating new users '/dogooo/user/create' which is also accessed only by authenticated users"
            },
            {
                "StepNumber": 5,
                "StepString": "Publicly accessible functionality: '/dogooo/deets/<postid>' where comments under a picture can be inserted is identified"
            },
            {
                "StepNumber": 6,
                "StepString": "During the submission of comment, a two-step process of inserting the comment like a preview and then validating and inserting into the database is observed"
            },
            {
                "StepNumber": 7,
                "StepString": "In the 'get_comments' function within the [loaddata.py](loaddata.py) file, a code snippet that prints 'self.__dict__' if a comment text contains a format string like '{rating}' is found"
            },
            {
                "StepNumber": 8,
                "StepString": "Post content prints out with 'self.__dict__' in the preview of the webpage on trying the above method"
            },
            {
                "StepNumber": 9,
                "StepString": "Using the '{rating[comments][0].__class__.__init__.__globals__}' format string, 'globals' objects can be accessed"
            },
            {
                "StepNumber": 10,
                "StepString": "Database credentials are found in the output ('dogooo' for 'db_user' and 'dogZgoneWild' for 'db_pass')"
            },
            {
                "StepNumber": 11,
                "StepString": "Authenticating into the system with these credentials allowed for new users creation"
            },
            {
                "StepNumber": 12,
                "StepString": "Authenticated to the system and found that the 'login' method in [dogooo_comments.py](dogooo_comments.py) uses Python 3's f-Strings functionality which can be used to call methods"
            },
            {
                "StepNumber": 13,
                "StepString": "Spot that during authentication, 'get_user_info' method of the User class in [loaddata.py](loaddata.py) uses the 'f()' method on the 'username' field which can be exploited for login"
            },
            {
                "StepNumber": 14,
                "StepString": "Create a new user with a malicious username '{open('/flag').read()}' that could trigger a Remote Code Execution during the authentication"
            },
            {
                "StepNumber": 15,
                "StepString": "On authenticating with this user, redirected to a URL containing the flag"
            },
            {
                "StepNumber": 16,
                "StepString": "Identified the flag from the URL: 'OOO{did you see my dog}'"
            }
        ]
    }
}