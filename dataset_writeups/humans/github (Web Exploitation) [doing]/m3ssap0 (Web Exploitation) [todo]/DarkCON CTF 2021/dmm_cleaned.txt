The SSTI in the URL is a hint to Server-Side Template Injection vulnerabilities.

[A URL that includes a server-side template injection vulnerability, where the "url" parameter is being passed an expression that will be evaluated by the server as part of a string. The expression in this case is "7*7", which will be evaluated to "49" and included in the resulting URL.] will return a 404 Not Found error.

[A URL that includes a server-side template injection vulnerability, where the "url" parameter is being passed an expression that will be evaluated by the server as part of a string. The expression in this case is void] will return a strange message.

The same happens for chars: `%`, `[`, `]`, `"`, `+`, `_` and for words: `self`, `request`, `join`, `config`.

So the template engine is probably Jinja2, but you have to face some restrictions.

The following payload will return all subclasses.

[Python code that retrieves all the subclasses of the built-in object class using a series of method calls and function invocations.]

So we have the list of returned subclasses.

The following payload will return the output of the `id` command.

[Python code that appears to be attempting to execute a shell command with root privileges. This is a potentially dangerous operation and should be approached with caution.]

[HTML code displaying an error message with centered text stating that the requested resource with the identifier "b'uid=1000(ctf) gid=1000(ctf) groups=1000(ctf)'" could not be found (error code 404). The text appears within an H1 heading element.]

So you can execute remote commands, listing the directory content and printing the flag.