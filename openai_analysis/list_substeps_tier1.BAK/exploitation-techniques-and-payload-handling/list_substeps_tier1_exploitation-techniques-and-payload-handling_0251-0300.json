[
    "Identify that the website is vulnerable to SQL injection.",
    "Test the SQL injection vulnerability.",
    "Enter the payload ' or '1'='1'.",
    "Confirm that the SQL injection vulnerability exists.",
    "Construct a payload that uses the SQL LIKE clause.",
    "Send POST requests with a payload that uses the SQL LIKE clause for each possible character.",
    "Identify XXE attacks as a potential exploitation technique",
    "Craft a payload for XXE exploitation",
    "Send the crafted payload",
    "Understand that due to the productId parameter being reflected in the response, the system may be susceptible to XXE attacks.",
    "Create a crafted payload utilizing XXE.",
    "Send the crafted payload.",
    "Indicate that the exploitation of an XXE vulnerability was successful.",
    "Identified a potential SQL injection vulnerability.",
    "Constructed a base to perform SQL injection.",
    "Used the SQL injection.",
    "Identified a potential SQL injection vulnerability.",
    "Constructed a base to perform SQL injection.",
    "Create a payload.",
    "Identify the constraints: the payload must be less than 30 characters and cannot contain 'zer0pts'.",
    "Identify that output content being checked for the presence of the string 'zer0pts', and devise a method to bypass it.",
    "Create a payload that would fit the constraints and retrieve the flag.",
    "Understood the requirement for a reflected XSS exploit",
    "Attempted payload to inject XSS via `theme`",
    "Tried to bypass Content Security Policy (CSP)",
    "Attempted to inject XSS after bypassing",
    "Used DOM Clobbering technique",
    "Redefine `window.callback` and `trustedTypes` using the DOM Clobbering technique",
    "Injected payload for basic XSS execution with DOM Clobbering",
    "Injected final payload to initiate the XSS",
    "Contemplated on triggering a custom Cloudflare error.",
    "Remembered that a Cloudflare error was triggered in the instance by SQL injection.",
    "Due to the previous step, made an attempt to use an SQL injection on the challenge platform.",
    "..by inputting ' OR 1=1--'",
    "The flag was found in the error, leading to successful completion of the challenge.",
    "Construct an exploit.",
    "Construct a payload to do a redis.call() to set the serialized object with the sessionID.",
    "Observe possibility of XSS attack from bot's lens.",
    "Create a payload without dots or double slashes.",
    "Use data URI in the form 'data:text/html;base64,<base64 data>' for the payload.",
    "Exploited the discovered vulnerability",
    "Engaged in a race with other players",
    "The absence of 'nc' and any exfiltration method restricts the options",
    "Performed repetitive actions of sending requests",
    "Use nip.io wildcard DNS service.",
    "Use double URL encoding.",
    "Bypass the character restriction.",
    "Leverage X-Accel-Redirect.",
    "Exploit the Off-by-Slash bug.",
    "Recognize that the challenge involves exploiting a page to pop up an alert."
]