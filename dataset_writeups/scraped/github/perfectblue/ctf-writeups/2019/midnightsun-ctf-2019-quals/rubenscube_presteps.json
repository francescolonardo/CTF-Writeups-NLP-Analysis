[
    "Visited the CTF challenge site to analyse the form provided to upload images.",
    "Checked the robots.txt on the site to examine the source.zip that reveals all the source code.",
    "Downloaded the source.zip file and opened it to find upload.php, which is the relevant code.",
    "Immutable code inspection of upload.php helped to figure out there's an XML External Entity (XXE) vulnerability when it loads SVG files.",
    "Identified that in the php code, there were serialization in the __construct and __destruct methods.",
    "Hosted a document type definition (DTD) on a personal domain for blind exfiltration of files.",
    "Used the PHP /// uri with their base64 encoding filter to allow for file reading.",
    "Identified that I need to use the phar:// uri in the XML External Entity vulnerability to make PHP deserialize my object of the Image type.",
    "Understood that I need to create a controlled filename and when __destruct would be called. This would lead to a command execution in the create_thumb function.",
    "Used a techinique to disguise a valid phar file as a JPEG image.",
    "Uploaded the disguised phar file and used the XML External Entity vulnerability to call it with the phar:// uri.",
    "Created a phar that when unserialized, it created an Image object with a controlled filename which would execute the command './flag_dispenser' when the __destruct method was called.",
    "Command execution triggered execution of the flag_dispenser to get the flag."
]