[
    "Inspect 'challenge/routes/index.js' file for SSTI vulnerability.",
    "Add padding to the extracted text.",
    "Bypassed message length restriction.",
    "Construct an SQL injection query based on the format.",
    "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy.",
    "Execute 'id' command",
    "Realize that 'jsonwebtoken' 3.2.2 has a known authentication bypass vulnerability.",
    "Locate the route '/adminNames' in the website source.",
    "Construct PHP payload.",
    "Utilized DOM clobbering.",
    "Verify that the accessor for 'key' has been overridden and behaves as expected.",
    "Identify the first exploit.",
    "Find out that the URL capture service takes a screenshot",
    "Investigate the source code of the website.",
    "Observe that the website is a login form.",
    "Examine the source.zip file.",
    "Realize the execution of PHP code when reading a file through LFI",
    "Locate admin button on the webpage.",
    "Attempt to break out using '?cat=news\\\\''.",
    "Send the request to modify the new user's role to 'Admin'.",
    "View the website contents.",
    "Recognize that it opens up path traversal vulnerabilities.",
    "Reviewed the source code.",
    "Attempt to upload a valid PHP file.",
    "Observe the output of the conversion command to obtain the flag.",
    "Locate the .env file",
    "Utilize https://jwt.io/ or a JWT-signing library for the JWT creation.",
    "Note that the token uses the RS256 algorithm",
    "Obtain a new session cookie as output.",
    "Investigate the response to the input.",
    "Develop an SQL payload that determines the length of the intended data ('flag').",
    "Verify that the replacement is non-recursive.",
    "Use the directory listing to identify a 'print-flag' file.",
    "Customize the request body.",
    "The deserialized object is assigned to the $perm variable in 'authentication.php'"
]