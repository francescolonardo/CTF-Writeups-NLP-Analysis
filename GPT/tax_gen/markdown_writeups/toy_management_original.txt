<h1>Toy Management (300)</h1>

<h2>Problem</h2>

<blockquote>
  <p>The evil elves have changed the admin access to Santa's Toy Management Portal. Can you get the access back and save the Christmas?</p>
</blockquote>

<ul>
<li><a href="./web_toy_management.zip">web<em>toy</em>management.zip</a></li>
</ul>

<h2>Solution</h2>

<ol>
<li><p>The website is a simple login page.</p></li>
<li><p>After looking at the source code for a while, I noticed that the <code>database.sql</code> file contains the password hashes for a manager and admin user. <a href="https://crackstation.net/">CrackStation</a> is a great way to see if these are known hashes, so I pasted them both in and got the credentials <code>manager:bigsanta!</code> and <code>admin:tryharder</code>.</p></li>
<li><p><code>manager:bigsanta!</code> is a valid login by <code>admin:tryharder</code> is not. After signing in we can see a list of toys and some other properties.</p></li>
<li><p>Looking back at the source code in the <code>database.sql</code> file we see that the flag is contained in the database with the rest of the toys, but it has the approved value set to 0 instead of 1.</p></li>
<li><p>In <code>challenge/routes/index.js</code> we see that the <code>/api/toylist</code> endpoint will set <code>approved</code> to 1 unless the currently signed in user has the username <code>admin</code>. So, we have to sign in as admin.</p></li>
<li><p>My first thought was that this was a JWT challenge since JWTs are used and we are given a user with valid credentials. However, after poking around, the <code>database.js</code> source code shows that users are authenticated like so: <code>let stmt = "SELECT username FROM users WHERE username = '${user}' and password = '${pass}'\";</code>. This looks like it could be vulnerable to a SQL injection.</p></li>
<li><p>On the main login page, I tried some common SQL injection payloads from <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection#authentication-bypass">swisskyrepo/PayloadsAllTheThings</a>. The one that ended up working was username <code>admin' --</code> and the password can be anything. This will show us the final "unapproved toy" which is the flag.</p></li>
</ol>

<h3>Flag</h3>

<p><code>HTB{1nj3cti0n_1s_in3v1t4bl3}</code></p>
