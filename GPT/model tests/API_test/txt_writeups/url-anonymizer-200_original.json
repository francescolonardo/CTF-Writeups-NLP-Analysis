{
    "AttackModel": {
        "NameOfTheChallenge": "URL Anonymizer",
        "AttackerCapabilities": [
            "SQL Injection",
            "Knowledge of MySQL database",
            "Understanding of UNION SELECT based queries",
            "Ability to use group_concat()"
        ],
        "Target": {
            "Type": "Web Application",
            "Vulnerabilities": [
                "SQL Injection in the 'id' parameter of the 'report' page"
            ],
            "SecurityMeasures": [
                "Unknown"
            ]
        },
        "Steps": [
            {
                "StepNumber": 1,
                "Description": "Exploit SQL injection vulnerability to leak column information",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker wants to exploit the SQL injection vulnerability to obtain information from the database.",
                    "Action": "Craft an SQL injection payload using UNION SELECT to retrieve column information.",
                    "Result": "Leak one value of one column of information directly to the output.",
                    "Success": "Success",
                    "FailingReason": null
                }
            },
            {
                "StepNumber": 2,
                "Description": "Find the number of columns in the UNION SELECT attack",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker needs to determine the number of columns in the UNION SELECT attack for accurate retrieval of information.",
                    "Action": "Perform trial and error by incrementing the number of columns until a successful UNION SELECT attack is achieved.",
                    "Result": "Obtain the correct number of columns for the UNION SELECT attack.",
                    "Success": "Success",
                    "FailingReason": null
                }
            },
            {
                "StepNumber": 3,
                "Description": "Retrieve table names using UNION SELECT attack",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker wants to obtain the table names in the 'web' database.",
                    "Action": "Craft an SQL injection payload using UNION SELECT and query the 'informationschema.tables' to retrieve table names.",
                    "Result": "Obtain the table names in the 'web' database.",
                    "Success": "Success",
                    "FailingReason": null
                }
            },
            {
                "StepNumber": 4,
                "Description": "Retrieve column names using UNION SELECT attack",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker wants to obtain the column names in the 'web' database.",
                    "Action": "Craft an SQL injection payload using UNION SELECT and query the 'informationschema.columns' to retrieve column names.",
                    "Result": "Obtain the column names in the 'web' database.",
                    "Success": "Success",
                    "FailingReason": null
                }
            },
            {
                "StepNumber": 5,
                "Description": "Retrieve flag from the 'flag' table",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker wants to obtain the flag from the 'flag' table.",
                    "Action": "Craft an SQL injection payload using UNION SELECT and query the 'flag' table to retrieve the flag value.",
                    "Result": "Obtain the flag value from the 'flag' table.",
                    "Success": "Success",
                    "FailingReason": null
                }
            }
        ]
    }
}