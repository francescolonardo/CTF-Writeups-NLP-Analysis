{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Accessed the website provided in the challenge"
            },
            {
                "StepNumber": 2,
                "StepString": "Checked the filter page for clues or information"
            },
            {
                "StepNumber": 3,
                "StepString": "Noticed the feature using SQLite through filters and SQL statements"
            },
            {
                "StepNumber": 4,
                "StepString": "Created exploit using SQL injection: 'adm' || trim('in', ` Password: `) || ''"
            },
            {
                "StepNumber": 5,
                "StepString": "Discovered that `||` is the SQLite concatenation operator and is used to join strings together"
            },
            {
                "StepNumber": 6,
                "StepString": "Understood that trim(string, character) will remove `character` from `string`. Therefore, ' AND password=' is treated as a string and hence, ignored"
            },
            {
                "StepNumber": 7,
                "StepString": "Executed SQL statement: SELECT username, password FROM users WHERE username='adm' || trim('in',' AND password=') || ''"
            },
            {
                "StepNumber": 8,
                "StepString": "Recognized that this SQL statement is equivalent to SELECT username, password FROM users WHERE username='adm' || 'in' || ''"
            },
            {
                "StepNumber": 9,
                "StepString": "Realized finally that both SQL statements are identical to 'SELECT username, password FROM users WHERE username='admin''"
            },
            {
                "StepNumber": 10,
                "StepString": "Logged in as admin using the discovered SQL injection"
            },
            {
                "StepNumber": 11,
                "StepString": "Checked the filter page again to see any changes"
            },
            {
                "StepNumber": 12,
                "StepString": "Attempted the third web Gauntlet where the length requirement is reduced"
            },
            {
                "StepNumber": 13,
                "StepString": "Tried the previously discovered SQL injection, found that it still works"
            }
        ]
    }
}