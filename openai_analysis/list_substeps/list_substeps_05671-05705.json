[
    "Reveal the source code of 'config.php'",
    "Start searching each revision.",
    "Discovered 'Report Vulnerability' message",
    "Look at the JavaScript file in the webpage.",
    "Submit a single comma as input.",
    "Send a request to '/pleb.mysub.dnsbin.zhack.ca'.",
    "Identified a mutation with the `<table>` element.",
    "Discover that the app uses curl for certain inputs.",
    "Found API endpoint details in the downloaded files",
    "Perfect payload",
    "Extract the flag from the response received on the callback URL.",
    "Upload enough bytes to exceed 10 records.",
    "Search for 'vulnerability' in the GitHub repository's Issues",
    "Interpreted how 'pkg' and 'pkgPath' can be controlled.",
    "Find upload.php in the source.zip file.",
    "Find the 'access_log' class in authentication.php",
    "Identified that an error was thrown during rendering.",
    "Connect to the website 138.247.13.115.",
    "Inspect the returned results after uploading the barcode.",
    "Identify and exploit vulnerabilities present in the Apache server.",
    "Study and understand the given client-side web exploitation challenge.",
    "Find the 'subprocess.Popen' class.",
    "Visit the '/login' route.",
    "Identify that the cookie is set with the flag '35C3_LOG_ME_IN_LIKE_ONE_OF_YOUR_FRENCH_GIRLS'",
    "Understand this switch allows the execution of custom code within the app",
    "Open the target URL",
    "Find faulty secret key handling in the Python source code.",
    "Found a known vulnerability (CVE-2019-17221) linked with PhantomJS/2.1.1.",
    "Controlled 'pkg' by polluting '__proto__.data'.",
    "Generate an introspection query for graphql.",
    "Receive the Base64 encoded png file on the local machine.",
    "Inspect the HTML source code of the admin page",
    "Automate the full exploit chain in solve.py.",
    "Get the cookie's value.",
    "Determine that the server's response suggests Server Side Template Injection."
]