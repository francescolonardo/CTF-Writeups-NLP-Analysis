{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Examine GitHub repo linked in the challenge that belongs to a user named Magpie Inc"
            },
            {
                "StepNumber": 2,
                "StepString": "Find and analyze the source code for 'flagchecker.c' in the repo"
            },
            {
                "StepNumber": 3,
                "StepString": "Since there's no exploit in 'flagchecker.c', explore other files in the repo"
            },
            {
                "StepNumber": 4,
                "StepString": "Look at the GitHub Actions file 'build_flag_checker.yml' in the '.github/workflows' directory"
            },
            {
                "StepNumber": 5,
                "StepString": "Examine 'build.sh' script referenced in the GitHub Actions file and determine that it uses the 1st command-line argument as the value assigned to a macro"
            },
            {
                "StepNumber": 6,
                "StepString": "Examine the 'flaghash.sh' script to understand the process: it makes a cURL request to an IP address, hashes the results using MD5, and sets the cookie 'auth' to the value of 'FLAG_AUTH' from the secrets"
            },
            {
                "StepNumber": 7,
                "StepString": "Investigate the GitHub Actions workflow runs, noting that the value of FLAG_AUTH is starred out"
            },
            {
                "StepNumber": 8,
                "StepString": "Study the commit history, find a commit with the message 'Fix auth!!!'"
            },
            {
                "StepNumber": 9,
                "StepString": "Investigate changes made in the 'Fix auth!!!' commit; find that the 'auth' cookie was previously set in 'gethash.sh'"
            },
            {
                "StepNumber": 10,
                "StepString": "By using curl command with the previously hardcoded auth cookie value, successfully retrieve the flag"
            }
        ]
    }
}