Check the source code, there is CSP settings.

`app/public/index.php`

This site only allows images of the same origin and script tags with nonces as external resources.

We can embed any code into html with the get parameter.

`app/public/index.php`

Also, the CSP nonce is fixed, so you can check the xss at this URL.

And the purpose of the attack is an image that is only displayed when the bot accesses this site.

(The cookie "token" has the httpOnly attribute, so it cannot be retrieved by XSS.)

`app/public/flag.php`

`bot/main.js`

Therefore, the attack is the following procedure

1. Create a new script tag using `document.createElement`.

2. Convert flag images to base64 data.

3. Send the image data externally with the "src" of the script tag generated in 1.

Minify this code to make it read as XSS.

The image data is large and exceeds the length that can be specified in the url, so we will split it into three parts.

By sending these URLs to the bot, base64 encoded image data will be sent to the requestbin.

We can then display this data in the following html to get the flag.