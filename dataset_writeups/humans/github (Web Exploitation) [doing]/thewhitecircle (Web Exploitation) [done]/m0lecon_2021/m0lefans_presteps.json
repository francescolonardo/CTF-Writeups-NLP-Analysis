[
    "Start at a login/register page",
    "Login into the system",
    "Explore the UI features such as: public feed, profile settings, report link, create post button, search, copy profile link, and followers",
    "Understand how to modify user's profile and upload images, try XSS payloads on different input fields but discover that JavaScript is blocked",
    "Try a bypass method by uploading HTML files disguised as image files (using a GIF header for instance)",
    "Discover that HTML files are uploaded successfully despite checks for images, but they don't execute on the server side, instead, they are downloaded with random filenames",
    "Switch strategy and attempt to upload an HTML file containing a simple JavaScript function (such as an alert)",
    "Observe that JavaScript inside the uploaded HTML does execute, even if not when directly input into the application's fields",
    "Understand the need to 'steal' an admin cookie and gain admin access, but encounter the HttpOnly problem",
    "Review the challenge description again and shift focus to the 'following' feature",
    "Craft a JavaScript snippet that sends a GET request to the '/profile/follow' endpoint, which would theoretically make any user that accesses a page with that script embedded follow the attacker account",
    "Embed this crafted JS snippet into an HTML file and upload it to the user profile",
    "Get the uploaded HTML file link from the webpage and report it, tricking admin into opening the page and thus executing the JS script silently",
    "Confirm the success of the attack when a new follow request from admin appears",
    "Attempt to guess admin's subdomain and utilize the 'subdomain enumeration' technique when guessing proves unsuccessful",
    "Discover the admin's subdomain and visit the profile, finding out it is private but has a 'follow' button",
    "Attempt to follow admin, receiving a pending request response",
    "Decide to use the same strategy to make admin accept the follow request",
    "Understand that this time a POST request must be sent to '/profile/request' with the 'id' of the attacker's user embedded in the request body",
    "Locate the JWT token within the session cookie, decode it and extract the 'id' of the user (attacker)",
    "Gain admin's acceptance as a follower and finally find the flag within a fan post, completing the challenge"
]