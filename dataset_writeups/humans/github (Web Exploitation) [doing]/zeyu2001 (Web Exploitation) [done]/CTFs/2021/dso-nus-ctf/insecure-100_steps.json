{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identified that the binary calls the 'id' command three times, with and without privileges"
            },
            {
                "StepNumber": 2,
                "StepString": "Recognized the need to manipulate the PATH variable to execute arbitrary code when 'id' is called, due to the SUID flag being set"
            },
            {
                "StepNumber": 3,
                "StepString": "Understood the goal to read the 'flag.txt' file that requires root access, meaning a shell needs to be spawned as root"
            },
            {
                "StepNumber": 4,
                "StepString": "Created a bash script that would only spawn the shell if the caller is root"
            },
            {
                "StepNumber": 5,
                "StepString": "Translated the bash script into a one-liner to create a malicious 'id' payload"
            },
            {
                "StepNumber": 6,
                "StepString": "Went to the '/tmp' directory"
            },
            {
                "StepNumber": 7,
                "StepString": "Created an 'id' file with the malicious payload and set its permissions to 777 to make it executable"
            },
            {
                "StepNumber": 8,
                "StepString": "Exported '/tmp' to the PATH to ensure the shell would execute the malicious 'id'"
            },
            {
                "StepNumber": 9,
                "StepString": "Ran 'insecure' to obtain a root shell and confirm the malicious 'id' could be run as root"
            },
            {
                "StepNumber": 10,
                "StepString": "Read the 'flag.txt' file using the root shell, successfully getting the challenge flag"
            }
        ]
    }
}