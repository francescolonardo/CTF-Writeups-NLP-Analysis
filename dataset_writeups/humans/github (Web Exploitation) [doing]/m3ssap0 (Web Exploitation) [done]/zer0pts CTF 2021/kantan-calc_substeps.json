{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Download the source code attached to the CTF challenge.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Download the source code attached to the CTF challenge."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Review the given source code, which is a Javascript calculator web app.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Review the given source code, which is a Javascript calculator web app."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identify the constraints: the payload must be less than 30 characters and cannot contain 'zer0pts'.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identify the constraints: the payload must be less than 30 characters and cannot contain 'zer0pts'."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Recognize this as a code injection challenge.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Recognize this as a code injection challenge."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Realize that the Javascript function can print itself, including comments, if its name is returned.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Realize that the Javascript function can print itself, including comments, if its name is returned."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Identify that the structure of the script can be seen as something like '(x, y)()'.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Identify that the structure of the script can be seen as something like '(x, y)()'."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Identify that output content being checked for the presence of the string 'zer0pts', and devise a method to bypass it.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Identify that output content being checked for the presence of the string 'zer0pts', and devise a method to bypass it."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Understand that you can convert a string to an array of chars in Javascript using the clause '[...p]'.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Understand that you can convert a string to an array of chars in Javascript using the clause '[...p]'."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Identify that the clause cannot be executed directly on 'p' as it 'is not iterable', and find a way to convert it to a string using concatenation.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Identify that the clause cannot be executed directly on 'p' as it 'is not iterable', and find a way to convert it to a string using concatenation."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Create a payload that would fit the constraints and retrieve the flag.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Create a payload that would fit the constraints and retrieve the flag."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Summarize that the flag must be 'zer0pts{K4nt4n_m34ns_4dm1r4t1on_1n_J4p4n3s3}'.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Summarize that the flag must be 'zer0pts{K4nt4n_m34ns_4dm1r4t1on_1n_J4p4n3s3}'."
                    }
                ]
            }
        ]
    }
}