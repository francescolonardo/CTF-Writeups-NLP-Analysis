{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identifies a Server-Side Template Injection (SSTI) vulnerability in the password field within the code.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify a Server-Side Template Injection (SSTI) vulnerability in the password field within the code."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Tests the SSTI vulnerability by inputting a mathematical operation as the payload into the password field making the server return the result of the operation.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Test the SSTI vulnerability by inputting a mathematical operation as the payload into the password field."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Observe the server returning the result of the operation."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identifies a SQL injection vulnerability in the 'data-server' project.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identify a SQL injection vulnerability in the 'data-server' project."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Executes commands using the SSTI vulnerability to read directory contents.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Execute commands using the SSTI vulnerability to read directory contents."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Takes note of the directory contents returned by the server.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Take note of the directory contents returned by the server."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Identifies an inaccessible server that is hosting data-server.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Identify an inaccessible server that is hosting data-server."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Plans to send requests containing SQL to the server.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Plan to send requests containing SQL to the server."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Writes a python script in which an SQL payload is sent to the inaccessible server by using SSTI to force the execution of the payload.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Write a python script."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Send an SQL payload to the inaccessible server using SSTI to force the execution."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Loops through a list of characters, appending each character to an initial flag string. In each loop, a script is created and encoded into base64. This script is sent as an SSTI payload.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Loop through a list of characters."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Append each character to an initial flag string."
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Create a script."
                    },
                    {
                        "SubstepNumber": 9.4,
                        "SubstepString": "Encode the script into base64."
                    },
                    {
                        "SubstepNumber": 9.5,
                        "SubstepString": "Send the encoded script as an SSTI payload."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Sends the payload via POST request and check if 'True' is in the response. If 'True' is present, the flag string character is an actual flag character; that character is then appended to the flag.",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Send the payload via POST request."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Check if 'True' is present in the response."
                    },
                    {
                        "SubstepNumber": 10.3,
                        "SubstepString": "If 'True' is present, append the flag string character to the flag."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Notes that due to the server filtering the character '.', the script is encoded into base64 to bypass this filtering.",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Note that the server filters the character '.'."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Encode the script into base64 to bypass the filtering."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Notes that because the server does not have CURL, a python script is used to send requests.",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Note that the server does not have CURL."
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Use a python script to send requests."
                    }
                ]
            }
        ]
    }
}