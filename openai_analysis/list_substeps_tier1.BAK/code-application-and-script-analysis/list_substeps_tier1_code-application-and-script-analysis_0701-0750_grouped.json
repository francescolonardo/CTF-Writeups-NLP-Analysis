{
    "Query Execution": [
        "Execute the compiled query."
    ],
    "Tripcode Generation": [
        "Discover that the tripcode is generated from a snippet of futaba-ng code",
        "Analyze the code snippet",
        "Compare the generated tripcode with the target"
    ],
    "Wordpress Manipulation": [
        "Flip one random bit in the wordpress installation",
        "Flip the comparison check in /var/www/html/wp-includes/user.php at position 5389",
        "Modify the comparison to always allow login even with incorrect password"
    ],
    "Shell and File Manipulation": [
        "Upload PHP shell",
        "Analyze the PHP script.",
        "Understand that if the IP is from Norway, YAML parses 'NO' as False.",
        "Realize that YAML parsing 'NO' as False allows bypassing escapeshellargs.",
        "Choose the vulnerable points in the script to perform the injection.",
        "Use lesscss to evaluate CSS on the backend.",
        "Leak source code.",
        "Use interp to evaluate Golang at runtime from cookie.",
        "Realize 'os.exec' is blocked.",
        "Use 'os.StartProcess' instead.",
        "Import 'io/ioutil'.",
        "Import 'os'.",
        "Create a function named 'api'.",
        "Define 'os.ProcAttr'.",
        "Assign file descriptors for standard input, output, and error handling.",
        "Execute '/bin/sh' with an argument to read the flag file and redirect the output to '/tmp/jizz'."
    ],
    "Cookie and Response Manipulation": [
        "Inspect the response from index.jsp.",
        "Pass the decoded cookie to the 'app.render' function",
        "Run arbitrary javascript with the 'outputFunctionName' option",
        "Execute child process for reading the flag file"
    ],
    "Input Validation and HTML Injection": [
        "Bypassed input validation",
        "Injected arbitrary HTML"
    ],
    "XPATH Injection": [
        "Identified the challenge as an XPATH injection challenge.",
        "Analyze 'calc.js'",
        "Identify controllable variables in 'calc.js'",
        "Identify ability to control 'astProgram.type' variable",
        "Understand the variable sets the type attribute for the script element"
    ],
    "Code Execution and Import Maps": [
        "Decide to provide code in the form of JSON object",
        "Realize 'JSON.parse()' will parse the provided code JSON",
        "Decide to switch 'astToJs' to 'evalCode'",
        "Understand this switch allows the execution of custom code within the app",
        "Decide to use Import Maps",
        "Understand using Import Maps will help in switching 'astToJs' to 'evalCode'",
        "Decide to create a new HTML script element",
        "Set 'program' as the id for the new HTML script element",
        "Set 'json' as the language attribute for the new HTML script element",
        "Set 'importmap' as the type attribute for the new HTML script element",
        "Decide to add custom JavaScript code to the 'code' key",
        "Understand this custom JavaScript code will leak the cookie"
    ],
    "Python Script Execution": [
        "Decide to execute a Python script (solve.py)",
        "Obtain the flag through the execution of solve.py"
    ],
    "Flask Web Server Analysis": [
        "Analyze the contents of the 'server.py' file.",
        "Understand the workflow of the Flask web server."
    ]
}