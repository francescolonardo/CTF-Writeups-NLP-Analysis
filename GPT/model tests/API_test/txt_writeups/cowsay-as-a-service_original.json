{
    "AttackModel": {
        "NameOfTheChallenge": "Cowsay As A Service",
        "AttackerCapabilities": [
            "Knowledge of prototype pollution",
            "Understanding of command injection"
        ],
        "Target": {
            "Type": "Web Application",
            "Vulnerabilities": [
                "Prototype pollution",
                "Command injection"
            ],
            "SecurityMeasures": []
        },
        "Steps": [
            {
                "StepNumber": 1,
                "Description": "Exploiting prototype pollution to set the 'shell' property to true for all objects",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker wants to manipulate the server-side settings to enable shell execution for all objects.",
                    "Action": "The attacker sends a POST request to the '/setting/shell' endpoint with the payload containing 'value': true.",
                    "Result": "The server-side settings are modified to set 'shell' to true for all objects.",
                    "Success": "Success",
                    "FailingReason": null
                }
            },
            {
                "StepNumber": 2,
                "Description": "Performing command injection to execute arbitrary commands",
                "ToolsUsed": null,
                "StepDetails": {
                    "Hypothesis": "The attacker aims to execute arbitrary commands on the server through the command injection vulnerability.",
                    "Action": "The attacker sends a GET request to the '/cowsay' endpoint with the 'say' parameter containing the desired command to execute.",
                    "Result": "The command is executed within a shell, and the output is returned in the response.",
                    "Success": "Success",
                    "FailingReason": null
                }
            }
        ]
    }
}