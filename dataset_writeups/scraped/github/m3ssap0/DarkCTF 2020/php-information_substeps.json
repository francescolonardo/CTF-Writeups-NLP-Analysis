{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Accessed the provided URL to check the PHP source code",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Accessed the provided URL."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Checked the PHP source code."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Saw the criteria for getting the flag printed",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Saw the criteria for getting the flag printed."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Identified the necessary conditions to be satisfied according to the code. It includes specific query string parameters, a user-agent, and a 'GET' request that needs to have two different parameters having the same md5 hash",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Identified the specific query string parameters needed according to the code."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Identified the required user-agent according to the code."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Identified the need for a 'GET' request with two parameters having the same md5 hash."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Understood from the code snippet that the md5 hash must collide. This means two different strings should give the same md5 hash",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Understood from the code snippet that the md5 hash must collide."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Deduced that two different strings should give the same md5 hash."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Used provided hexadecimal values to generate two different strings with the same md5 hash",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Used provided hexadecimal values."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Generated two different strings with the same md5 hash."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Used 'hex2bin' PHP function to convert the hexadecimal values into binary data",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Used 'hex2bin' PHP function."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Converted the hexadecimal values into binary data."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Checked whether the generated data from both the hexadecimal values is the same or not",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Checked the equality of generated data from both the hexadecimal values."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Generated the md5 hash for both binary data and checked if they matched",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Generated the md5 hash for both binary data."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Checked if both md5 hashes matched."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "URL encoded both binary strings",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "URL encoded the first binary string."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "URL encoded the second binary string."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Got two different URL encoded strings with the same md5 hash",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Got two different URL encoded strings."
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Checked and confirmed both strings had the same md5 hash."
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Constructed the complete 'GET' request using all the relevant parameters including the 'darkctf', 'ctf2020', 'karma', and '2020' query parameters and set the 'User-Agent' as required by the PHP code",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Constructed the 'GET' request using 'darkctf', 'ctf2020', 'karma', and '2020' query parameters."
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Set the 'User-Agent' as per the requirement in the PHP code."
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Sent the 'GET' request to the provided web page",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Sent the 'GET' request to the provided web page."
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "Received the flag as the response",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Received the response from the web page."
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Identified the received flag."
                    }
                ]
            }
        ]
    }
}