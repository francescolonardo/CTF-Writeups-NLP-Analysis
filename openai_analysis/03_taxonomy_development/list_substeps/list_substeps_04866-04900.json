[
    "Identified the '/flag' endpoint in the robots.txt file",
    "Defined final payload using 'wget' and command substitution.",
    "Encode the malicious serialized class in base64",
    "Noticed an excerpt button on the webpage.",
    "Checked the source code of the homepage",
    "Analyze the website.",
    "Realized JSON payload cannot have spaces due to regex match.",
    "Send the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'.",
    "Made a GET request with the payload.",
    "Examined the functionality endpoint '/files/'.",
    "Navigate to the '/home/user' directory.",
    "Noticed Angular also follows redirects.",
    "Connected to the database using the credentials from the JavaScript code.",
    "Note the usage of the 'f()' method on the 'username' field.",
    "Observe that the '/pleb' proxy isn't forwarding non-ASCII characters.",
    "Intercept register request.",
    "Attempt to login using 'user' as both username and password.",
    "Visit the website mentioned in the challenge",
    "Extract 'P4s5_w0Rd' string using regex pattern.",
    "Find a section in DOMPurify's unit tests.",
    "Find the secret key for the debugger.",
    "Retrieved the PHP source code.",
    "Create a JWT with the permissions set to 'admin' and the secretid set to a string that does not exist in the secrets array",
    "Inspect parameters in the request.",
    "Added debug prints to the file for the GET path",
    "Include a PHP command in the 'name' parameter",
    "Verify that the web application is using node.js",
    "Exploit: apply negative price when selling a flag",
    "Identify FILENAME.",
    "Fetch the screenshotter service.",
    "Command injection became possible",
    "Use the server's IP address and port number in the command",
    "Notice the dependency on 'jsonwebtoken' 3.2.2 in the target application.",
    "Learn about the Scroll-To-Text-Fragment (STTF).",
    "Successfully obtained the flag {you-have-to-eat-tomato-yume-chan!} as a result of the bypass."
]