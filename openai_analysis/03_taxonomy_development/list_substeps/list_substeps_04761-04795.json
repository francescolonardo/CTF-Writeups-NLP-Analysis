[
    "Viewed the stored data",
    "Verified that the obtained credentials do not provide the flag",
    "Locate the 'app.py' file",
    "Visit the login page.",
    "Noticed similarity to previous Drobots challenge.",
    "Consider whether this could present an entry point if a vulnerability, such as Template Injection, can be exploited successfully.",
    "Obtain table names from information_schema.tables",
    "Observed that the prefix changed in the unsuccessful purchase.",
    "Read the challenge description and requirements",
    "Identify the route as '/getFile?file=admins'.",
    "Discover several directories including /app and /flag.txt",
    "Access the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/robots.txt'",
    "Set up a wildcard DNS listener.",
    "Locate a valid credential.",
    "Examined the 'package.json' file in the site source.",
    "Use '' OR 1=1;#' as password for SQL injection",
    "Determine that LibreOffice is the specific tool employed for document conversions.",
    "Return the content of 'satellite.txt'.",
    "Create final payload using all the methods of bypassing and injecting discovered.",
    "The server misconstrues the public key as an HMAC private key due to the vulnerability.",
    "Attempted to login which returns 'User not active' error.",
    "Submit an authentication request with a username.",
    "Retrieve the flag.",
    "Observe that this allows the server to pass the security checks and flag the token as true",
    "Fame increase is hypothetically possible.",
    "URL-encoded the payload.",
    "Pull the details of the user with the proper role",
    "Set the cookie to a given string",
    "Open the command line tool.",
    "The 'Mutation' query allows change of a user password.",
    "Visited 'https://codeiiest.github.io/d4rks0c1ety.html'",
    "Send JavaScript code to the browser instance.",
    "Identify the app as a page.",
    "Identify the id of the newly created user from the received user list.",
    "Discovered that the 'uri' is appended to the backend URL using Python's urllib.parse.urljoin."
]