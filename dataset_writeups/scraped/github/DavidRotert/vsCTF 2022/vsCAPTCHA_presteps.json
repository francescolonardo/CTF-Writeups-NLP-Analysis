[
    "Understand the 'vsCAPTCHA' app written in TypeScript and Deno.",
    "Interpret that 'b1' and 'b2' are initialized with a random number from 0-500.",
    "Understand that the app works by listening to 'POST' requests in '/captcha'.",
    "Check if the Header 'x-captcha-state' is set.",
    "Check if the body JSON value 'solution' is equal to the expected CAPTCHA.",
    "Understand that if the expected value does not match 'solution', the JWT field 'failed' is set to 'true'.",
    "Understand that if the expected value does match, a new CAPTCHA is generated.",
    "Realize that the flag can be attained with more than 1000 CAPTCHA solves.",
    "Understand the CAPTCHA generating code, which uses random numbers to make the CAPTCHA text.",
    "Attempt a brute-forcing approach by trying out all remaining expected values.",
    "Identify the problem with brute force: JWT success counter is reset to 0 if the old token is invalid and expiry was not extended for failed solving attempts.",
    "Work out bugs in the Python code.",
    "Attempt to refactor the code and limit the try range.",
    "Consider another solution of predicting the random numbers generated since they are not cryptographically secure."
]