{
    "Authentication": [
        "Authenticate into the system.",
        "Create new users upon successful authentication.",
        "Verify authentication to the system.",
        "Observe the 'get_user_info' method during authentication in the User class.",
        "Create a new user.",
        "Attempt authentication with the user created.",
        "Observed the user registration process.",
        "Discovered that the value 'false' is forced into the admin field during the normal registration process.",
        "Crafted a record by setting a password with a ':' character.",
        "Successfully created an admin account.",
        "Used the created admin account to register with the username 'm3ssap0' and password 'pwnd:true'.",
        "Logged in using the newly created admin account.",
        "Observe the authentication response for a nonexistent user",
        "Observe the authentication response for an existing user with the wrong password",
        "Identified an authentication form on the webpage.",
        "Logged into the authentication form successfully, but noticed the flag didn't print.",
        "Attempted the SQL injection on the authentication form.",
        "Got authenticated as 'flagman69'.",
        "Choose 'discord' as the OAuth2 Identity Provider upon redirection.",
        "Identify the need to bypass server checks",
        "Ensure the user's name and password are equal to the secret",
        "Successful bypass of initial server checks",
        "Bypass further server checks",
        "Access flag"
    ],
    "Cookie Manipulation": [
        "Identify what server-side checks are being done.",
        "Note the session info",
        "Note that the conditional statement sets a cookie with the true flag if certain values are present",
        "Decide to forge the cookies",
        "Obtain the fake flag and the admin's PHP Session ID",
        "Spoof the cookies",
        "Obtain the real flag within the FLAG cookie",
        "Register a user",
        "Escalate privileges",
        "Replace the existing `login` cookie",
        "Use the modified cookie",
        "Identified the 'user_id' column as requiring a foreign key from the user table.",
        "Located Maria's session ID.",
        "Modified the PHPSESSIONID cookie in the browser to Maria's session ID.",
        "Impersonated Maria."
    ],
    "Web Application Flaws": [
        "Each page had one letter for the name",
        "Receive a message that this page is for authentication with an API located at port 4000.",
        "Receive an error: Forbidden, missing JWT authorization.",
        "Receive a JWT(token).",
        "Decode the JWT.",
        "Understand its format.",
        "Find out that it has only user privileges."
    ],
    "Website Interaction and Observation": [
        "Bypassed localhost address checks by setting the '$url' attribute to 'file:///var/www/html/config.php'.",
        "Understand that the goal is to exfiltrate the session cookies",
        "Discover a comment in the HTML source code referencing a potential vulnerability using TOTP",
        "Attempt to change the input field from 'password' to 'totp'",
        "Each page had one letter for the name",
        "Root Cause Analysis"
    ]
}