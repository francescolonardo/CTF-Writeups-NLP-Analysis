[
    "Used 'php://filter' to view the source of 'checkpass.php'.",
    "Used 'php://filter' again.",
    "Plugged the password ('w0rdc0unt123') from '$password' variable to the cookie.",
    "Input the payload '; ls #'.",
    "Input the payload to attempt to spawn a reverse shell.",
    "Executed './findaas flag.txt' command.",
    "Attempted to read the flag using 'cat ./system/of/a/down/flag.txt'.",
    "Decoded the password hash.",
    "Switched to the user 'ctf'.",
    "Authenticated using the password 'csictf'.",
    "Executed 'cat ./system/of/a/down/flag.txt' command.",
    "Printed the flag.",
    "Submit the form.",
    "Experiment with the '/getFile?file=...' route.",
    "Replace 'admins' with '.env' in the route.",
    "Or replace 'admins' with '../.env' in the route.",
    "Download the '.env' file.",
    "Create a new token.",
    "Use the JWT secret and the altered payload for the new token.",
    "Send a GET request.",
    "Include the correct 'Authorization' header.",
    "Use the new token for authentication.",
    "Receive a response text.",
    "Decode the flagged text.",
    "Construct a parameter that meets the conditions and requests the flag file",
    "Pass `['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js']` as an array via the GET parameter",
    "Use only the first five elements of the array to create the file name",
    "The file name resolves to `flag.txt` after the process",
    "Send a GET request to the server",
    "Include the parameter `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js` in the request",
    "Retrieve the flag from the server response",
    "The flag is `csictf{5h0uld_5tr1ng1fy_th3_p4r4ms}`",
    "Visit the disallowed route",
    "Obtain the flag",
    "Replace the existing flavor value in the cookie with 'chocolate'",
    "Encode new cookie value into base64",
    "Replace the original cookie with the new base64 encoded 'chocolate' cookie on the website",
    "Retrieve the flag",
    "The author sets up the environment to exploit the SQL Injection challenge.",
    "The payload is sent to the target URL via POST request.",
    "Attempt to login using 'user' as both username and password.",
    "Enter the payload 'or 1=1;--' into the 'pass' field to attempt a bypass.",
    "Execute the query '123' UNION SELECT 1, sqlite_version(), 3;--'.",
    "Execute the query '123' UNION SELECT name, sql, null from sqlite_master;--'.",
    "Execute the query '123' UNION SELECT flag, null, null from more_table;--'."
]