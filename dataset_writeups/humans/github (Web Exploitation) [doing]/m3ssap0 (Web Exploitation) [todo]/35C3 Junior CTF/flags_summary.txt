Examine the PHP code snippet on the page, which is vulnerable to directory traversal attacks due to improper input sanitization.

Understand that the website retrieves the user's preferred language from the HTTP header and tries to load a corresponding image from the `flags` folder.

Exploit the path traversal vulnerability by using `....//` instead of `../`, bypassing the `str_replace('../', '', $lang)` instruction.

Craft an HTTP header tampering attempt with the path traversal payload to potentially retrieve a flag.

Analyze the returned "image" containing base64-encoded JPEG data.

Decode the base64 data to obtain the flag.
