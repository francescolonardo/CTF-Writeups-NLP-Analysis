In this challenge also a login page is their.

And with no user info or details in source code I checked the docker files.

This challenge is similar to the `Drobots` challenge. Itâ€™s running `Flask` application with `MySQL`. So I looked into the docker file.

The `config.py` contains the database config info.

And `database.py` contain the database logic along with the hint but it is modified a little.
This time the `password` is getting verified with `passwordVerify`.

I again saved the request and gave it to `sqlmap`  which gave me the token and also bruteforced the password.

Now once logged in the functionality of the website was different.

Now I checked the `routes.py` file which contained a logic of the application. Here in the logic of communication the hint was given that the file escape for characters are not there for the filename. 

Then I tried the path traversal to get the `/etc/passwd` file. It worked. 

For this challenge they changed the location of the flag name from `flag.txt` to `signal_sleuth_firmware` in root which is written in the docker config.
Now we need to get the flag.
