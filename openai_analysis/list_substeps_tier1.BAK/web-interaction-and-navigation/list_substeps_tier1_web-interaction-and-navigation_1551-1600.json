[
    "Note the showcasing of uploaded photos.",
    "Experiment with the session_id.",
    "When faced with a security check.",
    "Attempt to bypass it by loading image URLs directly.",
    "Identify that the site allows script tags with nonces as external resources.",
    "Observed that 'c' parameter in requests was used to manipulate the user session, either to sign in, sign up, or sign out.",
    "Analyzed the code of the website",
    "Identified that 'ctx.state.user' equals to the 'username' cookie",
    "Used '__proto__' as the username parameter",
    "Set the 'language' parameter to 'key' in the JSON data.",
    "Understand that \u2018SCRIPT_NAME\u2019 can be set through an HTTP header, which can bypass the '/admin' denial in Nginx configuration",
    "Access the subclass information",
    "Observe that 'admin' is replaced in the username field.",
    "Include the payload in the username parameter.",
    "Identify that Meteor is being used.",
    "Deduce that the '$ne' filter checks if the body of the notes is not empty.",
    "Recognize that it passes the extension check due to .txt extension.",
    "Indicate another possible server.",
    "Bypassed regex filters.",
    "Construct the URL 'http://10.8.201.87:5000/checkbalance?amount=${num}' using the queried amount.",
    "The iframe source is /demo",
    "Message is only sent to the intended receiver",
    "Data is POST-ed to the /api/filter endpoint",
    "XSS on the challenge server is necessitated",
    "Identify the request parameters of the /find endpoint: condition, startsWith, endsWith, and debug.",
    "Encode the cookie-characters as response headers.",
    "Generate URLs that set cookies with parts of manipulated JavaScript code.",
    "Craft a request to '/post.php?post=../../../../../../etc/passwd'.",
    "Constructed a CL-TE request smuggling attack.",
    "Noticed the presence of file upload capability.",
    "Analyze the data being displayed",
    "Inject a final cookie.",
    "Name the cookie 'admin'.",
    "Use the manipulated cookies to gain access.",
    "Uploaded the .php16 file.",
    "Use the crafted query to access the admin console via internal request.",
    "Look for a value for 'confidential_documents'.",
    "Unlock the flag and source code using the uploaded PDFs.",
    "Extract the text before the period (.) from the Flask session cookie.",
    "Uploaded the final payload to the server.",
    "Used the same request to read the flag from the '/readflag' binary.",
    "Ran '/readflag' by passing it as an argument to the defined 'pwn' function.",
    "Authenticated as admin and explored login.php",
    "Received a 403 Forbidden error from the login.php page.",
    "Gained access to the login page.",
    "Identified fields labeled 'username' and 'password'.",
    "Verified it returns data for user ID 1.",
    "Utilized SQLMap targeting 'login.php' page.",
    "Analyze the form submission structure",
    "Examined how the note taking app functions."
]