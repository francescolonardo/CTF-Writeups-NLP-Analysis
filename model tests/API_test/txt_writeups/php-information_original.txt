DarkCTF 2020 – PHP İnformation

Category: web
Points: 198

Challenge

Let's test your php knowledge.
Flag Format: DarkCTF{}
http://php.darkarmy.xyz:7001

Solution
Connecting to the web page will give you the following PHP source code.
```php

include "flag.php";
echo show_source("index.php");
if (!empty($SERVER['QUERYSTRING'])) {
    $query = $SERVER['QUERYSTRING'];
    $res = parse_str($query);
    if (!empty($res['darkctf'])){
        $darkctf = $res['darkctf'];
    }
}
if ($darkctf === "2020"){
    echo "Flag : $flag";
}
if ($SERVER["HTTPUSERAGENT"] === base64decode("MjAyMF90aGVfYmVzdF95ZWFyX2Nvcm9uYQ==")){
    echo "Flag : $flag_1";
}
if (!empty($SERVER['QUERYSTRING'])) {
    $query = $SERVER['QUERYSTRING'];
    $res = parsestr($query);
    if (!empty($res['ctf2020'])){
        $ctf2020 = $res['ctf2020'];
    }
    if ($ctf2020 === base64encode("ZGFya2N0Zi0yMDIwLXdlYg==")){
        echo "Flag : $flag_2";
    }
}



if (isset($_GET['karma']) and isset($_GET['2020'])) {
    if ($_GET['karma'] != $_GET['2020'])
    if (md5($_GET['karma']) == md5($_GET['2020']))
        echo "<h1 style='color: chartreuse;'>Flag : $flag_3</h1></br>";
    else
        echo "<h1 style='color: chartreuse;'>Wrong</h1></br>";
}

?>
```
You have to satisfy all checks to print the flag.
For the last check you have to find two colliding MD5 strings. Based on this example you can write your script to generate the URL-encoded version of the original strings for which hexadecimal values are provided.
```php

$hex1 = '4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa200a8284bf36e8e4b55b35f427593d849676da0d1555d8360fb5f07fea2';
$hex2 = '4dc968ff0ee35c209572d4777b721587d36fa7b21bdc56b74a3dc0783e7b9518afbfa202a8284bf36e8e4b55b35f427593d849676da0d1d55d8360fb5f07fea2';
$bin1 = hex2bin($hex1);
$bin2 = hex2bin($hex2);
if ($bin1 == $bin2)
    echo 'The binary data is the same' . PHPEOL;
else 
    echo 'The binary data is not the same' . PHPEOL . PHP_EOL;
$md51 = md5($bin1);
$md52 = md5($bin2);
echo 'MD5 hash for binary #1: ' . $md51 . PHPEOL;
echo 'MD5 hash for binary #2: ' . $md52 . PHPEOL;
if ($md51 == $md52)
    echo 'The MD5 hashes are the same' . PHPEOL;
else 
    echo 'The MD5 hashes are not the same' . PHPEOL;
$urlencoded1 = urlencode($bin1);
$urlencoded2 = urlencode($bin2);
echo PHPEOL;
echo 'The urlencoded #1 is: '. $urlencoded1 . PHPEOL;
echo 'The urlencoded #2 is: '. $urlencoded2 . PHP_EOL;
```
The script will give you the strings.
```
The binary data is not the same
MD5 hash for binary #1: 008ee33a9d58b51cfeb425b0959121c9
MD5 hash for binary #2: 008ee33a9d58b51cfeb425b0959121c9
The MD5 hashes are the same
The urlencoded #1 is: M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3Bu%93%D8Igm%A0%D1U%5D%83%60%FB%07%FE%A2
The urlencoded #2 is: M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB%07%FE%A2
```
So you can craft the complete request.

GET /?darkctf=2020&ctf2020=WkdGeWEyTjBaaTB5TURJd0xYZGxZZz09&karma=M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&2020=M%C9h%FF%0E%E3%5C+%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2 HTTP/1.1
Host: php.darkarmy.xyz:7001
User-Agent: 2020_the_best_year_corona
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: close
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0

The webpage will give you the following.
```html
Flag : DarkCTF{Flag : very_Flag : niceFlag : _web_challenge_dark_ctf}
```
The flag is the following.

DarkCTF{very_nice_web_challenge_dark_ctf}

