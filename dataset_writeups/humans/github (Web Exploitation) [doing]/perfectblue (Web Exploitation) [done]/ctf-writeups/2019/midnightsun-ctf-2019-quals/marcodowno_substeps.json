{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify that the challenge is a Cross-site Scripting (XSS) challenge which involves exploiting a page to pop up an alert.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify that the challenge is a Cross-site Scripting (XSS) challenge."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Recognize that the challenge involves exploiting a page to pop up an alert."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Analyze the source code of the webpage, noticing it is a 'Markdown' converter that uses regex.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Analyze the source code of the webpage."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Notice that the webpage is a 'Markdown' converter."
                    },
                    {
                        "SubstepNumber": 2.3,
                        "SubstepString": "Recognize that the 'Markdown' converter uses regex."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Recognize that all open HTML tags '<' have been removed, making a traditional XSS attack impossible.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Recognize that all open HTML tags '<' have been removed."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Determine that the removal of open HTML tags '<' makes a traditional XSS attack impossible."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Identify a specific replace function that changes markdown format images into HTML image tags, but does not sanitize the 'alt' parameter.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Identify a specific replace function within the source code."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Recognize that the specific replace function changes markdown format images into HTML image tags."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Determine that the specific replace function does not sanitize the 'alt' parameter."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Decide to exploit the unsanitized 'alt' parameter by injecting a double quote to break out of the alt tag, followed by a JavaScript event handler for the XSS.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Decide to exploit the unsanitized 'alt' parameter."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Inject a double quote to break out of the alt tag."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Add a JavaScript event handler for the XSS attack."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Create and test the final URL 'http://marcodowno-01.play.midnightsunctf.se:3001/markdown?input=[\" onerror=\"alert(1)\"](http://x)' to trigger the XSS alert attack.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Create the final URL."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Test the final URL."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Trigger the XSS alert attack using the final URL."
                    }
                ]
            }
        ]
    }
}