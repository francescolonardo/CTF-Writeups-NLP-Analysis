[
    "Locate routes to '/login' and '/adminNames' in the website source.",
    "Visiting the '/login' route presents a form to fill.",
    "Submit form and monitor the Network Tab responses for a JWT in the 'token' header.",
    "Decode the JWT, e.g., at jwt.io, revealing a payload with 'username', 'password', and 'admin' keys.",
    "Note that the 'username' from the form inputs has undergone rot13 encoding to appear in the decoded JWT.",
    "Apply rot13 decoding on the 'admin' value, which returns 'false'.",
    "Form the intention to alter the decoded 'admin' value to a rot13-encoded 'true', which would require the JWT secret.",
    "Navigate to '/adminNames', which prompts a file download containing a GitHub URL.",
    "Visit the GitHub URL, which leads to a list of website admin usernames.",
    "Prepare to alter the JWT 'username' to the rot13-encoded version of a listed admin username.",
    "Seek the JWT secret by examining the request route for '/adminNames', i.e., '/getFile?file=admins'.",
    "Experiment with the '/getFile?file=...' route, e.g., by replacing 'admins' with '.env' or '../.env'.",
    "Download the '.env' file, which contains the JWT secret.",
    "Create a new token using the JWT secret and the altered payload (admin username and 'true' admin status).",
    "Visit the '/admin' route, monitoring the response for headers requiring a token.",
    "Identify the need for an 'Authorization' header containing a JWT.",
    "Send a GET request with the correct 'Authorization' header using the new token to authenticate.",
    "Receive a response text containing the flag in rot13 encoding.",
    "Decode the flagged text via rot13 to reveal the true flag."
]