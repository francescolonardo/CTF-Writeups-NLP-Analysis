[
    "Visited the challenge website and tried to understand how it works",
    "Identified an admin bot script that the challenge provided",
    "Used Chrome DevTools to examine how the note taking app functions",
    "Analyzed the notes app's JavaScript source code",
    "Discovered how the app uses local storage to save notes",
    "Learned that the search feature places the query into the URL's fragment identifier",
    "Saw that search results affect which image loads: 'y.png' if the query is found within a note, 'n.png' if it's not",
    "Understood that the admin bot visits any URL provided, first storing a flag as a note on the challenge server",
    "Realized it might be possible to force the admin bot to perform a search function on the server, checking if a given fragment identifier substring is part of the flag",
    "Considered using a cache probing attack to detect whether a search was successful based on whether 'y.png' or 'n.png' was cached",
    "Constructed a JavaScript payload to be run on the victim's browser that loads an iframe of the notes site with a search query and measures the time taken to fetch 'y.png'",
    "Automated a bruteforce attack with a Python script that loads a template including the query for each possible character",
    "Discovered that headless mode of Chrome doesn't perform cache partitioning, allowing the cache probing attack to succeed",
    "Found out the intended solution involves bypassing the cache partitioning by controlling a subdomain matching the site domain, as subdomains and port numbers are ignored in cache keys",
    "Identified that the website is GitHub Pages site and does not require proof of domain ownership, letting an attacker set up a GitHub Pages site with a subdomain that matches the site domain",
    "Created a new GitHub Pages site with a subdomain that matched the target domain",
    "Deployed the previously developed JavaScript payload to the new GitHub Pages site",
    "Launched the attack script on the new GitHub Pages site and observed the attack working even with Chrome's cache partitioning policy"
]