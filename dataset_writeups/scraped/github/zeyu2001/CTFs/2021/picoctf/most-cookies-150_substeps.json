{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Investigate the source code provided to understand how the application works and what you need to exploit. Find that the '/display' page checks the session cookie which has a `very_auth` session variable which needs to be set to `admin`.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Investigate the source code provided."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Understand how the application works and what needs to be exploited."
                    },
                    {
                        "SubstepNumber": 1.3,
                        "SubstepString": "Find that the '/display' page checks the session cookie."
                    },
                    {
                        "SubstepNumber": 1.4,
                        "SubstepString": "Identify the `very_auth` session variable that needs to be set to `admin`."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Discover that the Flask session secret key is hardcoded into the source code, selected randomly from an array of cookie names.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Discover that the Flask session secret key is hardcoded into the source code."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Realize that the secret key is selected randomly from an array of cookie names."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Decode the Flask session cookie by extracting the text before the period (.), adding padding, and applying Base64 decoding.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Extract the text before the period (.) from the Flask session cookie."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Add padding to the extracted text."
                    },
                    {
                        "SubstepNumber": 3.3,
                        "SubstepString": "Apply Base64 decoding to the padded text."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Notice that the remainder of the session cookie is a signature that will be checked server-side to prevent tampering.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Notice that the remainder of the session cookie is a signature."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Understand that the signature is checked server-side to prevent tampering."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Realize that the secret key needs to be cracked. To do this, write a script that bruteforces each of the hardcoded cookie names to find the one that matches the signature.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Realize that the secret key needs to be cracked."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Write a script to bruteforce each of the hardcoded cookie names."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Find the cookie name that matches the signature."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "After running the script, find the secret key is 'butter'.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Run the script."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Discover that the secret key is 'butter'."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "With the secret key, craft a new session cookie with the `very_auth` variable set to 'admin'. Use hashlib, URLSafeTimedSerializer and TimestampSigner in Python to achieve this.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Craft a new session cookie with the `very_auth` variable set to 'admin'."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Use hashlib, URLSafeTimedSerializer and TimestampSigner in Python."
                    },
                    {
                        "SubstepNumber": 7.3,
                        "SubstepString": "Utilize the secret key for crafting the new session cookie."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "After encoding the session, obtain a new session cookie as output.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Encode the session."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Obtain a new session cookie as output."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Place this newly crafted cookie back into the application using Burpsuite and observe that you now get the flag in the response.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Place the newly crafted cookie back into the application using Burpsuite."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Observe the flag in the response after placing the cookie."
                    }
                ]
            }
        ]
    }
}