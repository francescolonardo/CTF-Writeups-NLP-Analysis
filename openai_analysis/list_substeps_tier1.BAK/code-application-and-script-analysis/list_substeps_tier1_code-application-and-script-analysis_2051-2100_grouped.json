{
    "File Manipulation": [
        "Uploaded a PHP file to the server.",
        "Upload a PHP webshell.",
        "Redirected the PHP script to the target URL after 19 redirects."
    ],
    "Payload Development": [
        "Wrote the final payload.",
        "Crafted an SQL injection payload bypassing the filter limit",
        "Incorporated the PHP 'disable_functions' bypass exploit.",
        "Exploit the XSS vulnerability to send a POST request.",
        "Crafted an HTML payload for exploiting this vulnerability",
        "Explored potential SQL Injection through string manipulation.",
        "Build Remote Code Execution (RCE) payload using '().__class__.__subclasses__.__getitem__(x)' method."
    ],
    "Server Reconnaissance": [
        "Identify the exposed '.git' directory",
        "Identify the flag exposed within 'app.py'",
        "Identified the prototype pollution vulnerability.",
        "Identified how to leverage the prototype pollution."
    ],
    "Automated Attacks": [
        "Automated a bruteforce attack with a Python script.",
        "Launched the attack script on the new GitHub Pages site."
    ],
    "Data Extraction and Analysis": [
        "Retrieved data from 'R34L_F14G' column in 'users_data' table.",
        "Analyze the response headers.",
        "Refer to the downloaded JSON to understand the functionality of the `/new` endpoint.",
        "Extract 'P4s5_w0Rd' string using regex pattern.",
        "Index characters of 'P4s5_w0Rd' string."
    ],
    "Network Communication": [
        "Attempted to use ' in the username parameter.",
        "Test characters against the SQL injection",
        "Attempt to send this information to a remote server.",
        "Set up a remote server for this purpose.",
        "Receive the port number from the exfiltration attempt.",
        "Send JavaScript code to the browser instance."
    ],
    "Web Application Vulnerabilities": [
        "Identified parameters in the WebSocket message.",
        "Recognized that the parameters in the WebSocket message could be modified.",
        "Realized that modifying the parameters allows callback to our server.",
        "Used Remote Flutter Widgets package for decoding.",
        "Triggered the `api_post` event.",
        "Recognize that the Origin request header comprises the webpage URL in the format: ://hostname:port.",
        "Further exploited the SSTI vulnerability by crafting a URL that would read the contents of a 'flag.txt' file on the server using built-in Python functions within the Jinja2 template.",
        "Exploit the XSS vulnerability to send a POST request.",
        "Implemented the attack using 'Lazy-loading' property.",
        "Discovered that CSS attribute selectors can be used for exfiltration.",
        "Confirmed that the URL specified in the 'background' property is fetched conditionally."
    ],
    "Browser Behavior and Interactions": [
        "Notice that the entered URLs are rendered by a Chromium instance.",
        "Use the Promise to try and load a URL.",
        "Use the gained reverse shell."
    ],
    "Code Analysis and Exploitation": [
        "Looked for potential vulnerabilities in the search function.",
        "Noted the validation preventing 'localhost' or '127.0.0.1'.",
        "Used Remote Flutter Widgets package for decoding.",
        "Identified the specified `apiGet` URL.",
        "Execute our malicious JavaScript code when the page loads.",
        "Convert items in a dictionary to a list using 'list'.",
        "Write a script that creates an 'img' element with src set to contain the 'document.cookie' value."
    ]
}