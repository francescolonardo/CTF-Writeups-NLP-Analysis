[
    "Identify a prototype pollution vulnerability in '/api/tet/list' when merging request data.",
    "Observe that user input being passed to 'require()' leads to a Local File Inclusion (LFI) vulnerability.",
    "Propose to escalate this vulnerability to Remote Code Execution (RCE) given a valid .js file using an attribute that can be polluted to spawn a new process or execute a command.",
    "Consider that potential .js file candidates for execution are likely to be found in the node_modules folder which contains the source code of installed modules.",
    "Using 'grep' command to search for 'child_process' in all files of '/usr/local/lib/node_modules'.",
    "Find two scripts, 'changelog.js' and 'update-dist-tags.js' using 'child_process'.",
    "Analyze the 'changelog.js' script finding that it includes a 'execSync' call with a possible command injection.",
    "Notice that 'require()' call doesn't pass any arguments in 'changelog.js' so 'process.argv[2]' is undefined.",
    "Decide to pollute 'process.argv[2]' with a command injection payload before importing the 'changelog.js' file.",
    "Test this step locally with a python command that should create a reverse shell.",
    "Perform a prototype pollution on the web server by sending a POST request to the '/api/tet/list' endpoint with a JSON payload having '__proto__' polluted with a command injection payload in the 'data'.",
    "Exploit the LFI vulnerability to execute the 'changelog.js' script by sending a POST request to the '/api/tet/years' endpoint with a JSON payload in the request body specifying the 'changelog.js' script in the path.",
    "Expect to get a reverse shell as a result.",
    "Navigate to root directory and read the flag."
]