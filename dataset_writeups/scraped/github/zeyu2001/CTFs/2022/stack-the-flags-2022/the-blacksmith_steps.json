{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Analyze the Python code for the challenge that manages a market API."
            },
            {
                "StepNumber": 2,
                "StepString": "Understand that the customer eligibility to purchase exclusive items on the API depends on their fame and the sum of their point history."
            },
            {
                "StepNumber": 3,
                "StepString": "Identify a bug in the API where the index page is unauthenticated."
            },
            {
                "StepNumber": 4,
                "StepString": "Register as a new user on the API."
            },
            {
                "StepNumber": 5,
                "StepString": "Review the battle endpoint in which fame can hypothetically be increased, but as LOYALTY_SYSTEM_ACTIVE is set to False, it is impossible."
            },
            {
                "StepNumber": 6,
                "StepString": "Examine the buy endpoint to understand purchasing requests and conditions."
            },
            {
                "StepNumber": 7,
                "StepString": "Note that the code introduced a problem when attempting to add to an immutable namedtuple, which raises an AttributeError when performing the assignment."
            },
            {
                "StepNumber": 8,
                "StepString": "Realize that despite this raised exception, point history is successfully modified with each request to buy an item."
            },
            {
                "StepNumber": 9,
                "StepString": "Understand that while the namedtuple and tuple are immutable, if they contain mutable objects, those can still be modified in place."
            },
            {
                "StepNumber": 10,
                "StepString": "Learn that the += operator is not equivalent to an operation x = x + y in Python as it is in some other languages. This is because += performs the operation in place when possible and subsequently tries to assign the result back to the variable."
            },
            {
                "StepNumber": 11,
                "StepString": "Understand that the list was already successfully modified by the time an error was raised in the assignment step."
            },
            {
                "StepNumber": 12,
                "StepString": "To complete the challenge, send purchase requests to the API to increase loyalty point history a minimum of 1337 times."
            },
            {
                "StepNumber": 13,
                "StepString": "Unlock and buy the 'flagsword', completing the challenge."
            }
        ]
    }
}