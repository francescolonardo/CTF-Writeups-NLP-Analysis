{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify the source code of the web application with registration, login, and readfile functionalities"
            },
            {
                "StepNumber": 2,
                "StepString": "Login to get a token using that token to readfile and read the `68696e742e747874` (hex decoded as hint.txt)"
            },
            {
                "StepNumber": 3,
                "StepString": "Identify hint from the response suggesting length extension attack with password length less than 30 characters"
            },
            {
                "StepNumber": 4,
                "StepString": "Identify that the web application is running on node.js and that `package.json` should be present on the system"
            },
            {
                "StepNumber": 5,
                "StepString": "Use hashpumpy function to get the contents of package.json and establish that the password length is `22`"
            },
            {
                "StepNumber": 6,
                "StepString": "Find that `node-serialize` is used in User.js for creating the user-specific `token` and that the npm package is vulnerable to node-deserialization RCE attack "
            },
            {
                "StepNumber": 7,
                "StepString": "Identify that the application verifies the token and then forwards it to `decrypter` function which calls the `unserialize` function, which can provide Remote Code Execution (RCE)"
            },
            {
                "StepNumber": 8,
                "StepString": "Identify that to exploit RCE, payload needs to be signed with a valid signature which can be obtained from .env file"
            },
            {
                "StepNumber": 9,
                "StepString": "Read .env file to get the AUTH_SECRET value"
            },
            {
                "StepNumber": 10,
                "StepString": "Create a Python script to exploit the vulnerability and get Remote Code Execution (RCE)"
            },
            {
                "StepNumber": 11,
                "StepString": "Use the exploit to read the /etc/flag.txt file and obtain the flag"
            }
        ]
    }
}