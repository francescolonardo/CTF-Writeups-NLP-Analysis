[
    "Include a script for a basic alert in the uploaded LaTeX document",
    "Inspect the provided instance of the website.",
    "Recognize that pop-ups from a sandboxed page inherit sandbox attributes",
    "Waited and read the response as it came in.",
    "Recognized a restrictive CSP.",
    "Test the SQL payload by iteratively substituting different lengths for '$LENGTH$'.",
    "Inspected the proxy server.",
    "Leverage the SSRF vulnerability to communicate with the Redis instance.",
    "Flag is output after successful execution of the attack.",
    "Gained shell remote code execution.",
    "Passed an arbitrary character(',') into the X-FORWARDED-FOR HTTP header.",
    "Examine the `decrypter` function",
    "Attempt to upload a file.",
    "The URL is fetched for the second time once it's deemed legitimate.",
    "Realised that the generated PDF had the flag inside",
    "Connect to the website.",
    "Identified the challenge as a NoSQL Injection task",
    "Notice the challenge is about Cross-Site Scripting (XSS).",
    "Visit the URL submitted to the '/share' endpoint by an admin bot.",
    "Got authenticated as 'flagman69'.",
    "Explore other files in the repo",
    "Uploaded the final payload to the server.",
    "Noted that each character of the flag has a background URL corresponding to it.",
    "Observe the received Base64 encoded string.",
    "Read the challenge hint",
    "Used directory traversal (../) to access the flag",
    "Understand that script tags can be bypassed using 'onload' event handlers",
    "Figure out the XML External Entity (XXE) vulnerability in upload.php.",
    "Perform SSRF to localhost.",
    "Observed line in the scan result.",
    "Perform the 'cat' command on '/home/user/flag.txt'.",
    "Create a new script element.",
    "Uploaded .htaccess file.",
    "Checked npm audit for vulnerabilities",
    "Identified from the source code that a POST request with 'shell' as a parameter echoes the input."
]