{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Confirmed the challenge 'Gif2png' requires interaction with a Flask application.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Confirm the challenge 'Gif2png' exists."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Determine that the challenge requires interaction with a Flask application."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Identified the source code of the application by analyzing a Python script.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Analyze a Python script."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identify the source code of the application."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Focused on the command line subprocess interaction in this line: 'subprocess.Popen(f\"ffmpeg -i 'uploads/{file.filename}' \\\"uploads/{uid}/%03d.png\\\"\", shell=True)'.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Focus on the command line subprocess interaction."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Identify the specific line of code related to the command line subprocess interaction."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Identified the above critical line that could potentially lead to Remote Command Execution (RCE) through its interaction with the filename being uploaded.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Identify the critical line."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Realize that the critical line could potentially lead to Remote Command Execution (RCE)."
                    },
                    {
                        "SubstepNumber": 4.3,
                        "SubstepString": "Understand that the interaction with the filename being uploaded is the potential vulnerability for RCE."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Started preparing an attack by attempting to exploit the RCE vulnerability by using the '-vf drawtext=...' option within the 'ffmpeg' command in the application to inject a 'grep' command to look for the flag in the main.py file.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Begin preparing an attack."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Decide to exploit the RCE vulnerability."
                    },
                    {
                        "SubstepNumber": 5.3,
                        "SubstepString": "Choose the '-vf drawtext=...' option within the 'ffmpeg' command as the method of exploitation."
                    },
                    {
                        "SubstepNumber": 5.4,
                        "SubstepString": "Intend to inject a 'grep' command to look for the flag in the main.py file."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Crafted a payload for this on the form 'csictf.gif' -vf drawtext=\\\"text=$(grep ffLaG main.py)\\\"'.gif'. The crafted payload was intended to be used as the filename of the gif file being uploaded.",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Craft a payload for the attack."
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Formulate the payload in the format 'csictf.gif' -vf drawtext=\\\"text=$(grep ffLaG main.py)\\\"'.gif'."
                    },
                    {
                        "SubstepNumber": 6.3,
                        "SubstepString": "Intend to use the crafted payload as the filename of the uploaded gif file."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Uploaded the gif with the crafted filename to the application.",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Perform the action of uploading the gif."
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Use the crafted filename for the uploaded gif."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Analyzed the resulting PNG file from the uploaded and converted gif and found the flag written on it.",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Conduct an analysis on the resulting PNG file."
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Discover that the flag is written on the resulting PNG file."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Extracted the flag, which turned out to be 'cybrics{imagesaresocoolicandrawonthem}'.",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Perform the action of extracting the flag."
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Observe that the extracted flag is 'cybrics{imagesaresocoolicandrawonthem}'."
                    }
                ]
            }
        ]
    }
}