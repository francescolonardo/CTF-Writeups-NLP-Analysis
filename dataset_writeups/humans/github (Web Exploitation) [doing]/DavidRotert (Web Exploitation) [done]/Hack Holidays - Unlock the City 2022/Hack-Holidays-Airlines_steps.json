{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Downloaded the code for the app and examined the contents"
            },
            {
                "StepNumber": 2,
                "StepString": "Discovered a package vulnerability in node-serialize from npm install warnings and checking npm audit"
            },
            {
                "StepNumber": 3,
                "StepString": "Researched 'Code Execution through IIFE in node-serialize' advisory and what IIFE is"
            },
            {
                "StepNumber": 4,
                "StepString": "Attempted to start the app locally with `npm run start` and encountered an error due to permissions"
            },
            {
                "StepNumber": 5,
                "StepString": "Examined server code and discovered `const port = process.env.PORT || 80` line, clarifying how to start the app locally using a non-privileged port"
            },
            {
                "StepNumber": 6,
                "StepString": "Started the app with `PORT=8080 npm run start` and noted the creation of a `storage.db` file"
            },
            {
                "StepNumber": 7,
                "StepString": "Opened the `storage.db` file with a SQLite database reader to view stored data"
            },
            {
                "StepNumber": 8,
                "StepString": "Examined the application's source code, specifically routes: `index.js`, `login.js`, `logout.js`, and `signup.js`"
            },
            {
                "StepNumber": 9,
                "StepString": "Identified a dangerous `unserialize()` function used in the index route that decodes a user's cookie"
            },
            {
                "StepNumber": 10,
                "StepString": "Tested the ability to execute a malicious payload via the `unserialize()` function in a test JavaScript file"
            },
            {
                "StepNumber": 11,
                "StepString": "Corrected a mistake in the test where the payload was executed before serialization instead of after"
            },
            {
                "StepNumber": 12,
                "StepString": "Created a proper payload that reads the flag file via the file system and returns the flag as the username - to be displayed on the welcome page"
            },
            {
                "StepNumber": 13,
                "StepString": "Created the finalized payload, crafted directly into a representation of a session cookie that would be expected by the application"
            },
            {
                "StepNumber": 14,
                "StepString": "Applied the payload to the live environment via the session cookie, resulting in the successful retrieval of the flag"
            }
        ]
    }
}