[
    "Insert PHP code into DocumentName",
    "Ensure the inserted PHP code can execute commands remotely",
    "Open the 'play.php' file",
    "Analyze the source code",
    "Analyze the query within the source code",
    "Confirm that the observed behavior indicates a Blind SQL Injection vulnerability",
    "Write a Python script",
    "Use the Python script to discover the token",
    "Locate a line of PHP code within error logs.",
    "Access the PHP environment file.",
    "Inspect the source code on the feedback form page.",
    "Discover that the feedback is sent via XML composed by JavaScript.",
    "Identify that the application is vulnerable to XXE.",
    "Recognize that the 'author' field can be used to execute the attack.",
    "Assess that remote code execution is not possible.",
    "Design the XML code to expose the flag file from the current working directory.",
    "Extract the flag from the response.",
    "Analyze the source files",
    "Identify that the vulnerability exists",
    "Reveal the flag",
    "Remove the first file created.",
    "Recover the missing source files using Bazaar's 'revert' command.",
    "Start searching each revision.",
    "Adjust script to identify differences made.",
    "Identify two distinct changes to the 'index.php' file.",
    "Identify the first change.",
    "Identify the second change.",
    "Replaced the current 'pack-names' file with the downloaded 'pack-names' file.",
    "Ran 'bzr check' command in the command line.",
    "Analyze the certificate.",
    "Loop through a range of integers.",
    "Check if the page content contains 'MCA{'.",
    "If the content contains 'MCA{', print the content.",
    "Break the loop.",
    "Run the script.",
    "Discover that the 'name' parameter uses PHP serialization",
    "Realize the execution of PHP code when reading a file through LFI",
    "Include a PHP command in the 'name' parameter",
    "The PHP command is to display the ID of the current process",
    "Use a basic SQL injection payload",
    "Modify the SQL injection query",
    "Run the script to retrieve the password for the flag: gigem{h0peYouScr1ptedTh1s}",
    "Realize that removing a portion of the 'counter' cookie triggers a zlib Input Error",
    "Recognize Java Serialization notation at the start of the base64 decoded string",
    "Determine the 'value' attribute is at the end of the Java serialized object",
    "Inject the base64 version of the bash script.",
    "Retrieve the flag from the decoded base64 response.",
    "Examine the page's source code.",
    "Find that the login process is performed via a JavaScript file (scripts/login.js).",
    "Analyze the JavaScript file."
]