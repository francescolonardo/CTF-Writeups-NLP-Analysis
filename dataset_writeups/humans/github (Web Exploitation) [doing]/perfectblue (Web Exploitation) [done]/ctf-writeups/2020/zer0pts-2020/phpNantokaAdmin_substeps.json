{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify an SQLite injection in the form of create table statement with a limit of 32 characters.",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify the presence of a create table statement vulnerability."
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Determine that the injection is limited to 32 characters."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Discover a validation function in the code that prohibits certain special characters and words from being included in the injection string.",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Find the validation function in the code."
                    },
                    {
                        "SubstepNumber": 2.2,
                        "SubstepString": "Identify the list of banned words and special characters that the injection string must not contain."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Find a restriction bypass using a \"CREATE TABLE ... SELECT\" SQL statement to transfer results from a select statement into a new table.",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Discover the possibility of using a \"CREATE TABLE ... SELECT\" SQL statement."
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Understand how the SQL statement can transfer results from the select statement into a new table."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Make necessary adjustments to the injection to fit the limitations by wrapping unnecessary parts of the query in [] to create a valid query.",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Identify the unnecessary parts of the query that need to be wrapped in [] for it to become a valid query."
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "Apply the necessary adjustments to the injection to ensure it fits within the limitations."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Compile and execute the entire query.",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Compile the modified injection query."
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Execute the compiled query."
                    }
                ]
            }
        ]
    }
}