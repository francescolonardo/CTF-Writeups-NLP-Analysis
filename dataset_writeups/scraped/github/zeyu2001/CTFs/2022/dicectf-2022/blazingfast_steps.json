{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Reviewed the site's JavaScript and understood that the 'demo()' function is called on the 'demo' GET request parameter. This results in the setting of the innerHTML of the 'result' element."
            },
            {
                "StepNumber": 2,
                "StepString": "Discovered that the 'mock()' function is a wrapper function that runs the function exposed by the WASM module."
            },
            {
                "StepNumber": 3,
                "StepString": "Identified that the WASM module uses the 'str.length' to validate the buffer, which can be less than the number of characters written into it due to inconsistencies in length measurement of Unicode characters."
            },
            {
                "StepNumber": 4,
                "StepString": "Found that when converting to upper case, the Unicode character '\u00df' turns into two characters 'SS'. This allows us to bypass the JavaScript's check of rejecting any character with charCode greater than 128."
            },
            {
                "StepNumber": 5,
                "StepString": "Developed the XSS payload using <img src='x' onerror='PAYLOAD'> by using the fact that JavaScript is a case-sensitive language, and our payload is converted to uppercase before being written to the innerHTML."
            },
            {
                "StepNumber": 6,
                "StepString": "Created a final payload by modifying the initial JavaScript payload and replacing the string 'alert(1)' with the converted string of our JavaScript payload that fetches localStorage.getItem('flag') and sends it to the attacker's URL."
            },
            {
                "StepNumber": 7,
                "StepString": "Ran the Python script to generate a URL-encoded string that can be placed in the URL parameter 'demo', which will execute our malicious JavaScript code when the page loads."
            }
        ]
    }
}