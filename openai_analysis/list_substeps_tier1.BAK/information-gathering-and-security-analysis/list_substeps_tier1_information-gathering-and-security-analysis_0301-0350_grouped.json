{
    "Initial Setup": [
        "Load the CTF challenge."
    ],
    "Security Analysis": [
        "Assume the application is likely behind AWS WAF.",
        "Pay particular attention to rules blocking longer payloads."
    ],
    "Server and Backend Analysis": [
        "Observed that there is a proxy server and a backend server accessible at provided URLs."
    ],
    "Flag Obtaining and Goal Identification": [
        "Obtained the flag 'CTFSG{d0nT_toUcH_mY_c00k13s}'.",
        "Identify the end goal as getting access to /flag."
    ],
    "Vulnerability Scanning": [
        "Search for vulnerabilities in other functions.",
        "Identified a Server Side Request Forgery (SSRF) vulnerability.",
        "Identified the specified `apiGet` URL.",
        "Identified the specified `apiGet` URL.",
        "Find a potential flag in the search results.",
        "Understand that this is due to inconsistencies in length measurement of Unicode characters."
    ],
    "Security Challenge Understanding": [
        "Study and understand the given client-side web exploitation challenge."
    ],
    "Flag Acquisition": [
        "Obtained the first flag."
    ],
    "Reference Discovery": [
        "Discover the article by PortSwigger",
        "From previous knowledge and references"
    ],
    "Admin Page Leakage": [
        "Leaked the contents of the admin page",
        "Searched the leaked contents of the admin page"
    ],
    "Search and Guesswork": [
        "Determined a correct guess for the search."
    ],
    "Subdomain Investigation": [
        "Discovered that the subdomain 'jsapi.tech' points to 'sohomdatta1.github.io'."
    ],
    "Flag Retrieval": [
        "Retrieve the challenge flag."
    ],
    "Reconnaissance": [
        "Conduct reconnaissance to identify potential target web application."
    ],
    "Server-side Tools Analysis": [
        "Gather information about the server-side tools used for document conversions."
    ],
    "Vulnerability Research": [
        "Conduct research to identify potential vulnerabilities of the LibreOffice tool."
    ],
    "Input Identification": [
        "Identified the input."
    ],
    "Flag Environment Awareness": [
        "Fame increase is hypothetically possible.",
        "Realize that the flag is in the environment variable."
    ],
    "API Endpoint Investigation": [
        "Found API endpoint details in the downloaded files"
    ],
    "Permissions Enumeration": [
        "Enumerated permissions using 'enumerate-iam' tool",
        "Enumerated permissions using 'pacu' tool"
    ],
    "Flag Discovery": [
        "Identified a post made by admin with the flag."
    ],
    "Resource Fetching Analysis": [
        "Notice that the resources are fetched from '/ajax/articles?cat=news'."
    ],
    "Backend Query Refinement": [
        "Leverage a backend server to eliminate unsuccessful queries and zero in on the correct flag"
    ],
    "Source File Retrieval": [
        "Retrieve source files for AsmBB and FreshLib using wget"
    ],
    "Request Smuggling Identification": [
        "Identify ATS and Waitress as the systems involved in the smuggling.",
        "Understand that the Request smuggling vulnerabilities were discovered during previous research."
    ],
    "Payload Creation": [
        "Write PHP payload to '/tmp/pwn.php'."
    ],
    "Control Exploitation": [
        "Recognize that this control can be used to exploit the vulnerability."
    ],
    "Folder Discovery": [
        "Discovered a folder '/ctf'."
    ],
    "Hash Discovery": [
        "Found a password hash '6f246c872cbf0b7fd7530b7aa235e67e'."
    ],
    "JWT Search": [
        "Look for a JWT in the 'token' header of the responses."
    ],
    "Download Inspection": [
        "Inspect the downloaded file and find a GitHub URL."
    ],
    "Flag Identification": [
        "Recognize that the response text contains the flag.",
        "Note that the flag is in rot13 encoding.",
        "Recognize that the decoded text is the true flag."
    ],
    "Website Exploration": [
        "Signify checking out the website's 'robots.txt'",
        "Open the website",
        "Observe that the website serves an 'index.html' file"
    ]
}