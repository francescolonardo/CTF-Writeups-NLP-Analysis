The website takes a `name` parameter and allows you to read some files. 

[HTTP POST request sent to the server containing form data with a single field named "name" and value "foo". The server responds with a 200 OK HTTP status code and a HTML page containing a greeting message and a list of three hyperlinks to text files.]

Analyzing the read files page, you can discover that the website is vulnerable to LFI.

You can abuse this vulnerability to analyze the `/proc/self/` directory in order to how the website stores the passed `name` parameter.

It seems that `name` is stored using PHP serialization and can be located into `/proc/self/fd/9` file. If you perform LFI to read a file including PHP code, it will be executed.

So you can pass a PHP command for the `name` value, like `<?php system('id'); ?>`.

And then use LFI to execute it.

You can now enumerate the root folder.

So you can discover the `/flag_is_here` folder and enumerate it.

And finally print `flag.txt` file.