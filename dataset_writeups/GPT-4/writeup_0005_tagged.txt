Title: Exploiting File Upload Vulnerability to Execute Code
Primary topic: Web Exploitation
Secondary topic: File Upload Vulnerability
Tools used: None
Keywords: PHP, code execution, sensitive information, validation, sanitization, CTF

#overview
The writeup describes an exploit of a file upload vulnerability in a web application, which allowed the attacker to execute arbitrary code on the server and gain access to sensitive information.

#analysis
The attacker discovered that the web application performed only basic checks on the uploaded files, such as validating the file extension. The attacker crafted a malicious image file with embedded PHP code and uploaded it to the web application using the profile image upload feature. The attacker was then able to access the uploaded image file directly through its URL, triggering the execution of the embedded PHP code. The PHP script revealed sensitive information, including the location of the flag for the Web Exploitation challenge.

#attack_execution
To execute the attack, the attacker created a new image file with a PHP script inserted at the beginning, which would execute when the server processed the file. The attacker uploaded the malicious image file to the web application using the profile image upload feature, and then accessed the uploaded image file directly through its URL, triggering the execution of the embedded PHP code.

The attacker was able to gain access to sensitive information needed to complete the challenge by exploiting the file upload vulnerability. This highlights the importance of implementing secure file upload mechanisms, including thorough validation and sanitization of uploaded files.

[CODE_REMOVED]

In conclusion, this CTF writeup demonstrates the importance of secure file upload mechanisms and the potential risks of not properly validating and sanitizing uploaded files.