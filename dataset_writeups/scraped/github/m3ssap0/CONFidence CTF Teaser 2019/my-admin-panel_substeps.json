{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Connected to the website and observed it has directory listing active",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Connect to the website"
                    },
                    {
                        "SubstepNumber": 1.2,
                        "SubstepString": "Observe that directory listing is active"
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Identified two files 'login.php' and 'login.php.bak' listed",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Identify 'login.php' and 'login.php.bak' files"
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Observed that the first page displayed the message 'Not authenticated'",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Observe the contents of the first page"
                    },
                    {
                        "SubstepNumber": 3.2,
                        "SubstepString": "Note that the message 'Not authenticated' is displayed"
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Used 'login.php.bak' to view PHP source code",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Access 'login.php.bak'"
                    },
                    {
                        "SubstepNumber": 4.2,
                        "SubstepString": "View PHP source code"
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Discovered that a cookie named 'otadmin' must be passed, which must follow the regex format /^{\"hash\": [0-9A-Z\"]+}$/",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Discover the requirement of the 'otadmin' cookie"
                    },
                    {
                        "SubstepNumber": 5.2,
                        "SubstepString": "Note the regex format /^{\"hash\": [0-9A-Z\"]+}$/"
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Crafted a correct value for the cookie: {\"hash\": \"T35T\"}",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Craft a value for the cookie"
                    },
                    {
                        "SubstepNumber": 6.2,
                        "SubstepString": "Ensure the value is {\"hash\": \"T35T\"}"
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Examined the script and found that a hint was given if cookie value did not match MD5 hash of '$cfg_pass' variable",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Examine the script"
                    },
                    {
                        "SubstepNumber": 7.2,
                        "SubstepString": "Find the hint related to cookie value matching MD5 hash of '$cfg_pass' variable"
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Used crafted cookie value to print the hint, and then analysed the hint",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Use the crafted cookie value"
                    },
                    {
                        "SubstepNumber": 8.2,
                        "SubstepString": "Print the hint"
                    },
                    {
                        "SubstepNumber": 8.3,
                        "SubstepString": "Analyze the hint"
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Realised that the issue may lie in a type juggling scenario in the comparison: $session_data['hash'] != strtoupper(MD5($cfg_pass))",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Realize the issue in the comparison"
                    },
                    {
                        "SubstepNumber": 9.2,
                        "SubstepString": "Identify the type juggling scenario"
                    },
                    {
                        "SubstepNumber": 9.3,
                        "SubstepString": "Note the comparison $session_data['hash'] != strtoupper(MD5($cfg_pass))"
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Decided to exploit this point by making an educated guess on the numbers at the beginning of the MD5 string",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Decide to exploit the type juggling scenario"
                    },
                    {
                        "SubstepNumber": 10.2,
                        "SubstepString": "Make an educated guess on the numbers at the beginning of the MD5 string"
                    }
                ]
            },
            {
                "StepNumber": 11,
                "StepString": "Created a Python script to automate the trial and error process to exploit this type juggling loophole",
                "Substeps": [
                    {
                        "SubstepNumber": 11.1,
                        "SubstepString": "Create a Python script"
                    },
                    {
                        "SubstepNumber": 11.2,
                        "SubstepString": "Design the script to automate the trial and error process"
                    },
                    {
                        "SubstepNumber": 11.3,
                        "SubstepString": "Exploit the type juggling loophole"
                    }
                ]
            },
            {
                "StepNumber": 12,
                "StepString": "Executed the Python script and found the correct value for the cookie 'otadmin' to be {\"hash\": 389}",
                "Substeps": [
                    {
                        "SubstepNumber": 12.1,
                        "SubstepString": "Execute the Python script"
                    },
                    {
                        "SubstepNumber": 12.2,
                        "SubstepString": "Find the correct value for the cookie 'otadmin' (\"hash\": 389)"
                    }
                ]
            },
            {
                "StepNumber": 13,
                "StepString": "Used the discovered cookie to reveal the flag: p4{wtf_php_comparisons_how_do_they_work}",
                "Substeps": [
                    {
                        "SubstepNumber": 13.1,
                        "SubstepString": "Use the discovered cookie"
                    },
                    {
                        "SubstepNumber": 13.2,
                        "SubstepString": "Reveal the flag: p4{wtf_php_comparisons_how_do_they_work}"
                    }
                ]
            }
        ]
    }
}