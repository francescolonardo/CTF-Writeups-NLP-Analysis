{
    "AttackModel": {
        "NameOfTheChallenge": "Easy Pisy",
        "AttackerCapabilities": [
            "Knowledge of cryptographic vulnerabilities",
            "Ability to generate PDF files with the same SHA1 hash"
        ],
        "Target": {
            "Type": "Web Application",
            "Vulnerabilities": [
                "Accepting PDF files without proper validation",
                "Using a broken hash algorithm (SHA1) for verification"
            ],
            "SecurityMeasures": [
                "Requiring the text inside the PDF to start with 'ECHO' for signing"
            ]
        },
        "Steps": [
            {
                "StepNumber": 1,
                "Description": "The attacker identifies that the web application accepts PDF files and signs them if the text inside starts with 'ECHO'. They also identify that the default signature algorithm is SHA1.",
                "ToolsUsed": "null",
                "StepDetails": {
                    "Hypothesis": "The attacker hypothesizes that they can exploit the broken SHA1 algorithm to generate two PDF files with the same hash and use the signature from one file on the other.",
                    "Action": "The attacker generates two PDF files (pdf1 and pdf2) with the same SHA1 hash using an external tool.",
                    "Result": "The attacker successfully generates pdf1 and pdf2 with the same SHA1 hash.",
                    "Success": "Success",
                    "FailingReason": "null"
                }
            },
            {
                "StepNumber": 2,
                "Description": "The attacker uploads pdf1 (a.pdf) to the web application and gets it signed.",
                "ToolsUsed": "null",
                "StepDetails": {
                    "Hypothesis": "The attacker believes that by getting pdf1 signed, they can use the signature on pdf2.",
                    "Action": "The attacker uploads pdf1 and requests it to be signed.",
                    "Result": "The server signs pdf1 and provides a signature.",
                    "Success": "Success",
                    "FailingReason": "null"
                }
            },
            {
                "StepNumber": 3,
                "Description": "The attacker uses the signature from pdf1 on pdf2 and submits it to the server.",
                "ToolsUsed": "null",
                "StepDetails": {
                    "Hypothesis": "The attacker assumes that the server will recognize the signature from pdf1 on pdf2.",
                    "Action": "The attacker submits pdf2 with the signature from pdf1 to the server.",
                    "Result": "The server recognizes the signature from pdf1 on pdf2 and provides the flag.",
                    "Success": "Success",
                    "FailingReason": "null"
                }
            }
        ]
    }
}