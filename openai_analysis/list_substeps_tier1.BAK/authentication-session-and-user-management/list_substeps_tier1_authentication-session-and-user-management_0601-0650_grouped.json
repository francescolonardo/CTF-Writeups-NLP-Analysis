{
    "Authentication and Authorization": [
        "Determine that the 'notes.count' function is unauthenticated.",
        "Change session username to 'root' using client-side cookies.",
        "Sign the Flask cookie with the desired username to authenticate as 'root'",
        "Separate user accounts were used."
    ],
    "Message Manipulation and Verification": [
        "Messages were signed using ED25519.",
        "Signing was done to prevent tampering.",
        "Messages and signatures were verified by the frontend.",
        "GET query parameters were added to the messages before verification.",
        "Created new user with username 'FRONTEND_USERNAMEamount1337' to manipulate the message format.",
        "Server was able to provide signature for this manipulated message."
    ],
    "User Actions and Account Manipulation": [
        "Signed up on the website.",
        "The bash script would only spawn the shell if the caller is root",
        "If the history length is not three, the balance is exceeded.",
        "Discovered that using 'test' or 1-- - can obtain possible account credentials",
        "Message is only sent to the intended receiver",
        "User's cookies are sent along with the POST request",
        "Server code for /api/filter endpoint returns the hash of the user's token in the response",
        "Received the admin's hash on the exploit server",
        "Admin's token access is required to access the flag",
        "Recognize the XSS prevention methods implemented by the site.",
        "Inject a Set-Cookie header to set the admin's ID cookie to your own session.",
        "Preserve the original admin's ID.",
        "Set malicious cookies.",
        "Make a callback to our server with the data.",
        "Identify the need to overwrite the <userID>_isAdmin value.",
        "Discover the PHP sessions are file-based.",
        "Identify the capability of setting the 'theme' value in the session using the 'theme' GET query parameter.",
        "Understand the possibility of accessing the session file through the LFI vulnerability."
    ],
    "Multi-Factor Authentication (MFA) Bypass": [
        "Given login credentials for an online portal with MFA and Captcha code protection.",
        "Notice a 'login_session_token' is received upon login attempt.",
        "Identify that the 'login_session_token' is used when making a query to 'mfa_service.php'.",
        "Discover that there is no limit to the number of attempts made with the same token, as long as correct CAPTCHA code is provided.",
        "Successfully use the same CAPTCHA code to test two different MFA tokens by sending them both in the same HTTP request.",
        "Understand that MFA token is only 4 digits and take advantage of this limited search space by sending batches of thousands of queries together, thereby reducing the number of required CAPTCHA responses.",
        "Found a successful login attempt among the batched requests.",
        "Obtained the flag `MetaCTF{if_brute_force_doesnt_work_use_more_brute_forceeeeeeee}`."
    ],
    "Request Smuggling": [
        "Identified lack of validation for 'Content-Length' headers as the cause of the vulnerability.",
        "Identified the usage of 'Content-Length' header with 'Transfer-Encoding' header as a request smuggling vulnerability.",
        "Recognized the presence of admin's 'Cookie' and 'X-Access' headers.",
        "Viewed the admin's cookie and 'X-Access' headers.",
        "Used the admin's cookies to visit 'private.php'."
    ],
    "User Enumeration and File Retrieval": [
        "Registration process was completed in the system.",
        "Utilized two accounts for user enumeration.",
        "Successfully established the ability to enumerate usernames at `/users/<username>`.",
        "Observed server side validation for valid user during file retrieval at `/users/<username>/files/<filename>`."
    ],
    "User Interface and Log In": [
        "Log into the application",
        "Submit the registration form",
        "Escalate privileges",
        "Verify that the role was changed to 'admin'",
        "Identify the input fields for the login function."
    ]
}