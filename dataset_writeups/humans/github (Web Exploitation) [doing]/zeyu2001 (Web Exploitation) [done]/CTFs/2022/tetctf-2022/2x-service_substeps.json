{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Identify that the code revolves around an XML parser",
                "Substeps": [
                    {
                        "SubstepNumber": 1.1,
                        "SubstepString": "Identify that the code involves an XML parser."
                    }
                ]
            },
            {
                "StepNumber": 2,
                "StepString": "Notice the use of 'ElementInclude.include(root)' in the code",
                "Substeps": [
                    {
                        "SubstepNumber": 2.1,
                        "SubstepString": "Notice the use of 'ElementInclude.include(root)' in the code."
                    }
                ]
            },
            {
                "StepNumber": 3,
                "StepString": "Understand that 'ElementInclude.include(root)' allows the use of XInclude directives",
                "Substeps": [
                    {
                        "SubstepNumber": 3.1,
                        "SubstepString": "Understand that 'ElementInclude.include(root)' allows the use of XInclude directives."
                    }
                ]
            },
            {
                "StepNumber": 4,
                "StepString": "Recognize that XInclude directives allow the parsing of files",
                "Substeps": [
                    {
                        "SubstepNumber": 4.1,
                        "SubstepString": "Recognize that XInclude directives allow the parsing of files."
                    }
                ]
            },
            {
                "StepNumber": 5,
                "StepString": "Identify that the server checks if 'text' is not included in 'xml.lower()'",
                "Substeps": [
                    {
                        "SubstepNumber": 5.1,
                        "SubstepString": "Identify that the server checks if 'text' is not included in 'xml.lower()'."
                    }
                ]
            },
            {
                "StepNumber": 6,
                "StepString": "Understand that 'parse=\"xml\"' raises an error when used with non-XML content",
                "Substeps": [
                    {
                        "SubstepNumber": 6.1,
                        "SubstepString": "Understand that 'parse=\"xml\"' raises an error when used with non-XML content."
                    }
                ]
            },
            {
                "StepNumber": 7,
                "StepString": "Devise a workaround by defining XML entities to form the string 'text'",
                "Substeps": [
                    {
                        "SubstepNumber": 7.1,
                        "SubstepString": "Devise a workaround by defining XML entities to form the string 'text'."
                    }
                ]
            },
            {
                "StepNumber": 8,
                "StepString": "Use the workaround to parse the contents of '/etc/passwd' to the results",
                "Substeps": [
                    {
                        "SubstepNumber": 8.1,
                        "SubstepString": "Use the workaround to parse the contents of '/etc/passwd' to the results."
                    }
                ]
            },
            {
                "StepNumber": 9,
                "StepString": "Realize that the flag is in the environment variable",
                "Substeps": [
                    {
                        "SubstepNumber": 9.1,
                        "SubstepString": "Realize that the flag is in the environment variable."
                    }
                ]
            },
            {
                "StepNumber": 10,
                "StepString": "Read '/proc/self/environ' to retrieve the flag",
                "Substeps": [
                    {
                        "SubstepNumber": 10.1,
                        "SubstepString": "Read '/proc/self/environ' to retrieve the flag."
                    }
                ]
            }
        ]
    }
}