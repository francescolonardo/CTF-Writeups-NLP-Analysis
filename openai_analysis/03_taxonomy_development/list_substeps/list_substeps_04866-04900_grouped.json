{
    "File and Directory Analysis": [
        "Identified the '/flag' endpoint in the robots.txt file",
        "Checked the source code of the homepage",
        "Examined the functionality endpoint '/files/'",
        "Navigate to the '/home/user' directory",
        "Observe that the '/pleb' proxy isn't forwarding non-ASCII characters",
        "Retrieved the PHP source code",
        "Identify FILENAME"
    ],
    "Command Injection": [
        "Defined final payload using 'wget' and command substitution",
        "Send the payload 'url=inctf://redis:6379/_SET <userID>_isAdmin \"yes\"'",
        "Use the server's IP address and port number in the command",
        "Exploit: apply negative price when selling a flag",
        "Command injection became possible"
    ],
    "Web Navigation & Interaction": [
        "Noticed an excerpt button on the webpage",
        "Analyze the website",
        "Made a GET request with the payload",
        "Visit the website mentioned in the challenge"
    ],
    "JSON Payload Manipulation": [
        "Realized JSON payload cannot have spaces due to regex match",
        "Create a JWT with the permissions set to 'admin' and the secretid set to a string that does not exist in the secrets array"
    ],
    "Web Framework & Library Analysis": [
        "Noticed Angular also follows redirects",
        "Connected to the database using the credentials from the JavaScript code",
        "Note the usage of the 'f()' method on the 'username' field",
        "Notice the dependency on 'jsonwebtoken' 3.2.2 in the target application"
    ],
    "Security Exploitation Techniques": [
        "Include a PHP command in the 'name' parameter",
        "Use the server's IP address and port number in the command"
    ],
    "DOM Manipulation & Analysis": [
        "Find a section in DOMPurify's unit tests"
    ],
    "Authentication & Authorization Testing": [
        "Intercept register request",
        "Attempt to login using 'user' as both username and password",
        "Inspect parameters in the request"
    ],
    "Information Retrieval & Malicious Code": [
        "Encode the malicious serialized class in base64",
        "Extract 'P4s5_w0Rd' string using regex pattern",
        "Find the secret key for the debugger"
    ],
    "Web Application Technologies": [
        "Verify that the web application is using node.js"
    ],
    "Miscellaneous": [
        "Fetch the screenshotter service",
        "Learn about the Scroll-To-Text-Fragment (STTF)",
        "Successfully obtained the flag {you-have-to-eat-tomato-yume-chan!} as a result of the bypass"
    ],
    "Debugging & Logging": [
        "Added debug prints to the file for the GET path"
    ]
}