{
    "AttackModel": {
        "Steps": [
            {
                "StepNumber": 1,
                "StepString": "Visited the CTF challenge site to analyse the form provided to upload images."
            },
            {
                "StepNumber": 2,
                "StepString": "Checked the robots.txt on the site to examine the source.zip that reveals all the source code."
            },
            {
                "StepNumber": 3,
                "StepString": "Downloaded the source.zip file and opened it to find upload.php, which is the relevant code."
            },
            {
                "StepNumber": 4,
                "StepString": "Immutable code inspection of upload.php helped to figure out there's an XML External Entity (XXE) vulnerability when it loads SVG files."
            },
            {
                "StepNumber": 5,
                "StepString": "Identified that in the php code, there were serialization in the __construct and __destruct methods."
            },
            {
                "StepNumber": 6,
                "StepString": "Hosted a document type definition (DTD) on a personal domain for blind exfiltration of files."
            },
            {
                "StepNumber": 7,
                "StepString": "Used the PHP /// uri with their base64 encoding filter to allow for file reading."
            },
            {
                "StepNumber": 8,
                "StepString": "Identified that I need to use the phar:// uri in the XML External Entity vulnerability to make PHP deserialize my object of the Image type."
            },
            {
                "StepNumber": 9,
                "StepString": "Understood that I need to create a controlled filename and when __destruct would be called. This would lead to a command execution in the create_thumb function."
            },
            {
                "StepNumber": 10,
                "StepString": "Used a techinique to disguise a valid phar file as a JPEG image."
            },
            {
                "StepNumber": 11,
                "StepString": "Uploaded the disguised phar file and used the XML External Entity vulnerability to call it with the phar:// uri."
            },
            {
                "StepNumber": 12,
                "StepString": "Created a phar that when unserialized, it created an Image object with a controlled filename which would execute the command './flag_dispenser' when the __destruct method was called."
            },
            {
                "StepNumber": 13,
                "StepString": "Command execution triggered execution of the flag_dispenser to get the flag."
            }
        ]
    }
}