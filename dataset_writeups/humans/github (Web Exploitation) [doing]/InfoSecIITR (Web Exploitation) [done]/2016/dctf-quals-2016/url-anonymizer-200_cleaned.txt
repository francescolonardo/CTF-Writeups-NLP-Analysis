One of the different admin pages (namely, `report`), was vulnerable to an SQL injection from the `id` parameter. This allowed us to leak one value of one column of information directly to the output.

Additionally, it was easy to notice that it was using MySQL. Hence, we could use the different "special tables" in MySQL with a `UNION SELECT` based query and obtain information.

The most irritating part of this process was finding the number of columns in the union select attack, since (for some reason), my extensions on Firefox were messing up, and I was constantly forced to manually keep running URLencode and URLdecode :(

Nevertheless, using `group_concat()`, it is possible to obtain all entries in a column, as a single row, and we used that to obtain information in a very fast way.

Without further ado, here are the different queries that were run (URLdecoded versions, for easier reading):
[A query to determine the number of columns in the UNION SELECT attack]
[A query to obtain table names from the information_schema.tables]
[A query to obtain column names from the information_schema.columns]
[A query to retrieve the flag from the flag column in the flag table]

The `flag` column in the `flag` table had the flag.
