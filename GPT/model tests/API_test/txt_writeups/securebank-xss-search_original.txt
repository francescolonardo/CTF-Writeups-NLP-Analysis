SecureBank XSS Search
This challenge required us to find out the account balance of the admin.
Looking carefully at the responses received from the web application, we would realise that the /checkbalance endpoint is vulnerable to a class of vulnerabilities known as XS Leaks.
If the queried amount is more than the actual balance in the user's account, the user is redirected. Otherwise, no redirection occurs. It would be possible to get the length of the window's history to check whether this redirection is occurred, allowing us to perform an "XS Search" on the user's account balance.
To obey the Same Origin Policy (SOP), we would need to do the following:

From the exploit server, open http://10.8.201.87:5000/checkbalance?amount=${num} as a new window.
Wait for the site to load. Depending on the balance, the window may be redirected to /.
Change the window's location back to the exploit server, so that both the original and new windows are of the same origin
We can now check the window's history.length attribute to determine if a redirect occurred in step 2.

After some trial and error, here's my final script.
```markup


