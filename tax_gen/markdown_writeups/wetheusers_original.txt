<h1>Evlz CTF 2019 â€“ WeTheUsers</h1>

<ul>
<li><strong>Category:</strong> Web</li>
<li><strong>Points:</strong> 100</li>
</ul>

<h2>Challenge</h2>

<blockquote>
  <p><a href="http://13.232.233.247:1337/">http://13.232.233.247:1337/</a></p>
  
  <p><a href="https://pastebin.com/VWmk2Jdy">https://pastebin.com/VWmk2Jdy</a></p>
</blockquote>

<h2>Solution</h2>

<p>The <a href="source.py">source code</a> of the application is given for this challenge.</p>

<p>Analyzing it, you can discover that during user registration data is packed with a format like <code>username:password:admin</code>.</p>

<p>The <code>admin</code> field can be <code>true</code> or <code>false</code> and during the normal registration process a <code>false</code> value is forced into the ACL.</p>

<p>There are no escaping countermeasures for <code>:</code> char, hence a record could be crafted and injected passing a password with that char, in order to bypass the <code>false</code> value forced, creating an admin account.</p>

<p>For example, you can use following values during registration:
* username: <code>m3ssap0</code>
* password: <code>pwnd:true</code></p>

<p>Logging in with the created user will show the flag:</p>

<p><code>
evlz{T#3_W34K_$N4K3}ctf
</code></p>
